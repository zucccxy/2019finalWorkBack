<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.lis_dao.ArticleDao">
  <resultMap id="BaseResultMap" type="org.lis_entity.Article">
    <id column="article_id" jdbcType="BIGINT" property="articleId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="expect" jdbcType="VARCHAR" property="expect" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="read_count" jdbcType="BIGINT" property="readCount" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="content" jdbcType="VARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    article_id, title, expect, author, read_count, create_time, update_time, content
  </sql>
  <select id="selectByExample" parameterType="org.lis_entity.ArticleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from article
    where article_id = #{articleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from article
    where article_id = #{articleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="org.lis_entity.ArticleExample">
    delete from article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="article_id" keyProperty="articleId" parameterType="org.lis_entity.Article" useGeneratedKeys="true">
    insert into article (title, expect, author, 
      read_count, create_time, update_time, 
      content)
    values (#{title,jdbcType=VARCHAR}, #{expect,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR}, 
      #{readCount,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{content,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="article_id" keyProperty="articleId" parameterType="org.lis_entity.Article" useGeneratedKeys="true">
    insert into article
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="title != null">
        title,
      </if>
      <if test="expect != null">
        expect,
      </if>
      <if test="author != null">
        author,
      </if>
      <if test="readCount != null">
        read_count,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="expect != null">
        #{expect,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="readCount != null">
        #{readCount,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.lis_entity.ArticleExample" resultType="java.lang.Long">
    select count(*) from article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update article
    <set>
      <if test="record.articleId != null">
        article_id = #{record.articleId,jdbcType=BIGINT},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.expect != null">
        expect = #{record.expect,jdbcType=VARCHAR},
      </if>
      <if test="record.author != null">
        author = #{record.author,jdbcType=VARCHAR},
      </if>
      <if test="record.readCount != null">
        read_count = #{record.readCount,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update article
    set article_id = #{record.articleId,jdbcType=BIGINT},
      title = #{record.title,jdbcType=VARCHAR},
      expect = #{record.expect,jdbcType=VARCHAR},
      author = #{record.author,jdbcType=VARCHAR},
      read_count = #{record.readCount,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      content = #{record.content,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.lis_entity.Article">
    update article
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="expect != null">
        expect = #{expect,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="readCount != null">
        read_count = #{readCount,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
    </set>
    where article_id = #{articleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.lis_entity.Article">
    update article
    set title = #{title,jdbcType=VARCHAR},
      expect = #{expect,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      read_count = #{readCount,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=VARCHAR}
    where article_id = #{articleId,jdbcType=BIGINT}
  </update>
  <select id="selectByCommentResultCondition" parameterType="Map" resultType="org.lis_entity.CommentResult">
    select comment_id as commentId,comment_content as commentContent,title,comment.create_time as createTime,username
    from comment inner join user on comment.user_id = user.user_id inner join article on comment.article_id = article.article_id
    <where>
      <if test="username!=null and username!=''">
        username like  "%"#{username}"%"
      </if>
      <if test="title!=null and title!=''">
        AND title like  "%"#{title}"%"
      </if>
      <if test="commentContent!=null and commentContent!=''">
        AND comment_content like  "%"#{commentContent}"%"
      </if>
      <if test="startTime!=null">
        AND  comment.create_time &gt;=  #{startTime}
      </if>
      <if test="endTime!=null">
        AND  comment.create_time  &lt;=  #{endTime}
      </if>
    </where>
    order by title
  </select>
  <select id="selectByReplayResultCondition" parameterType="Map" resultType="org.lis_entity.ReplayResult">
    select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime
    from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id
    <where>
     replay.comment_id = #{commentId}
    <if test="username!=null and username!=''">
      AND   username like  "%"#{username}"%"
      </if>
      <if test="replyContent!=null and replyContent!=''">
        AND reply_content like  "%"#{replyContent}"%"
      </if>
      <if test="startTime!=null">
        AND  replay.create_time &gt;=  #{startTime}
      </if>
      <if test="endTime!=null">
        AND  replay.create_time  &lt;=  #{endTime}
      </if>
    </where>
    order by username
  </select>

  <select id="selectArticleListByCategoryId" parameterType="java.lang.Long" resultType="org.lis_entity.Article">
    select article.article_id as articleId,title,expect,author,read_count as readCount,article.create_time as createTime
from article_category inner join article on article_category.article__id = article.article_id inner join category on article_category.category_id = category.category_id
where  article_category.category_id = #{categoryId}

  </select>
</mapper>