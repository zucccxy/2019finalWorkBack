<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.lis_dao.AdminDao">
  <resultMap id="BaseResultMap" type="org.lis_entity.Admin">
    <id column="admin_id" jdbcType="BIGINT" property="adminId" />
    <result column="admin_phone" jdbcType="VARCHAR" property="adminPhone" />
<result column="admin_name" jdbcType="VARCHAR" property="adminName" />
<result column="admin_sex" jdbcType="INTEGER" property="adminSex" />
<result column="admin_pic" jdbcType="VARCHAR" property="adminPic" />
<result column="admin_level" jdbcType="INTEGER" property="adminLevel" />
<result column="admin_state" jdbcType="INTEGER" property="adminState" />
<result column="admin_pwd" jdbcType="VARCHAR" property="adminPwd" />
        </resultMap>
<sql id="Example_Where_Clause">
<where>
  <foreach collection="oredCriteria" item="criteria" separator="or">
    <if test="criteria.valid">
      <trim prefix="(" prefixOverrides="and" suffix=")">
        <foreach collection="criteria.criteria" item="criterion">
          <choose>
            <when test="criterion.noValue">
              and ${criterion.condition}
            </when>
            <when test="criterion.singleValue">
              and ${criterion.condition} #{criterion.value}
            </when>
            <when test="criterion.betweenValue">
              and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
            </when>
            <when test="criterion.listValue">
              and ${criterion.condition}
              <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                #{listItem}
              </foreach>
            </when>
          </choose>
        </foreach>
      </trim>
    </if>
  </foreach>
</where>
</sql>
<sql id="Update_By_Example_Where_Clause">
<where>
  <foreach collection="example.oredCriteria" item="criteria" separator="or">
    <if test="criteria.valid">
      <trim prefix="(" prefixOverrides="and" suffix=")">
        <foreach collection="criteria.criteria" item="criterion">
          <choose>
            <when test="criterion.noValue">
              and ${criterion.condition}
            </when>
            <when test="criterion.singleValue">
              and ${criterion.condition} #{criterion.value}
            </when>
            <when test="criterion.betweenValue">
              and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
            </when>
            <when test="criterion.listValue">
              and ${criterion.condition}
              <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                #{listItem}
              </foreach>
            </when>
          </choose>
        </foreach>
      </trim>
    </if>
  </foreach>
</where>
</sql>
<sql id="Base_Column_List">
    admin_id, admin_phone, admin_name, admin_sex, admin_pic, admin_level, admin_state,
    admin_pwd
  </sql>
<select id="selectByExample" parameterType="org.lis_entity.AdminExample" resultMap="BaseResultMap">
select
<if test="distinct">
  distinct
</if>
<include refid="Base_Column_List" />
from admin
<if test="_parameter != null">
  <include refid="Example_Where_Clause" />
</if>
<if test="orderByClause != null">
  order by ${orderByClause}
</if>
<if test="limit != null">
  <if test="offset != null">
    limit ${offset}, ${limit}
  </if>
  <if test="offset == null">
    limit ${limit}
  </if>
</if>
</select>
<select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
select
<include refid="Base_Column_List" />
from admin
where admin_id = #{adminId,jdbcType=BIGINT}
</select>
<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from admin
    where admin_id = #{adminId,jdbcType=BIGINT}
  </delete>
<delete id="deleteByExample" parameterType="org.lis_entity.AdminExample">
delete from admin
<if test="_parameter != null">
  <include refid="Example_Where_Clause" />
</if>
</delete>
<insert id="insert" keyColumn="admin_id" keyProperty="adminId" parameterType="org.lis_entity.Admin" useGeneratedKeys="true">
    insert into admin (admin_phone, admin_name, admin_sex,
      admin_pic, admin_level, admin_state,
      admin_pwd)
    values (#{adminPhone,jdbcType=VARCHAR}, #{adminName,jdbcType=VARCHAR}, #{adminSex,jdbcType=INTEGER},
      #{adminPic,jdbcType=VARCHAR}, #{adminLevel,jdbcType=INTEGER}, #{adminState,jdbcType=INTEGER},
      #{adminPwd,jdbcType=VARCHAR})
  </insert>
<insert id="insertSelective" keyColumn="admin_id" keyProperty="adminId" parameterType="org.lis_entity.Admin" useGeneratedKeys="true">
insert into admin
<trim prefix="(" suffix=")" suffixOverrides=",">
  <if test="adminPhone != null">
    admin_phone,
  </if>
  <if test="adminName != null">
    admin_name,
  </if>
  <if test="adminSex != null">
    admin_sex,
  </if>
  <if test="adminPic != null">
    admin_pic,
  </if>
  <if test="adminLevel != null">
    admin_level,
  </if>
  <if test="adminState != null">
    admin_state,
  </if>
  <if test="adminPwd != null">
    admin_pwd,
  </if>
</trim>
<trim prefix="values (" suffix=")" suffixOverrides=",">
  <if test="adminPhone != null">
    #{adminPhone,jdbcType=VARCHAR},
  </if>
  <if test="adminName != null">
    #{adminName,jdbcType=VARCHAR},
  </if>
  <if test="adminSex != null">
    #{adminSex,jdbcType=INTEGER},
  </if>
  <if test="adminPic != null">
    #{adminPic,jdbcType=VARCHAR},
  </if>
  <if test="adminLevel != null">
    #{adminLevel,jdbcType=INTEGER},
  </if>
  <if test="adminState != null">
    #{adminState,jdbcType=INTEGER},
  </if>
  <if test="adminPwd != null">
    #{adminPwd,jdbcType=VARCHAR},
  </if>
</trim>
</insert>
<select id="countByExample" parameterType="org.lis_entity.AdminExample" resultType="java.lang.Long">
select count(*) from admin
<if test="_parameter != null">
  <include refid="Example_Where_Clause" />
</if>
</select>
<update id="updateByExampleSelective" parameterType="map">
update admin
<set>
  <if test="record.adminId != null">
    admin_id = #{record.adminId,jdbcType=BIGINT},
  </if>
  <if test="record.adminPhone != null">
    admin_phone = #{record.adminPhone,jdbcType=VARCHAR},
  </if>
  <if test="record.adminName != null">
    admin_name = #{record.adminName,jdbcType=VARCHAR},
  </if>
  <if test="record.adminSex != null">
    admin_sex = #{record.adminSex,jdbcType=INTEGER},
  </if>
  <if test="record.adminPic != null">
    admin_pic = #{record.adminPic,jdbcType=VARCHAR},
  </if>
  <if test="record.adminLevel != null">
    admin_level = #{record.adminLevel,jdbcType=INTEGER},
  </if>
  <if test="record.adminState != null">
    admin_state = #{record.adminState,jdbcType=INTEGER},
  </if>
  <if test="record.adminPwd != null">
    admin_pwd = #{record.adminPwd,jdbcType=VARCHAR},
  </if>
</set>
<if test="_parameter != null">
  <include refid="Update_By_Example_Where_Clause" />
</if>
</update>
<update id="updateByExample" parameterType="map">
update admin
set admin_id = #{record.adminId,jdbcType=BIGINT},
admin_phone = #{record.adminPhone,jdbcType=VARCHAR},
admin_name = #{record.adminName,jdbcType=VARCHAR},
admin_sex = #{record.adminSex,jdbcType=INTEGER},
admin_pic = #{record.adminPic,jdbcType=VARCHAR},
admin_level = #{record.adminLevel,jdbcType=INTEGER},
admin_state = #{record.adminState,jdbcType=INTEGER},
admin_pwd = #{record.adminPwd,jdbcType=VARCHAR}
<if test="_parameter != null">
  <include refid="Update_By_Example_Where_Clause" />
</if>
</update>
<update id="updateByPrimaryKeySelective" parameterType="org.lis_entity.Admin">
        update admin
<set>
<if test="adminPhone != null">
  admin_phone = #{adminPhone,jdbcType=VARCHAR},
</if>
<if test="adminName != null">
  admin_name = #{adminName,jdbcType=VARCHAR},
</if>
<if test="adminSex != null">
  admin_sex = #{adminSex,jdbcType=INTEGER},
</if>
<if test="adminPic != null">
  admin_pic = #{adminPic,jdbcType=VARCHAR},
</if>
<if test="adminLevel != null">
  admin_level = #{adminLevel,jdbcType=INTEGER},
</if>
<if test="adminState != null">
  admin_state = #{adminState,jdbcType=INTEGER},
</if>
<if test="adminPwd != null">
  admin_pwd = #{adminPwd,jdbcType=VARCHAR},
</if>
</set>
        where admin_id = #{adminId,jdbcType=BIGINT}
        </update>
<update id="updateByPrimaryKey" parameterType="org.lis_entity.Admin">
        update admin
        set admin_phone = #{adminPhone,jdbcType=VARCHAR},
        admin_name = #{adminName,jdbcType=VARCHAR},
        admin_sex = #{adminSex,jdbcType=INTEGER},
        admin_pic = #{adminPic,jdbcType=VARCHAR},
        admin_level = #{adminLevel,jdbcType=INTEGER},
        admin_state = #{adminState,jdbcType=INTEGER},
        admin_pwd = #{adminPwd,jdbcType=VARCHAR}
        where admin_id = #{adminId,jdbcType=BIGINT}
        </update>
        </mapper>