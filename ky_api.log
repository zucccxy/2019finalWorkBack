2018/09/18-11:32 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on szdeMacBook-Pro.local with PID 6816 (/Users/sz/yunlis/lis_api/target/classes started by sz in /Users/sz/yunlis)
2018/09/18-11:32 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/09/18-11:32 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/09/18-11:32 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/09/18-11:32 [restartedMain] WARN  org.springframework.boot.autoconfigure.thymeleaf.AbstractTemplateResolverConfiguration- Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2018/09/18-11:32 [restartedMain] INFO  org.hzqisheng.Application- Started Application in 24.741 seconds (JVM running for 30.906)
2018/12/27-09:13 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 14800 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/27-09:13 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/27-09:13 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/27-09:13 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/27-09:13 [restartedMain] INFO  org.hzqisheng.Application- Started Application in 8.989 seconds (JVM running for 11.455)
2018/12/27-09:28 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 3840 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/27-09:28 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/27-09:28 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/27-09:28 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/27-09:29 [restartedMain] INFO  org.hzqisheng.Application- Started Application in 7.777 seconds (JVM running for 9.666)
2018/12/27-09:30 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 6660 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/27-09:30 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/27-09:30 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/27-09:30 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/27-09:30 [restartedMain] INFO  org.hzqisheng.Application- Started Application in 9.254 seconds (JVM running for 11.597)
2018/12/27-09:31 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 6660 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/27-09:31 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/27-09:31 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/27-09:31 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 8364 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/27-09:31 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/27-09:31 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/27-09:31 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/27-09:31 [restartedMain] INFO  org.hzqisheng.Application- Started Application in 10.429 seconds (JVM running for 12.244)
2018/12/27-09:36 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 10092 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/27-09:36 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/27-09:36 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/27-09:36 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/27-09:36 [restartedMain] INFO  org.hzqisheng.Application- Started Application in 8.167 seconds (JVM running for 10.2)
2018/12/27-09:42 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 2452 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/27-09:42 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/27-09:42 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/27-09:42 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/27-09:42 [restartedMain] INFO  org.hzqisheng.Application- Started Application in 7.767 seconds (JVM running for 10.487)
2018/12/27-09:42 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 2268 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/27-09:42 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/27-09:42 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/27-09:43 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/27-09:43 [restartedMain] INFO  org.hzqisheng.Application- Started Application in 12.474 seconds (JVM running for 15.411)
2018/12/27-09:45 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 1144 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/27-09:45 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/27-09:45 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/27-09:45 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/27-09:45 [restartedMain] INFO  org.hzqisheng.Application- Started Application in 7.536 seconds (JVM running for 9.346)
2018/12/27-09:55 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 13368 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/27-09:55 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/27-09:55 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/27-09:55 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/27-09:56 [restartedMain] INFO  org.hzqisheng.Application- Started Application in 13.839 seconds (JVM running for 17.843)
2018/12/27-09:56 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 7200 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/27-09:56 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/27-09:56 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/27-09:56 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/27-09:56 [restartedMain] INFO  org.hzqisheng.Application- Started Application in 6.784 seconds (JVM running for 8.694)
2018/12/27-09:57 [http-nio-12080-exec-1] DEBUG org.lis_dao.UserDao.selectByExample- ==>  Preparing: select user_id, username, avatarUrl, authority, `password`, account from user WHERE ( account = ? ) 
2018/12/27-09:57 [http-nio-12080-exec-1] DEBUG org.lis_dao.UserDao.selectByExample- ==> Parameters: 123456(String)
2018/12/27-09:57 [http-nio-12080-exec-1] DEBUG org.lis_dao.UserDao.selectByExample- <==      Total: 1
2018/12/27-09:57 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.UserController- 管理员登录....................
2018/12/27-09:59 [http-nio-12080-exec-3] DEBUG org.lis_dao.UserDao.selectByExample- ==>  Preparing: select user_id, username, avatarUrl, authority, `password`, account from user WHERE ( account = ? ) 
2018/12/27-09:59 [http-nio-12080-exec-3] DEBUG org.lis_dao.UserDao.selectByExample- ==> Parameters: 123456(String)
2018/12/27-09:59 [http-nio-12080-exec-3] DEBUG org.lis_dao.UserDao.selectByExample- <==      Total: 1
2018/12/27-09:59 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.UserController- 管理员登录....................
2018/12/27-10:02 [http-nio-12080-exec-5] DEBUG org.lis_dao.UserDao.selectByExample- ==>  Preparing: select user_id, username, avatarUrl, authority, `password`, account from user WHERE ( account = ? ) 
2018/12/27-10:02 [http-nio-12080-exec-5] DEBUG org.lis_dao.UserDao.selectByExample- ==> Parameters: 123456(String)
2018/12/27-10:02 [http-nio-12080-exec-5] DEBUG org.lis_dao.UserDao.selectByExample- <==      Total: 1
2018/12/27-10:02 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.UserController- 管理员登录....................
2018/12/27-10:05 [http-nio-12080-exec-8] DEBUG org.lis_dao.UserDao.selectByExample- ==>  Preparing: select user_id, username, avatarUrl, authority, `password`, account from user WHERE ( account = ? ) 
2018/12/27-10:05 [http-nio-12080-exec-8] DEBUG org.lis_dao.UserDao.selectByExample- ==> Parameters: 123456(String)
2018/12/27-10:05 [http-nio-12080-exec-8] DEBUG org.lis_dao.UserDao.selectByExample- <==      Total: 1
2018/12/27-10:05 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.UserController- 管理员登录....................
2018/12/27-10:10 [http-nio-12080-exec-9] DEBUG org.lis_dao.UserDao.selectByExample- ==>  Preparing: select user_id, username, avatarUrl, authority, `password`, account from user WHERE ( account = ? ) 
2018/12/27-10:10 [http-nio-12080-exec-9] DEBUG org.lis_dao.UserDao.selectByExample- ==> Parameters: 123456(String)
2018/12/27-10:10 [http-nio-12080-exec-9] DEBUG org.lis_dao.UserDao.selectByExample- <==      Total: 1
2018/12/27-10:10 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.UserController- 管理员登录....................
2018/12/27-10:11 [http-nio-12080-exec-10] DEBUG org.lis_dao.UserDao.selectByExample- ==>  Preparing: select user_id, username, avatarUrl, authority, `password`, account from user WHERE ( account = ? ) 
2018/12/27-10:11 [http-nio-12080-exec-10] DEBUG org.lis_dao.UserDao.selectByExample- ==> Parameters: 123456(String)
2018/12/27-10:11 [http-nio-12080-exec-10] DEBUG org.lis_dao.UserDao.selectByExample- <==      Total: 1
2018/12/27-10:11 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.UserController- 管理员登录....................
2018/12/27-10:20 [http-nio-12080-exec-2] DEBUG org.lis_dao.UserDao.selectByExample- ==>  Preparing: select user_id, username, avatarUrl, authority, `password`, account from user WHERE ( account = ? ) 
2018/12/27-10:20 [http-nio-12080-exec-2] DEBUG org.lis_dao.UserDao.selectByExample- ==> Parameters: 123456(String)
2018/12/27-10:20 [http-nio-12080-exec-2] DEBUG org.lis_dao.UserDao.selectByExample- <==      Total: 1
2018/12/27-10:20 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.UserController- 管理员登录....................
2018/12/27-10:24 [http-nio-12080-exec-4] DEBUG org.lis_dao.UserDao.selectByExample- ==>  Preparing: select user_id, username, avatarUrl, authority, `password`, account from user WHERE ( account = ? ) 
2018/12/27-10:24 [http-nio-12080-exec-4] DEBUG org.lis_dao.UserDao.selectByExample- ==> Parameters: 123456(String)
2018/12/27-10:24 [http-nio-12080-exec-4] DEBUG org.lis_dao.UserDao.selectByExample- <==      Total: 1
2018/12/27-10:24 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.UserController- 管理员登录....................
2018/12/27-10:24 [http-nio-12080-exec-5] DEBUG org.lis_dao.UserDao.selectByExample- ==>  Preparing: select user_id, username, avatarUrl, authority, `password`, account from user WHERE ( account = ? ) 
2018/12/27-10:24 [http-nio-12080-exec-5] DEBUG org.lis_dao.UserDao.selectByExample- ==> Parameters: 123456(String)
2018/12/27-10:24 [http-nio-12080-exec-5] DEBUG org.lis_dao.UserDao.selectByExample- <==      Total: 1
2018/12/27-10:24 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.UserController- 管理员登录....................
2018/12/27-10:29 [http-nio-12080-exec-8] DEBUG org.lis_dao.UserDao.selectByExample- ==>  Preparing: select user_id, username, avatarUrl, authority, `password`, account from user WHERE ( account = ? ) 
2018/12/27-10:29 [http-nio-12080-exec-8] DEBUG org.lis_dao.UserDao.selectByExample- ==> Parameters: 123456(String)
2018/12/27-10:29 [http-nio-12080-exec-8] DEBUG org.lis_dao.UserDao.selectByExample- <==      Total: 1
2018/12/27-10:29 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.UserController- 管理员登录....................
2018/12/27-10:31 [http-nio-12080-exec-9] DEBUG org.lis_dao.UserDao.selectByExample- ==>  Preparing: select user_id, username, avatarUrl, authority, `password`, account from user WHERE ( account = ? ) 
2018/12/27-10:31 [http-nio-12080-exec-9] DEBUG org.lis_dao.UserDao.selectByExample- ==> Parameters: 123456(String)
2018/12/27-10:31 [http-nio-12080-exec-9] DEBUG org.lis_dao.UserDao.selectByExample- <==      Total: 1
2018/12/27-10:31 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.UserController- 管理员登录....................
2018/12/27-10:32 [http-nio-12080-exec-1] DEBUG org.lis_dao.UserDao.selectByExample- ==>  Preparing: select user_id, username, avatarUrl, authority, `password`, account from user WHERE ( account = ? ) 
2018/12/27-10:32 [http-nio-12080-exec-1] DEBUG org.lis_dao.UserDao.selectByExample- ==> Parameters: 123456(String)
2018/12/27-10:32 [http-nio-12080-exec-1] DEBUG org.lis_dao.UserDao.selectByExample- <==      Total: 1
2018/12/27-10:32 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.UserController- 管理员登录....................
2018/12/27-10:32 [http-nio-12080-exec-2] DEBUG org.lis_dao.UserDao.selectByExample- ==>  Preparing: select user_id, username, avatarUrl, authority, `password`, account from user WHERE ( account = ? ) 
2018/12/27-10:32 [http-nio-12080-exec-2] DEBUG org.lis_dao.UserDao.selectByExample- ==> Parameters: 123456(String)
2018/12/27-10:32 [http-nio-12080-exec-2] DEBUG org.lis_dao.UserDao.selectByExample- <==      Total: 1
2018/12/27-10:32 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.UserController- 管理员登录....................
2018/12/27-10:33 [http-nio-12080-exec-3] DEBUG org.lis_dao.UserDao.selectByExample- ==>  Preparing: select user_id, username, avatarUrl, authority, `password`, account from user WHERE ( account = ? ) 
2018/12/27-10:33 [http-nio-12080-exec-3] DEBUG org.lis_dao.UserDao.selectByExample- ==> Parameters: 123456(String)
2018/12/27-10:33 [http-nio-12080-exec-3] DEBUG org.lis_dao.UserDao.selectByExample- <==      Total: 1
2018/12/27-10:33 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.UserController- 管理员登录....................
2018/12/27-10:35 [http-nio-12080-exec-5] DEBUG org.lis_dao.UserDao.selectByExample- ==>  Preparing: select user_id, username, avatarUrl, authority, `password`, account from user WHERE ( account = ? ) 
2018/12/27-10:35 [http-nio-12080-exec-5] DEBUG org.lis_dao.UserDao.selectByExample- ==> Parameters: 123456(String)
2018/12/27-10:35 [http-nio-12080-exec-5] DEBUG org.lis_dao.UserDao.selectByExample- <==      Total: 1
2018/12/27-10:35 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.UserController- 管理员登录....................
2018/12/27-10:40 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 14992 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/27-10:40 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/27-10:40 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/27-10:40 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/27-10:40 [restartedMain] INFO  org.hzqisheng.Application- Started Application in 11.626 seconds (JVM running for 14.488)
2018/12/27-10:55 [http-nio-12080-exec-1] DEBUG org.lis_dao.UserDao.selectByExample- ==>  Preparing: select user_id, username, avatarUrl, authority, `password`, account from user WHERE ( account = ? ) 
2018/12/27-10:55 [http-nio-12080-exec-1] DEBUG org.lis_dao.UserDao.selectByExample- ==> Parameters: 123456(String)
2018/12/27-10:55 [http-nio-12080-exec-1] DEBUG org.lis_dao.UserDao.selectByExample- <==      Total: 1
2018/12/27-10:55 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.UserController- 管理员登录------------------------------------
2018/12/27-10:56 [http-nio-12080-exec-5] DEBUG org.lis_dao.UserDao.selectByExample- ==>  Preparing: select user_id, username, avatarUrl, authority, `password`, account from user WHERE ( account = ? ) 
2018/12/27-10:56 [http-nio-12080-exec-5] DEBUG org.lis_dao.UserDao.selectByExample- ==> Parameters: 123456(String)
2018/12/27-10:56 [http-nio-12080-exec-5] DEBUG org.lis_dao.UserDao.selectByExample- <==      Total: 1
2018/12/27-10:56 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.UserController- 管理员登录------------------------------------
2018/12/27-10:57 [http-nio-12080-exec-6] DEBUG org.lis_dao.UserDao.selectByExample- ==>  Preparing: select user_id, username, avatarUrl, authority, `password`, account from user WHERE ( account = ? ) 
2018/12/27-10:57 [http-nio-12080-exec-6] DEBUG org.lis_dao.UserDao.selectByExample- ==> Parameters: 123456(String)
2018/12/27-10:57 [http-nio-12080-exec-6] DEBUG org.lis_dao.UserDao.selectByExample- <==      Total: 1
2018/12/27-10:57 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.UserController- 管理员登录------------------------------------
2018/12/27-10:59 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 13692 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/27-10:59 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/27-10:59 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/27-10:59 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/27-10:59 [restartedMain] INFO  org.hzqisheng.Application- Started Application in 9.221 seconds (JVM running for 11.335)
2018/12/27-11:00 [http-nio-12080-exec-4] DEBUG org.lis_dao.UserDao.selectByExample- ==>  Preparing: select user_id, username, avatarUrl, authority, `password`, account from user WHERE ( account = ? ) 
2018/12/27-11:00 [http-nio-12080-exec-4] DEBUG org.lis_dao.UserDao.selectByExample- ==> Parameters: 123456(String)
2018/12/27-11:00 [http-nio-12080-exec-4] DEBUG org.lis_dao.UserDao.selectByExample- <==      Total: 1
2018/12/27-11:00 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.UserController- 用户登录------------------------------------
2018/12/27-11:00 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.UserController- User [Hash = 70454689, userId=3, username=cxf10, avatarurl=http://bmob-cdn-15555.b0.upaiyun.com/2018/01/09/e155570340eb843b80af3a7625c39542.jpg, authority=1, password=123456, account=123456, serialVersionUID=1]------------------------------------
2018/12/27-11:02 [http-nio-12080-exec-8] DEBUG org.lis_dao.UserDao.selectByExample- ==>  Preparing: select user_id, username, avatarUrl, authority, `password`, account from user WHERE ( account = ? ) 
2018/12/27-11:02 [http-nio-12080-exec-8] DEBUG org.lis_dao.UserDao.selectByExample- ==> Parameters: 123456(String)
2018/12/27-11:02 [http-nio-12080-exec-8] DEBUG org.lis_dao.UserDao.selectByExample- <==      Total: 1
2018/12/27-11:02 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.UserController- 用户登录------------------------------------
2018/12/27-11:02 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.UserController- User [Hash = 70454689, userId=3, username=cxf10, avatarurl=http://bmob-cdn-15555.b0.upaiyun.com/2018/01/09/e155570340eb843b80af3a7625c39542.jpg, authority=1, password=123456, account=123456, serialVersionUID=1]------------------------------------
2018/12/27-11:04 [http-nio-12080-exec-2] DEBUG org.lis_dao.UserDao.selectByExample- ==>  Preparing: select user_id, username, avatarUrl, authority, `password`, account from user WHERE ( account = ? ) 
2018/12/27-11:04 [http-nio-12080-exec-2] DEBUG org.lis_dao.UserDao.selectByExample- ==> Parameters: 123456(String)
2018/12/27-11:04 [http-nio-12080-exec-2] DEBUG org.lis_dao.UserDao.selectByExample- <==      Total: 1
2018/12/27-11:04 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.UserController- 用户登录------------------------------------
2018/12/27-11:04 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.UserController- User [Hash = 70454689, userId=3, username=cxf10, avatarurl=http://bmob-cdn-15555.b0.upaiyun.com/2018/01/09/e155570340eb843b80af3a7625c39542.jpg, authority=1, password=123456, account=123456, serialVersionUID=1]------------------------------------
2018/12/27-11:05 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.UserController- 用户退出登录------------------------------------
2018/12/27-11:06 [http-nio-12080-exec-7] DEBUG org.lis_dao.UserDao.selectByExample- ==>  Preparing: select user_id, username, avatarUrl, authority, `password`, account from user WHERE ( account = ? ) 
2018/12/27-11:06 [http-nio-12080-exec-7] DEBUG org.lis_dao.UserDao.selectByExample- ==> Parameters: 123456(String)
2018/12/27-11:06 [http-nio-12080-exec-7] DEBUG org.lis_dao.UserDao.selectByExample- <==      Total: 1
2018/12/27-11:06 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.UserController- 用户登录------------------------------------
2018/12/27-11:06 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.UserController- User [Hash = 70454689, userId=3, username=cxf10, avatarurl=http://bmob-cdn-15555.b0.upaiyun.com/2018/01/09/e155570340eb843b80af3a7625c39542.jpg, authority=1, password=123456, account=123456, serialVersionUID=1]------------------------------------
2018/12/27-11:11 [http-nio-12080-exec-3] DEBUG org.lis_dao.UserDao.selectByExample- ==>  Preparing: select user_id, username, avatarUrl, authority, `password`, account from user WHERE ( account = ? ) 
2018/12/27-11:11 [http-nio-12080-exec-3] DEBUG org.lis_dao.UserDao.selectByExample- ==> Parameters: 123456(String)
2018/12/27-11:11 [http-nio-12080-exec-3] DEBUG org.lis_dao.UserDao.selectByExample- <==      Total: 1
2018/12/27-11:11 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.UserController- 用户登录------------------------------------
2018/12/27-11:11 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.UserController- User [Hash = 70454689, userId=3, username=cxf10, avatarurl=http://bmob-cdn-15555.b0.upaiyun.com/2018/01/09/e155570340eb843b80af3a7625c39542.jpg, authority=1, password=123456, account=123456, serialVersionUID=1]------------------------------------
2018/12/27-11:12 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 14124 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/27-11:12 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/27-11:12 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/27-11:12 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/27-11:12 [restartedMain] INFO  org.hzqisheng.Application- Started Application in 11.73 seconds (JVM running for 14.206)
2018/12/27-11:12 [http-nio-12080-exec-1] DEBUG org.lis_dao.UserDao.selectByExample- ==>  Preparing: select user_id, username, avatarUrl, authority, `password`, account from user WHERE ( account = ? ) 
2018/12/27-11:12 [http-nio-12080-exec-1] DEBUG org.lis_dao.UserDao.selectByExample- ==> Parameters: 123456(String)
2018/12/27-11:12 [http-nio-12080-exec-1] DEBUG org.lis_dao.UserDao.selectByExample- <==      Total: 1
2018/12/27-11:12 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.UserController- 用户登录------------------------------------
2018/12/27-11:13 [http-nio-12080-exec-5] DEBUG org.lis_dao.UserDao.selectByExample- ==>  Preparing: select user_id, username, avatarUrl, authority, `password`, account from user WHERE ( account = ? ) 
2018/12/27-11:13 [http-nio-12080-exec-5] DEBUG org.lis_dao.UserDao.selectByExample- ==> Parameters: 123456(String)
2018/12/27-11:13 [http-nio-12080-exec-5] DEBUG org.lis_dao.UserDao.selectByExample- <==      Total: 1
2018/12/27-11:13 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.UserController- 用户登录------------------------------------
2018/12/27-11:13 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.UserController- 用户退出登录------------------------------------
2018/12/27-11:13 [http-nio-12080-exec-7] DEBUG org.lis_dao.UserDao.selectByExample- ==>  Preparing: select user_id, username, avatarUrl, authority, `password`, account from user WHERE ( account = ? ) 
2018/12/27-11:13 [http-nio-12080-exec-7] DEBUG org.lis_dao.UserDao.selectByExample- ==> Parameters: 123456(String)
2018/12/27-11:13 [http-nio-12080-exec-7] DEBUG org.lis_dao.UserDao.selectByExample- <==      Total: 1
2018/12/27-11:13 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.UserController- 用户登录------------------------------------
2018/12/27-11:13 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.UserController- 用户退出登录------------------------------------
2018/12/27-11:14 [http-nio-12080-exec-10] DEBUG org.lis_dao.UserDao.selectByExample- ==>  Preparing: select user_id, username, avatarUrl, authority, `password`, account from user WHERE ( account = ? ) 
2018/12/27-11:14 [http-nio-12080-exec-10] DEBUG org.lis_dao.UserDao.selectByExample- ==> Parameters: 123456(String)
2018/12/27-11:14 [http-nio-12080-exec-10] DEBUG org.lis_dao.UserDao.selectByExample- <==      Total: 1
2018/12/27-11:14 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.UserController- 用户登录------------------------------------
2018/12/27-11:14 [http-nio-12080-exec-2] DEBUG org.lis_dao.UserDao.selectByExample- ==>  Preparing: select user_id, username, avatarUrl, authority, `password`, account from user WHERE ( account = ? ) 
2018/12/27-11:14 [http-nio-12080-exec-2] DEBUG org.lis_dao.UserDao.selectByExample- ==> Parameters: 123456(String)
2018/12/27-11:14 [http-nio-12080-exec-2] DEBUG org.lis_dao.UserDao.selectByExample- <==      Total: 1
2018/12/27-11:14 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.UserController- 用户登录------------------------------------
2018/12/27-11:15 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.UserController- 用户退出登录------------------------------------
2018/12/27-11:17 [http-nio-12080-exec-9] DEBUG org.lis_dao.UserDao.selectByExample- ==>  Preparing: select user_id, username, avatarUrl, authority, `password`, account from user WHERE ( account = ? ) 
2018/12/27-11:17 [http-nio-12080-exec-9] DEBUG org.lis_dao.UserDao.selectByExample- ==> Parameters: 123456(String)
2018/12/27-11:17 [http-nio-12080-exec-9] DEBUG org.lis_dao.UserDao.selectByExample- <==      Total: 1
2018/12/27-11:17 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.UserController- 用户登录------------------------------------
2018/12/27-11:19 [http-nio-12080-exec-3] DEBUG org.lis_dao.UserDao.selectByExample- ==>  Preparing: select user_id, username, avatarUrl, authority, `password`, account from user WHERE ( account = ? ) 
2018/12/27-11:19 [http-nio-12080-exec-3] DEBUG org.lis_dao.UserDao.selectByExample- ==> Parameters: 123456(String)
2018/12/27-11:19 [http-nio-12080-exec-3] DEBUG org.lis_dao.UserDao.selectByExample- <==      Total: 1
2018/12/27-11:19 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.UserController- 用户登录------------------------------------
2018/12/27-11:19 [http-nio-12080-exec-4] DEBUG org.lis_dao.UserDao.selectByExample- ==>  Preparing: select user_id, username, avatarUrl, authority, `password`, account from user WHERE ( account = ? ) 
2018/12/27-11:19 [http-nio-12080-exec-4] DEBUG org.lis_dao.UserDao.selectByExample- ==> Parameters: 123456(String)
2018/12/27-11:19 [http-nio-12080-exec-4] DEBUG org.lis_dao.UserDao.selectByExample- <==      Total: 1
2018/12/27-11:19 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.UserController- 用户登录------------------------------------
2018/12/27-11:19 [http-nio-12080-exec-6] DEBUG org.lis_dao.UserDao.selectByExample- ==>  Preparing: select user_id, username, avatarUrl, authority, `password`, account from user WHERE ( account = ? ) 
2018/12/27-11:19 [http-nio-12080-exec-6] DEBUG org.lis_dao.UserDao.selectByExample- ==> Parameters: 123456(String)
2018/12/27-11:19 [http-nio-12080-exec-6] DEBUG org.lis_dao.UserDao.selectByExample- <==      Total: 1
2018/12/27-11:19 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.UserController- 用户登录------------------------------------
2018/12/27-11:20 [http-nio-12080-exec-7] DEBUG org.lis_dao.UserDao.selectByExample- ==>  Preparing: select user_id, username, avatarUrl, authority, `password`, account from user WHERE ( account = ? ) 
2018/12/27-11:20 [http-nio-12080-exec-7] DEBUG org.lis_dao.UserDao.selectByExample- ==> Parameters: 123456(String)
2018/12/27-11:20 [http-nio-12080-exec-7] DEBUG org.lis_dao.UserDao.selectByExample- <==      Total: 1
2018/12/27-11:20 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.UserController- 用户登录------------------------------------
2018/12/27-11:20 [http-nio-12080-exec-9] DEBUG org.lis_dao.UserDao.selectByExample- ==>  Preparing: select user_id, username, avatarUrl, authority, `password`, account from user WHERE ( account = ? ) 
2018/12/27-11:20 [http-nio-12080-exec-9] DEBUG org.lis_dao.UserDao.selectByExample- ==> Parameters: 123456(String)
2018/12/27-11:20 [http-nio-12080-exec-9] DEBUG org.lis_dao.UserDao.selectByExample- <==      Total: 1
2018/12/27-11:20 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.UserController- 用户登录------------------------------------
2018/12/27-11:20 [http-nio-12080-exec-3] DEBUG org.lis_dao.UserDao.selectByExample- ==>  Preparing: select user_id, username, avatarUrl, authority, `password`, account from user WHERE ( account = ? ) 
2018/12/27-11:20 [http-nio-12080-exec-3] DEBUG org.lis_dao.UserDao.selectByExample- ==> Parameters: 123456(String)
2018/12/27-11:20 [http-nio-12080-exec-3] DEBUG org.lis_dao.UserDao.selectByExample- <==      Total: 1
2018/12/27-11:20 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.UserController- 用户登录------------------------------------
2018/12/27-11:20 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.UserController- 用户退出登录------------------------------------
2018/12/27-11:20 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 12084 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/27-11:20 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/27-11:20 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/27-11:20 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/27-11:20 [restartedMain] INFO  org.hzqisheng.Application- Started Application in 7.938 seconds (JVM running for 10.077)
2018/12/27-11:23 [http-nio-12080-exec-1] DEBUG org.lis_dao.UserDao.selectByExample- ==>  Preparing: select user_id, username, avatarUrl, authority, `password`, account from user WHERE ( account = ? ) 
2018/12/27-11:23 [http-nio-12080-exec-1] DEBUG org.lis_dao.UserDao.selectByExample- ==> Parameters: 123456(String)
2018/12/27-11:23 [http-nio-12080-exec-1] DEBUG org.lis_dao.UserDao.selectByExample- <==      Total: 1
2018/12/27-11:23 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.UserController- 用户登录------------------------------------
2018/12/27-11:23 [http-nio-12080-exec-2] DEBUG org.lis_dao.UserDao.selectByExample- ==>  Preparing: select user_id, username, avatarUrl, authority, `password`, account from user WHERE ( account = ? ) 
2018/12/27-11:23 [http-nio-12080-exec-2] DEBUG org.lis_dao.UserDao.selectByExample- ==> Parameters: 123456(String)
2018/12/27-11:23 [http-nio-12080-exec-2] DEBUG org.lis_dao.UserDao.selectByExample- <==      Total: 1
2018/12/27-11:23 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.UserController- 用户登录------------------------------------
2018/12/27-11:23 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.UserController- 用户退出登录------------------------------------
2018/12/27-11:23 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 12556 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/27-11:23 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/27-11:23 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/27-11:23 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/27-11:23 [restartedMain] INFO  org.hzqisheng.Application- Started Application in 10.765 seconds (JVM running for 13.428)
2018/12/27-11:25 [http-nio-12080-exec-2] DEBUG org.lis_dao.UserDao.selectByExample- ==>  Preparing: select user_id, username, avatarUrl, authority, `password`, account from user WHERE ( account = ? ) 
2018/12/27-11:25 [http-nio-12080-exec-2] DEBUG org.lis_dao.UserDao.selectByExample- ==> Parameters: 123456(String)
2018/12/27-11:25 [http-nio-12080-exec-2] DEBUG org.lis_dao.UserDao.selectByExample- <==      Total: 1
2018/12/27-11:25 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.UserController- 用户登录------------------------------------
2018/12/27-11:25 [http-nio-12080-exec-3] DEBUG org.lis_dao.UserDao.selectByExample- ==>  Preparing: select user_id, username, avatarUrl, authority, `password`, account from user WHERE ( account = ? ) 
2018/12/27-11:25 [http-nio-12080-exec-3] DEBUG org.lis_dao.UserDao.selectByExample- ==> Parameters: 123456(String)
2018/12/27-11:25 [http-nio-12080-exec-3] DEBUG org.lis_dao.UserDao.selectByExample- <==      Total: 1
2018/12/27-11:25 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.UserController- 用户登录------------------------------------
2018/12/27-11:25 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 9520 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/27-11:25 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/27-11:25 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/27-11:25 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/27-11:26 [restartedMain] INFO  org.hzqisheng.Application- Started Application in 9.175 seconds (JVM running for 11.488)
2018/12/27-11:26 [http-nio-12080-exec-1] DEBUG org.lis_dao.UserDao.selectByExample- ==>  Preparing: select user_id, username, avatarUrl, authority, `password`, account from user WHERE ( account = ? ) 
2018/12/27-11:26 [http-nio-12080-exec-1] DEBUG org.lis_dao.UserDao.selectByExample- ==> Parameters: 123456(String)
2018/12/27-11:26 [http-nio-12080-exec-1] DEBUG org.lis_dao.UserDao.selectByExample- <==      Total: 1
2018/12/27-11:26 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.UserController- 用户登录------------------------------------
2018/12/27-11:26 [http-nio-12080-exec-2] DEBUG org.lis_dao.UserDao.selectByExample- ==>  Preparing: select user_id, username, avatarUrl, authority, `password`, account from user WHERE ( account = ? ) 
2018/12/27-11:26 [http-nio-12080-exec-2] DEBUG org.lis_dao.UserDao.selectByExample- ==> Parameters: 123456(String)
2018/12/27-11:26 [http-nio-12080-exec-2] DEBUG org.lis_dao.UserDao.selectByExample- <==      Total: 1
2018/12/27-11:26 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.UserController- 用户登录------------------------------------
2018/12/27-11:27 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 12980 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/27-11:27 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/27-11:27 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/27-11:27 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/27-11:27 [restartedMain] INFO  org.hzqisheng.Application- Started Application in 9.014 seconds (JVM running for 11.904)
2018/12/27-11:31 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 11868 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/27-11:31 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/27-11:31 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/27-11:31 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/27-11:31 [restartedMain] INFO  org.hzqisheng.Application- Started Application in 12.424 seconds (JVM running for 14.697)
2018/12/27-11:32 [http-nio-12080-exec-1] DEBUG org.lis_dao.UserDao.selectByExample- ==>  Preparing: select user_id, username, avatarUrl, authority, `password`, account from user WHERE ( account = ? ) 
2018/12/27-11:32 [http-nio-12080-exec-1] DEBUG org.lis_dao.UserDao.selectByExample- ==> Parameters: 123456(String)
2018/12/27-11:32 [http-nio-12080-exec-1] DEBUG org.lis_dao.UserDao.selectByExample- <==      Total: 1
2018/12/27-11:32 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.UserController- 用户登录------------------------------------
2018/12/27-11:32 [http-nio-12080-exec-2] INFO  org.hzqisheng.interceptor.MyInterceptor- null------------------------------------
2018/12/27-11:32 [http-nio-12080-exec-3] DEBUG org.lis_dao.UserDao.selectByExample- ==>  Preparing: select user_id, username, avatarUrl, authority, `password`, account from user WHERE ( account = ? ) 
2018/12/27-11:32 [http-nio-12080-exec-3] DEBUG org.lis_dao.UserDao.selectByExample- ==> Parameters: 123456(String)
2018/12/27-11:32 [http-nio-12080-exec-3] DEBUG org.lis_dao.UserDao.selectByExample- <==      Total: 1
2018/12/27-11:32 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.UserController- 用户登录------------------------------------
2018/12/27-11:35 [http-nio-12080-exec-5] DEBUG org.lis_dao.UserDao.selectByExample- ==>  Preparing: select user_id, username, avatarUrl, authority, `password`, account from user WHERE ( account = ? ) 
2018/12/27-11:35 [http-nio-12080-exec-5] DEBUG org.lis_dao.UserDao.selectByExample- ==> Parameters: 123456(String)
2018/12/27-11:35 [http-nio-12080-exec-5] DEBUG org.lis_dao.UserDao.selectByExample- <==      Total: 1
2018/12/27-11:35 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.UserController- 用户登录------------------------------------
2018/12/27-11:35 [http-nio-12080-exec-7] INFO  org.hzqisheng.interceptor.MyInterceptor- User [Hash = 70454689, userId=3, username=cxf10, avatarurl=http://bmob-cdn-15555.b0.upaiyun.com/2018/01/09/e155570340eb843b80af3a7625c39542.jpg, authority=1, password=123456, account=123456, serialVersionUID=1]------------------------------------
2018/12/27-11:35 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.UserController- 用户退出登录------------------------------------
2018/12/27-14:24 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 12964 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/27-14:24 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/27-14:24 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/27-14:24 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/27-14:24 [restartedMain] INFO  org.hzqisheng.Application- Started Application in 12.676 seconds (JVM running for 15.036)
2018/12/27-14:24 [http-nio-12080-exec-10] DEBUG org.lis_dao.UserDao.selectByExample- ==>  Preparing: select user_id, username, avatarUrl, authority, `password`, account from user WHERE ( account = ? ) 
2018/12/27-14:24 [http-nio-12080-exec-10] DEBUG org.lis_dao.UserDao.selectByExample- ==> Parameters: 123456(String)
2018/12/27-14:24 [http-nio-12080-exec-10] DEBUG org.lis_dao.UserDao.selectByExample- <==      Total: 1
2018/12/27-14:24 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.UserController- 用户登录------------------------------------
2018/12/27-14:24 [http-nio-12080-exec-8] DEBUG org.lis_dao.UserDao.selectByExample- ==>  Preparing: select user_id, username, avatarUrl, authority, `password`, account from user WHERE ( account = ? ) 
2018/12/27-14:24 [http-nio-12080-exec-8] DEBUG org.lis_dao.UserDao.selectByExample- ==> Parameters: 123456(String)
2018/12/27-14:24 [http-nio-12080-exec-8] DEBUG org.lis_dao.UserDao.selectByExample- <==      Total: 1
2018/12/27-14:24 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.UserController- 用户登录------------------------------------
2018/12/27-14:27 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 5644 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/27-14:27 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/27-14:27 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/27-14:27 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/27-14:27 [restartedMain] INFO  org.hzqisheng.Application- Started Application in 10.59 seconds (JVM running for 14.052)
2018/12/27-14:28 [http-nio-12080-exec-1] DEBUG org.lis_dao.UserDao.selectByExample- ==>  Preparing: select user_id, username, avatarUrl, authority, `password`, account from user WHERE ( account = ? ) 
2018/12/27-14:28 [http-nio-12080-exec-1] DEBUG org.lis_dao.UserDao.selectByExample- ==> Parameters: 123456(String)
2018/12/27-14:28 [http-nio-12080-exec-1] DEBUG org.lis_dao.UserDao.selectByExample- <==      Total: 1
2018/12/27-14:28 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.UserController- 用户登录------------------------------------
2018/12/27-14:28 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.UserController- 用户退出登录------------------------------------
2018/12/27-15:01 [http-nio-12080-exec-4] DEBUG org.lis_dao.UserDao.insertSelective- ==>  Preparing: insert into user ( username, avatarUrl, authority, `password`, account ) values ( ?, ?, ?, ?, ? ) 
2018/12/27-15:01 [http-nio-12080-exec-4] DEBUG org.lis_dao.UserDao.insertSelective- ==> Parameters: 冰残绝恋(String), https://wx.qlogo.cn/mmopen/vi_32/YOuw0zia8s4pk7yz4XXqIkyQAlyzDzib8m1tHibiaCkiaSOH5BpTOSybBQbKOR7zd8HNiczQkialNLktfkWoaA8XPArkA/132(String), 1(Integer), 123456(String), cxy123(String)
2018/12/27-15:01 [http-nio-12080-exec-4] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'avatarUrl' at row 1
### The error may involve org.lis_dao.UserDao.insertSelective-Inline
### The error occurred while setting parameters
### SQL: insert into user      ( username,                       avatarUrl,                       authority,                       `password`,                       account )       values ( ?,                       ?,                       ?,                       ?,                       ? )
### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'avatarUrl' at row 1
; SQL []; Data truncation: Data too long for column 'avatarUrl' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'avatarUrl' at row 1] with root cause
com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'avatarUrl' at row 1
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3971)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2490)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy89.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy87.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy76.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy77.insertSelective(Unknown Source)
	at org.hzqisheng.service.Impl.UserServiceImpl.addUser(UserServiceImpl.java:37)
	at org.hzqisheng.controller.UserController.register(UserController.java:84)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018/12/27-15:04 [http-nio-12080-exec-7] DEBUG org.lis_dao.UserDao.insertSelective- ==>  Preparing: insert into user ( username, avatarUrl, authority, `password`, account ) values ( ?, ?, ?, ?, ? ) 
2018/12/27-15:04 [http-nio-12080-exec-7] DEBUG org.lis_dao.UserDao.insertSelective- ==> Parameters: 冰残绝恋(String), https://wx.qlogo.cn/mmopen/vi_32/YOuw0zia8s4pk7yz4XXqIkyQAlyzDzib8m1tHibiaCkiaSOH5BpTOSybBQbKOR7zd8HNiczQkialNLktfkWoaA8XPArkA/132(String), 1(Integer), 123456(String), cxy123(String)
2018/12/27-15:04 [http-nio-12080-exec-7] DEBUG org.lis_dao.UserDao.insertSelective- <==    Updates: 1
2018/12/27-15:04 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.UserController- 用户注册------------------------------------
2018/12/27-15:10 [http-nio-12080-exec-10] DEBUG org.lis_dao.UserDao.insertSelective- ==>  Preparing: insert into user ( username, avatarUrl, authority, `password`, account ) values ( ?, ?, ?, ?, ? ) 
2018/12/27-15:10 [http-nio-12080-exec-10] DEBUG org.lis_dao.UserDao.insertSelective- ==> Parameters: 冰残绝恋(String), https://wx.qlogo.cn/mmopen/vi_32/YOuw0zia8s4pk7yz4XXqIkyQAlyzDzib8m1tHibiaCkiaSOH5BpTOSybBQbKOR7zd8HNiczQkialNLktfkWoaA8XPArkA/132(String), 1(Integer), 123456(String), cxy123(String)
2018/12/27-15:10 [http-nio-12080-exec-10] DEBUG org.lis_dao.UserDao.insertSelective- <==    Updates: 1
2018/12/27-15:10 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.UserController- 用户注册------------------------------------
2018/12/27-15:10 [http-nio-12080-exec-9] DEBUG org.lis_dao.UserDao.selectByExample- ==>  Preparing: select user_id, username, avatarUrl, authority, `password`, account from user WHERE ( account = ? ) 
2018/12/27-15:10 [http-nio-12080-exec-9] DEBUG org.lis_dao.UserDao.selectByExample- ==> Parameters: cxy123(String)
2018/12/27-15:10 [http-nio-12080-exec-9] DEBUG org.lis_dao.UserDao.selectByExample- <==      Total: 1
2018/12/27-15:10 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.UserController- 用户登录------------------------------------
2018/12/27-15:11 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.UserController- 用户退出登录------------------------------------
2018/12/27-15:11 [http-nio-12080-exec-2] DEBUG org.lis_dao.UserDao.selectByExample- ==>  Preparing: select user_id, username, avatarUrl, authority, `password`, account from user WHERE ( account = ? ) 
2018/12/27-15:11 [http-nio-12080-exec-2] DEBUG org.lis_dao.UserDao.selectByExample- ==> Parameters: cxy123(String)
2018/12/27-15:11 [http-nio-12080-exec-2] DEBUG org.lis_dao.UserDao.selectByExample- <==      Total: 1
2018/12/27-15:11 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.UserController- 用户登录------------------------------------
2018/12/27-15:12 [http-nio-12080-exec-3] DEBUG org.lis_dao.UserDao.selectByExample- ==>  Preparing: select user_id, username, avatarUrl, authority, `password`, account from user WHERE ( account = ? ) 
2018/12/27-15:12 [http-nio-12080-exec-3] DEBUG org.lis_dao.UserDao.selectByExample- ==> Parameters: cxy123(String)
2018/12/27-15:12 [http-nio-12080-exec-3] DEBUG org.lis_dao.UserDao.selectByExample- <==      Total: 1
2018/12/27-15:12 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.UserController- 用户登录------------------------------------
2018/12/27-15:12 [http-nio-12080-exec-4] DEBUG org.lis_dao.UserDao.selectByExample- ==>  Preparing: select user_id, username, avatarUrl, authority, `password`, account from user WHERE ( account = ? ) 
2018/12/27-15:12 [http-nio-12080-exec-4] DEBUG org.lis_dao.UserDao.selectByExample- ==> Parameters: cxy123(String)
2018/12/27-15:12 [http-nio-12080-exec-4] DEBUG org.lis_dao.UserDao.selectByExample- <==      Total: 1
2018/12/27-15:12 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.UserController- 用户登录------------------------------------
2018/12/27-15:12 [http-nio-12080-exec-5] DEBUG org.lis_dao.UserDao.selectByExample- ==>  Preparing: select user_id, username, avatarUrl, authority, `password`, account from user WHERE ( account = ? ) 
2018/12/27-15:12 [http-nio-12080-exec-5] DEBUG org.lis_dao.UserDao.selectByExample- ==> Parameters: cxy123(String)
2018/12/27-15:12 [http-nio-12080-exec-5] DEBUG org.lis_dao.UserDao.selectByExample- <==      Total: 1
2018/12/27-15:12 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.UserController- 用户登录------------------------------------
2018/12/27-15:13 [http-nio-12080-exec-6] DEBUG org.lis_dao.UserDao.selectByExample- ==>  Preparing: select user_id, username, avatarUrl, authority, `password`, account from user WHERE ( account = ? ) 
2018/12/27-15:13 [http-nio-12080-exec-6] DEBUG org.lis_dao.UserDao.selectByExample- ==> Parameters: cxy123(String)
2018/12/27-15:13 [http-nio-12080-exec-6] DEBUG org.lis_dao.UserDao.selectByExample- <==      Total: 1
2018/12/27-15:13 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.UserController- 用户登录------------------------------------
2018/12/27-15:16 [http-nio-12080-exec-8] DEBUG org.lis_dao.UserDao.selectByExample- ==>  Preparing: select user_id, username, avatarUrl, authority, `password`, account from user WHERE ( account = ? ) 
2018/12/27-15:16 [http-nio-12080-exec-8] DEBUG org.lis_dao.UserDao.selectByExample- ==> Parameters: cxy123(String)
2018/12/27-15:16 [http-nio-12080-exec-8] DEBUG org.lis_dao.UserDao.selectByExample- <==      Total: 1
2018/12/27-15:16 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.UserController- 用户登录------------------------------------
2018/12/27-15:16 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.UserController- 用户退出登录------------------------------------
2018/12/27-15:16 [http-nio-12080-exec-9] DEBUG org.lis_dao.UserDao.selectByExample- ==>  Preparing: select user_id, username, avatarUrl, authority, `password`, account from user WHERE ( account = ? ) 
2018/12/27-15:16 [http-nio-12080-exec-9] DEBUG org.lis_dao.UserDao.selectByExample- ==> Parameters: cxy123(String)
2018/12/27-15:16 [http-nio-12080-exec-9] DEBUG org.lis_dao.UserDao.selectByExample- <==      Total: 1
2018/12/27-15:16 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.UserController- 用户登录------------------------------------
2018/12/27-15:39 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 10196 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/27-15:39 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/27-15:39 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/27-15:39 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/27-15:40 [restartedMain] INFO  org.hzqisheng.Application- Started Application in 13.208 seconds (JVM running for 16.275)
2018/12/27-15:42 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 15188 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/27-15:42 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/27-15:42 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/27-15:42 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/27-15:42 [restartedMain] INFO  org.hzqisheng.Application- Started Application in 20.114 seconds (JVM running for 23.64)
2018/12/27-15:45 [http-nio-12080-exec-2] DEBUG org.lis_dao.UserDao.selectByExample- ==>  Preparing: select user_id, username, avatarUrl, authority, `password`, account from user WHERE ( account = ? ) 
2018/12/27-15:45 [http-nio-12080-exec-2] DEBUG org.lis_dao.UserDao.selectByExample- ==> Parameters: cxy123(String)
2018/12/27-15:45 [http-nio-12080-exec-2] DEBUG org.lis_dao.UserDao.selectByExample- <==      Total: 1
2018/12/27-15:45 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.UserController- 用户登录------------------------------------
2018/12/27-15:46 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 12416 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/27-15:46 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/27-15:46 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/27-15:46 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/27-15:46 [restartedMain] INFO  org.hzqisheng.Application- Started Application in 15.422 seconds (JVM running for 18.933)
2018/12/27-15:47 [http-nio-12080-exec-2] DEBUG org.lis_dao.UserDao.selectByExample- ==>  Preparing: select user_id, username, avatarUrl, authority, `password`, account from user WHERE ( account = ? ) 
2018/12/27-15:47 [http-nio-12080-exec-2] DEBUG org.lis_dao.UserDao.selectByExample- ==> Parameters: cxy123(String)
2018/12/27-15:47 [http-nio-12080-exec-2] DEBUG org.lis_dao.UserDao.selectByExample- <==      Total: 1
2018/12/27-15:47 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.UserController- 用户登录------------------------------------
2018/12/27-15:47 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 10712 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/27-15:47 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/27-15:47 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/27-15:47 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/27-15:48 [restartedMain] INFO  org.hzqisheng.Application- Started Application in 15.745 seconds (JVM running for 19.007)
2018/12/27-15:48 [http-nio-12080-exec-1] DEBUG org.lis_dao.FeedbackDao.insertSelective- ==>  Preparing: insert into feedback ( feedback_content, contact, creat_time ) values ( ?, ?, ? ) 
2018/12/27-15:48 [http-nio-12080-exec-1] DEBUG org.lis_dao.FeedbackDao.insertSelective- ==> Parameters: 不错哦(String), 12(String), 2018-12-27 15:48:17.433(Timestamp)
2018/12/27-15:48 [http-nio-12080-exec-1] DEBUG org.lis_dao.FeedbackDao.insertSelective- <==    Updates: 1
2018/12/27-15:48 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.UserController- 提交用户反馈------------------------------------
2018/12/27-15:51 [http-nio-12080-exec-3] DEBUG org.lis_dao.FeedbackDao.insertSelective- ==>  Preparing: insert into feedback ( user_id, feedback_content, contact, creat_time ) values ( ?, ?, ?, ? ) 
2018/12/27-15:51 [http-nio-12080-exec-3] DEBUG org.lis_dao.FeedbackDao.insertSelective- ==> Parameters: -1(Long), 1(String), 1(String), 2018-12-27 15:51:38.787(Timestamp)
2018/12/27-15:51 [http-nio-12080-exec-3] DEBUG org.lis_dao.FeedbackDao.insertSelective- <==    Updates: 1
2018/12/27-15:51 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.UserController- 提交用户反馈------------------------------------
2018/12/27-15:54 [http-nio-12080-exec-5] DEBUG org.lis_dao.FeedbackDao.insertSelective- ==>  Preparing: insert into feedback ( user_id, feedback_content, contact, creat_time ) values ( ?, ?, ?, ? ) 
2018/12/27-15:54 [http-nio-12080-exec-5] DEBUG org.lis_dao.FeedbackDao.insertSelective- ==> Parameters: -1(Long), 不错哦(String), 1(String), 2018-12-27 15:54:24.802(Timestamp)
2018/12/27-15:54 [http-nio-12080-exec-5] DEBUG org.lis_dao.FeedbackDao.insertSelective- <==    Updates: 1
2018/12/27-15:54 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.UserController- 提交用户反馈------------------------------------
2018/12/27-15:57 [http-nio-12080-exec-7] DEBUG org.lis_dao.UserDao.selectByExample- ==>  Preparing: select user_id, username, avatarUrl, authority, `password`, account from user WHERE ( account = ? ) 
2018/12/27-15:57 [http-nio-12080-exec-7] DEBUG org.lis_dao.UserDao.selectByExample- ==> Parameters: cxy123(String)
2018/12/27-15:57 [http-nio-12080-exec-7] DEBUG org.lis_dao.UserDao.selectByExample- <==      Total: 1
2018/12/27-15:57 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.UserController- 用户登录------------------------------------
2018/12/27-16:04 [http-nio-12080-exec-10] DEBUG org.lis_dao.UserDao.selectByExample- ==>  Preparing: select user_id, username, avatarUrl, authority, `password`, account from user WHERE ( account = ? ) 
2018/12/27-16:04 [http-nio-12080-exec-10] DEBUG org.lis_dao.UserDao.selectByExample- ==> Parameters: cxy123(String)
2018/12/27-16:04 [http-nio-12080-exec-10] DEBUG org.lis_dao.UserDao.selectByExample- <==      Total: 1
2018/12/27-16:04 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.UserController- 用户登录------------------------------------
2018/12/27-16:22 [http-nio-12080-exec-1] DEBUG org.lis_dao.UserDao.selectByExample- ==>  Preparing: select user_id, username, avatarUrl, authority, `password`, account from user WHERE ( account = ? ) 
2018/12/27-16:22 [http-nio-12080-exec-1] DEBUG org.lis_dao.UserDao.selectByExample- ==> Parameters: cxy123(String)
2018/12/27-16:22 [http-nio-12080-exec-1] DEBUG org.lis_dao.UserDao.selectByExample- <==      Total: 1
2018/12/27-16:22 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.UserController- 用户登录------------------------------------
2018/12/27-16:22 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.UserController- 用户退出登录------------------------------------
2018/12/27-16:22 [http-nio-12080-exec-3] DEBUG org.lis_dao.UserDao.selectByExample- ==>  Preparing: select user_id, username, avatarUrl, authority, `password`, account from user WHERE ( account = ? ) 
2018/12/27-16:22 [http-nio-12080-exec-3] DEBUG org.lis_dao.UserDao.selectByExample- ==> Parameters: cxy123(String)
2018/12/27-16:22 [http-nio-12080-exec-3] DEBUG org.lis_dao.UserDao.selectByExample- <==      Total: 1
2018/12/27-16:22 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.UserController- 用户登录------------------------------------
2018/12/27-16:23 [http-nio-12080-exec-4] DEBUG org.lis_dao.UserDao.selectByExample- ==>  Preparing: select user_id, username, avatarUrl, authority, `password`, account from user WHERE ( account = ? ) 
2018/12/27-16:23 [http-nio-12080-exec-4] DEBUG org.lis_dao.UserDao.selectByExample- ==> Parameters: cxy123(String)
2018/12/27-16:23 [http-nio-12080-exec-4] DEBUG org.lis_dao.UserDao.selectByExample- <==      Total: 1
2018/12/27-16:23 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.UserController- 用户登录------------------------------------
2018/12/27-16:23 [http-nio-12080-exec-5] DEBUG org.lis_dao.UserDao.selectByExample- ==>  Preparing: select user_id, username, avatarUrl, authority, `password`, account from user WHERE ( account = ? ) 
2018/12/27-16:23 [http-nio-12080-exec-5] DEBUG org.lis_dao.UserDao.selectByExample- ==> Parameters: cxy(String)
2018/12/27-16:23 [http-nio-12080-exec-5] DEBUG org.lis_dao.UserDao.selectByExample- <==      Total: 0
2018/12/27-16:24 [http-nio-12080-exec-6] DEBUG org.lis_dao.UserDao.selectByExample- ==>  Preparing: select user_id, username, avatarUrl, authority, `password`, account from user WHERE ( account = ? ) 
2018/12/27-16:24 [http-nio-12080-exec-6] DEBUG org.lis_dao.UserDao.selectByExample- ==> Parameters: 12(String)
2018/12/27-16:24 [http-nio-12080-exec-6] DEBUG org.lis_dao.UserDao.selectByExample- <==      Total: 0
2018/12/27-16:24 [http-nio-12080-exec-7] DEBUG org.lis_dao.UserDao.selectByExample- ==>  Preparing: select user_id, username, avatarUrl, authority, `password`, account from user WHERE ( account = ? ) 
2018/12/27-16:24 [http-nio-12080-exec-7] DEBUG org.lis_dao.UserDao.selectByExample- ==> Parameters: cxy123(String)
2018/12/27-16:24 [http-nio-12080-exec-7] DEBUG org.lis_dao.UserDao.selectByExample- <==      Total: 1
2018/12/27-16:24 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.UserController- 用户登录------------------------------------
2018/12/27-16:25 [http-nio-12080-exec-8] DEBUG org.lis_dao.UserDao.selectByExample- ==>  Preparing: select user_id, username, avatarUrl, authority, `password`, account from user WHERE ( account = ? ) 
2018/12/27-16:25 [http-nio-12080-exec-8] DEBUG org.lis_dao.UserDao.selectByExample- ==> Parameters: cxy123(String)
2018/12/27-16:25 [http-nio-12080-exec-8] DEBUG org.lis_dao.UserDao.selectByExample- <==      Total: 1
2018/12/27-16:25 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.UserController- 用户登录------------------------------------
2018/12/27-16:30 [http-nio-12080-exec-9] DEBUG org.lis_dao.UserDao.selectByExample- ==>  Preparing: select user_id, username, avatarUrl, authority, `password`, account from user WHERE ( account = ? ) 
2018/12/27-16:30 [http-nio-12080-exec-9] DEBUG org.lis_dao.UserDao.selectByExample- ==> Parameters: cxy123(String)
2018/12/27-16:30 [http-nio-12080-exec-9] DEBUG org.lis_dao.UserDao.selectByExample- <==      Total: 1
2018/12/27-16:30 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.UserController- 用户登录------------------------------------
2018/12/27-16:33 [http-nio-12080-exec-2] DEBUG org.lis_dao.UserDao.selectByExample- ==>  Preparing: select user_id, username, avatarUrl, authority, `password`, account from user WHERE ( account = ? ) 
2018/12/27-16:33 [http-nio-12080-exec-2] DEBUG org.lis_dao.UserDao.selectByExample- ==> Parameters: cxy123(String)
2018/12/27-16:33 [http-nio-12080-exec-2] DEBUG org.lis_dao.UserDao.selectByExample- <==      Total: 1
2018/12/27-16:33 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.UserController- 用户登录------------------------------------
2018/12/27-16:33 [http-nio-12080-exec-3] DEBUG org.lis_dao.UserDao.selectByExample- ==>  Preparing: select user_id, username, avatarUrl, authority, `password`, account from user WHERE ( account = ? ) 
2018/12/27-16:33 [http-nio-12080-exec-3] DEBUG org.lis_dao.UserDao.selectByExample- ==> Parameters: cxy123(String)
2018/12/27-16:33 [http-nio-12080-exec-3] DEBUG org.lis_dao.UserDao.selectByExample- <==      Total: 1
2018/12/27-16:33 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.UserController- 用户登录------------------------------------
2018/12/27-16:35 [http-nio-12080-exec-5] DEBUG org.lis_dao.UserDao.selectByExample- ==>  Preparing: select user_id, username, avatarUrl, authority, `password`, account from user WHERE ( account = ? ) 
2018/12/27-16:35 [http-nio-12080-exec-5] DEBUG org.lis_dao.UserDao.selectByExample- ==> Parameters: cxy123(String)
2018/12/27-16:35 [http-nio-12080-exec-5] DEBUG org.lis_dao.UserDao.selectByExample- <==      Total: 1
2018/12/27-16:35 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.UserController- 用户登录------------------------------------
2018/12/27-16:36 [http-nio-12080-exec-6] DEBUG org.lis_dao.UserDao.selectByExample- ==>  Preparing: select user_id, username, avatarUrl, authority, `password`, account from user WHERE ( account = ? ) 
2018/12/27-16:36 [http-nio-12080-exec-6] DEBUG org.lis_dao.UserDao.selectByExample- ==> Parameters: cxy123(String)
2018/12/27-16:36 [http-nio-12080-exec-6] DEBUG org.lis_dao.UserDao.selectByExample- <==      Total: 1
2018/12/27-16:36 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.UserController- 用户登录------------------------------------
2018/12/27-16:38 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 10712 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/27-16:38 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/27-16:38 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/27-16:38 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/27-16:38 [restartedMain] INFO  org.hzqisheng.Application- Started Application in 3.644 seconds (JVM running for 3035.784)
2018/12/27-16:39 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 10712 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/27-16:39 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/27-16:39 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/27-16:40 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/27-16:40 [restartedMain] INFO  org.hzqisheng.Application- Started Application in 6.239 seconds (JVM running for 3141.443)
2018/12/27-16:40 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 10712 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/27-16:40 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/27-16:40 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/27-16:40 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/27-16:40 [restartedMain] INFO  org.hzqisheng.Application- Started Application in 3.945 seconds (JVM running for 3190.45)
2018/12/27-16:45 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 10712 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/27-16:45 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/27-16:45 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/27-16:45 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/27-16:45 [restartedMain] INFO  org.hzqisheng.Application- Started Application in 3.908 seconds (JVM running for 3497.792)
2018/12/27-16:47 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 10712 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/27-16:47 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/27-16:47 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/27-16:47 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/27-16:47 [restartedMain] INFO  org.hzqisheng.Application- Started Application in 3.684 seconds (JVM running for 3562.701)
2018/12/27-16:49 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 560 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/27-16:49 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/27-16:49 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/27-16:49 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/27-16:50 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 8952 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/27-16:50 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/27-16:50 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/27-16:50 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/27-16:50 [restartedMain] INFO  org.hzqisheng.Application- Started Application in 12.896 seconds (JVM running for 15.456)
2018/12/27-16:51 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/27-16:51 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/27-16:51 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/27-16:51 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/27-17:00 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 8344 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/27-17:00 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/27-17:00 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/27-17:00 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/27-17:00 [restartedMain] INFO  org.hzqisheng.Application- Started Application in 14.133 seconds (JVM running for 16.917)
2018/12/27-17:01 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/27-17:01 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/27-17:01 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/27-17:01 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/27-17:01 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/27-17:01 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/27-17:01 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/27-17:01 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/27-17:02 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/27-17:02 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/27-17:02 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/27-17:02 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/27-17:04 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/27-17:04 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/27-17:04 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/27-17:04 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/27-17:04 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/27-17:04 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/27-17:04 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/27-17:04 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/27-17:07 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/27-17:07 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/27-17:07 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/27-17:07 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/27-17:09 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/27-17:09 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/27-17:09 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/27-17:09 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/27-17:10 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/27-17:10 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/27-17:10 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/27-17:10 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/27-17:10 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/27-17:10 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/27-17:10 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/27-17:10 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/27-17:10 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/27-17:10 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/27-17:10 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/27-17:10 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/27-17:12 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/27-17:12 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/27-17:12 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/27-17:12 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/27-17:13 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/27-17:13 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/27-17:13 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/27-17:13 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/27-17:13 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/27-17:13 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/27-17:13 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/27-17:13 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/27-17:14 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/27-17:14 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/27-17:14 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/27-17:14 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/27-17:16 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/27-17:16 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/27-17:16 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/27-17:16 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/27-17:16 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/27-17:16 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/27-17:16 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/27-17:16 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/27-17:17 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/27-17:17 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/27-17:17 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/27-17:17 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/27-17:17 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/27-17:17 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/27-17:17 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/27-17:17 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/27-17:18 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/27-17:18 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/27-17:18 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/27-17:18 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-09:00 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 8212 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/28-09:00 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/28-09:00 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/28-09:00 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/28-09:00 [restartedMain] INFO  org.hzqisheng.Application- Started Application in 10.44 seconds (JVM running for 14.149)
2018/12/28-09:01 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-09:01 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-09:01 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-09:01 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-09:01 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-09:01 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-09:01 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-09:01 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-09:02 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-09:02 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-09:02 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-09:02 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-09:05 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-09:05 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-09:05 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-09:05 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-09:06 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-09:06 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-09:06 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-09:06 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-09:06 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-09:06 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-09:06 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-09:06 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-09:06 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-09:06 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-09:06 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-09:06 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-09:09 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-09:09 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-09:09 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-09:09 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-09:10 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-09:10 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-09:10 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-09:10 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-09:14 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-09:14 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-09:14 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-09:14 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-09:40 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-09:40 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-09:40 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-09:40 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-09:41 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-09:41 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-09:41 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-09:41 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-09:43 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-09:43 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-09:43 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-09:43 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-09:43 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-09:43 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-09:43 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-09:43 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-09:44 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-09:44 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-09:44 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-09:44 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-09:46 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-09:46 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-09:46 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-09:46 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-09:48 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-09:48 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-09:48 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-09:48 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-09:48 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-09:48 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-09:48 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-09:48 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-09:49 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-09:49 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-09:49 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-09:49 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-09:59 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-09:59 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-09:59 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-09:59 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-11:05 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 668 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/28-11:05 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/28-11:05 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/28-11:06 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/28-11:06 [restartedMain] INFO  org.hzqisheng.Application- Started Application in 14.793 seconds (JVM running for 17.721)
2018/12/28-11:09 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 12976 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/28-11:09 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/28-11:09 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/28-11:09 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/28-11:09 [restartedMain] INFO  org.hzqisheng.Application- Started Application in 13.98 seconds (JVM running for 17.131)
2018/12/28-11:12 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 7692 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/28-11:12 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/28-11:12 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/28-11:12 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/28-11:12 [restartedMain] INFO  org.hzqisheng.Application- Started Application in 12.756 seconds (JVM running for 15.166)
2018/12/28-11:12 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-11:12 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-11:12 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-11:12 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-11:12 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 5(Integer)
2018/12/28-11:12 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 2
2018/12/28-11:13 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article_category WHERE (category_id = ?) 
2018/12/28-11:13 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample_COUNT- ==> Parameters: 2(Long)
2018/12/28-11:13 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-11:13 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( category_id = ? ) limit ?,? 
2018/12/28-11:13 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 2(Long), 0(Integer), 5(Integer)
2018/12/28-11:13 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 1
2018/12/28-11:13 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/28-11:13 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/28-11:13 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/28-11:13 [http-nio-12080-exec-6] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.ClassCastException: java.util.ArrayList cannot be cast to com.github.pagehelper.Page] with root cause
java.lang.ClassCastException: java.util.ArrayList cannot be cast to com.github.pagehelper.Page
	at org.hzqisheng.controller.ArticleController.articleList(ArticleController.java:68)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018/12/28-11:14 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article_category WHERE (category_id = ?) 
2018/12/28-11:14 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample_COUNT- ==> Parameters: 2(Long)
2018/12/28-11:14 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-11:14 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( category_id = ? ) limit ?,? 
2018/12/28-11:14 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 2(Long), 0(Integer), 5(Integer)
2018/12/28-11:14 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 1
2018/12/28-11:14 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/28-11:14 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/28-11:14 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/28-11:14 [http-nio-12080-exec-7] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.ClassCastException: java.util.ArrayList cannot be cast to com.github.pagehelper.Page] with root cause
java.lang.ClassCastException: java.util.ArrayList cannot be cast to com.github.pagehelper.Page
	at org.hzqisheng.controller.ArticleController.articleList(ArticleController.java:68)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018/12/28-11:14 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-11:14 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-11:14 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-11:14 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-11:14 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article_category WHERE (category_id = ?) 
2018/12/28-11:14 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample_COUNT- ==> Parameters: 2(Long)
2018/12/28-11:14 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-11:14 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( category_id = ? ) limit ?,? 
2018/12/28-11:14 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 2(Long), 0(Integer), 5(Integer)
2018/12/28-11:14 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 1
2018/12/28-11:14 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/28-11:14 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/28-11:14 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/28-11:14 [http-nio-12080-exec-1] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.ClassCastException: java.util.ArrayList cannot be cast to com.github.pagehelper.Page] with root cause
java.lang.ClassCastException: java.util.ArrayList cannot be cast to com.github.pagehelper.Page
	at org.hzqisheng.controller.ArticleController.articleList(ArticleController.java:68)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018/12/28-11:15 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-11:15 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-11:15 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-11:15 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-11:15 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 5(Integer)
2018/12/28-11:15 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 2
2018/12/28-11:15 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-11:15 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-11:15 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-11:15 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-11:15 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 5(Integer)
2018/12/28-11:15 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 2
2018/12/28-11:15 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article_category WHERE (category_id = ?) 
2018/12/28-11:15 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample_COUNT- ==> Parameters: 2(Long)
2018/12/28-11:15 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-11:15 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( category_id = ? ) limit ?,? 
2018/12/28-11:15 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 2(Long), 0(Integer), 5(Integer)
2018/12/28-11:15 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 1
2018/12/28-11:15 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/28-11:15 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/28-11:15 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/28-11:15 [http-nio-12080-exec-5] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.ClassCastException: java.util.ArrayList cannot be cast to com.github.pagehelper.Page] with root cause
java.lang.ClassCastException: java.util.ArrayList cannot be cast to com.github.pagehelper.Page
	at org.hzqisheng.controller.ArticleController.articleList(ArticleController.java:68)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018/12/28-11:16 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 7692 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/28-11:16 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/28-11:16 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/28-11:16 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/28-11:16 [restartedMain] INFO  org.hzqisheng.Application- Started Application in 5.623 seconds (JVM running for 246.036)
2018/12/28-11:19 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 7692 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/28-11:19 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/28-11:19 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/28-11:19 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/28-11:19 [restartedMain] INFO  org.hzqisheng.Application- Started Application in 2.782 seconds (JVM running for 472.053)
2018/12/28-11:20 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article_category WHERE (category_id = ?) 
2018/12/28-11:20 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample_COUNT- ==> Parameters: 2(Long)
2018/12/28-11:20 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-11:20 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( category_id = ? ) limit ?,? 
2018/12/28-11:20 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 2(Long), 0(Integer), 5(Integer)
2018/12/28-11:20 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 1
2018/12/28-11:20 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/28-11:20 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/28-11:20 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/28-11:20 [http-nio-12080-exec-2] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.ClassCastException: java.util.ArrayList cannot be cast to com.github.pagehelper.Page] with root cause
java.lang.ClassCastException: java.util.ArrayList cannot be cast to com.github.pagehelper.Page
	at org.hzqisheng.controller.ArticleController.articleList(ArticleController.java:68) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_144]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_144]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_144]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_144]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) ~[tomcat-embed-websocket-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_144]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_144]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_144]
2018/12/28-11:22 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 7692 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/28-11:22 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/28-11:22 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/28-11:22 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/28-11:22 [restartedMain] INFO  org.hzqisheng.Application- Started Application in 4.491 seconds (JVM running for 611.262)
2018/12/28-11:23 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 7692 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/28-11:23 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/28-11:23 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/28-11:23 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 1796 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/28-11:23 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/28-11:23 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/28-11:23 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/28-11:23 [restartedMain] INFO  org.hzqisheng.Application- Started Application in 11.161 seconds (JVM running for 16.482)
2018/12/28-11:23 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article_category WHERE (category_id = ?) 
2018/12/28-11:23 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample_COUNT- ==> Parameters: 2(Long)
2018/12/28-11:23 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-11:23 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( category_id = ? ) limit ?,? 
2018/12/28-11:23 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 2(Long), 0(Integer), 5(Integer)
2018/12/28-11:23 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 1
2018/12/28-11:23 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/28-11:23 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/28-11:23 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/28-11:23 [http-nio-12080-exec-2] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.ClassCastException: java.util.ArrayList cannot be cast to com.github.pagehelper.Page] with root cause
java.lang.ClassCastException: java.util.ArrayList cannot be cast to com.github.pagehelper.Page
	at org.hzqisheng.controller.ArticleController.articleList(ArticleController.java:69)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018/12/28-11:24 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-11:24 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-11:24 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-11:24 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-11:24 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 5(Integer)
2018/12/28-11:24 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 2
2018/12/28-11:25 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 12060 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/28-11:25 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/28-11:25 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/28-11:25 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/28-11:25 [restartedMain] INFO  org.hzqisheng.Application- Started Application in 17.185 seconds (JVM running for 20.616)
2018/12/28-11:25 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-11:25 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-11:25 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-11:25 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-11:25 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-11:25 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-11:25 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-11:25 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-11:25 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 5(Integer)
2018/12/28-11:25 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 2
2018/12/28-11:30 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-11:30 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-11:30 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-11:30 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-11:44 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-11:44 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-11:44 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-11:44 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-11:44 [http-nio-12080-exec-8] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at org.hzqisheng.controller.ArticleController.articleList(ArticleController.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018/12/28-11:44 [http-nio-12080-exec-10] WARN  org.springframework.web.servlet.PageNotFound- Request method 'GET' not supported
2018/12/28-11:44 [http-nio-12080-exec-10] WARN  org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver- Resolved exception caused by Handler execution: org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported
2018/12/28-11:47 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-11:47 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-11:47 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-11:47 [http-nio-12080-exec-1] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at org.hzqisheng.controller.ArticleController.articleList(ArticleController.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018/12/28-11:47 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-11:47 [http-nio-12080-exec-3] WARN  org.springframework.web.servlet.PageNotFound- Request method 'GET' not supported
2018/12/28-11:47 [http-nio-12080-exec-3] WARN  org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver- Resolved exception caused by Handler execution: org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported
2018/12/28-11:47 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-11:47 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-11:47 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-11:47 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-11:47 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 5(Integer)
2018/12/28-11:47 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 2
2018/12/28-11:49 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-11:49 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-11:49 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-11:49 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-11:49 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-11:49 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-11:49 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-11:49 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-11:49 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 5(Integer)
2018/12/28-11:49 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 2
2018/12/28-11:51 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-11:51 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-11:51 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-11:51 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-11:51 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 5(Integer)
2018/12/28-11:51 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 2
2018/12/28-11:51 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-11:51 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-11:51 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-11:51 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-11:51 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 5(Integer)
2018/12/28-11:51 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 2
2018/12/28-11:52 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article_category WHERE (category_id = ?) 
2018/12/28-11:52 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample_COUNT- ==> Parameters: 1(Long)
2018/12/28-11:52 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-11:52 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( category_id = ? ) limit ?,? 
2018/12/28-11:52 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 1(Long), 0(Integer), 5(Integer)
2018/12/28-11:52 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 2
2018/12/28-11:52 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/28-11:52 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/28-11:52 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/28-11:52 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/28-11:52 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 8(Long)
2018/12/28-11:52 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/28-11:52 [http-nio-12080-exec-5] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.ClassCastException: java.util.ArrayList cannot be cast to com.github.pagehelper.Page] with root cause
java.lang.ClassCastException: java.util.ArrayList cannot be cast to com.github.pagehelper.Page
	at org.hzqisheng.controller.ArticleController.articleList(ArticleController.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018/12/28-11:52 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-11:52 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-11:52 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-11:52 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-11:52 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-11:52 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-11:52 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-11:52 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-11:52 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 5(Integer)
2018/12/28-11:52 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 2
2018/12/28-11:52 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-11:52 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-11:52 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-11:52 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-11:52 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-11:52 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-11:52 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-11:52 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-11:52 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 5(Integer)
2018/12/28-11:52 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 2
2018/12/28-11:52 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-11:52 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-11:52 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-11:52 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-11:52 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-11:52 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-11:52 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-11:52 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-11:52 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 5(Integer)
2018/12/28-11:52 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 2
2018/12/28-11:52 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-11:52 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-11:52 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-11:52 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-11:52 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-11:52 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-11:52 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-11:52 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-11:52 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 5(Integer)
2018/12/28-11:52 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 2
2018/12/28-11:53 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-11:53 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-11:53 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-11:53 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-11:53 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-11:53 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-11:53 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-11:53 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-11:53 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 5(Integer)
2018/12/28-11:53 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 2
2018/12/28-11:53 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-11:53 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-11:53 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-11:53 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-11:53 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-11:53 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-11:53 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-11:53 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-11:53 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 5(Integer)
2018/12/28-11:53 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 2
2018/12/28-11:54 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 4400 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/28-11:54 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/28-11:54 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/28-11:54 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/28-11:55 [restartedMain] INFO  org.hzqisheng.Application- Started Application in 13.518 seconds (JVM running for 16.432)
2018/12/28-11:55 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-11:55 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-11:55 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-11:55 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-11:55 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-11:55 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-11:55 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-11:55 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-11:55 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 5(Integer)
2018/12/28-11:55 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 2
2018/12/28-13:04 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-13:04 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-13:04 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-13:04 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-13:04 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-13:04 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-13:04 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-13:04 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-13:04 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 5(Integer)
2018/12/28-13:04 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 5
2018/12/28-13:11 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-13:11 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-13:11 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-13:11 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-13:11 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-13:11 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-13:11 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-13:11 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-13:11 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 5(Integer)
2018/12/28-13:11 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 5
2018/12/28-13:12 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-13:12 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-13:12 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-13:12 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-13:12 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-13:12 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-13:12 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-13:12 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-13:12 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 5(Integer)
2018/12/28-13:12 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 5
2018/12/28-13:14 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-13:14 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-13:14 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-13:14 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-13:14 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-13:14 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-13:14 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-13:14 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-13:14 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 5(Integer)
2018/12/28-13:14 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 5
2018/12/28-13:31 [http-nio-12080-exec-10] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at org.hzqisheng.controller.ArticleController.articleList(ArticleController.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018/12/28-13:31 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article_category WHERE (category_id = ?) 
2018/12/28-13:31 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample_COUNT- ==> Parameters: -2(Long)
2018/12/28-13:31 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-13:31 [http-nio-12080-exec-1] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.ClassCastException: java.util.ArrayList cannot be cast to com.github.pagehelper.Page] with root cause
java.lang.ClassCastException: java.util.ArrayList cannot be cast to com.github.pagehelper.Page
	at org.hzqisheng.controller.ArticleController.articleList(ArticleController.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018/12/28-13:32 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-13:32 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-13:32 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-13:32 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-13:32 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-13:32 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-13:32 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-13:32 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-13:32 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 5(Integer)
2018/12/28-13:32 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 5
2018/12/28-13:56 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-13:56 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-13:56 [http-nio-12080-exec-8] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at org.hzqisheng.controller.ArticleController.articleList(ArticleController.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018/12/28-13:56 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-13:56 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-13:56 [http-nio-12080-exec-9] WARN  org.springframework.web.servlet.PageNotFound- Request method 'GET' not supported
2018/12/28-13:56 [http-nio-12080-exec-9] WARN  org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver- Resolved exception caused by Handler execution: org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported
2018/12/28-13:56 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-13:56 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-13:56 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-13:56 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-13:57 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 11796 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/28-13:57 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/28-13:57 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/28-13:57 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/28-13:57 [restartedMain] INFO  org.hzqisheng.Application- Started Application in 15.739 seconds (JVM running for 18.94)
2018/12/28-13:57 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-13:57 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-13:57 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-13:57 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-13:57 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-13:57 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-13:57 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-13:57 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-13:57 [http-nio-12080-exec-2] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at org.hzqisheng.controller.ArticleController.articleList(ArticleController.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018/12/28-13:57 [http-nio-12080-exec-4] WARN  org.springframework.web.servlet.PageNotFound- Request method 'GET' not supported
2018/12/28-13:57 [http-nio-12080-exec-4] WARN  org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver- Resolved exception caused by Handler execution: org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported
2018/12/28-13:59 [http-nio-12080-exec-6] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at org.hzqisheng.controller.ArticleController.articleList(ArticleController.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018/12/28-13:59 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-13:59 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-13:59 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-13:59 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-13:59 [http-nio-12080-exec-8] WARN  org.springframework.web.servlet.PageNotFound- Request method 'GET' not supported
2018/12/28-13:59 [http-nio-12080-exec-8] WARN  org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver- Resolved exception caused by Handler execution: org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported
2018/12/28-14:00 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article_category WHERE (category_id = ?) 
2018/12/28-14:00 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample_COUNT- ==> Parameters: -2(Long)
2018/12/28-14:00 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-14:00 [http-nio-12080-exec-9] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.ClassCastException: java.util.ArrayList cannot be cast to com.github.pagehelper.Page] with root cause
java.lang.ClassCastException: java.util.ArrayList cannot be cast to com.github.pagehelper.Page
	at org.hzqisheng.controller.ArticleController.articleList(ArticleController.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018/12/28-14:01 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 11796 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/28-14:01 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/28-14:01 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/28-14:01 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/28-14:01 [restartedMain] INFO  org.hzqisheng.Application- Started Application in 9.227 seconds (JVM running for 258.8)
2018/12/28-14:03 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 6744 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/28-14:03 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/28-14:03 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/28-14:03 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/28-14:03 [restartedMain] INFO  org.hzqisheng.Application- Started Application in 16.081 seconds (JVM running for 19.149)
2018/12/28-14:03 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article_category WHERE (category_id = ?) 
2018/12/28-14:03 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample_COUNT- ==> Parameters: -2(Long)
2018/12/28-14:03 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-14:03 [http-nio-12080-exec-2] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.ClassCastException: java.util.ArrayList cannot be cast to com.github.pagehelper.Page] with root cause
java.lang.ClassCastException: java.util.ArrayList cannot be cast to com.github.pagehelper.Page
	at org.hzqisheng.controller.ArticleController.articleList(ArticleController.java:74)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018/12/28-14:04 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 15056 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/28-14:04 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/28-14:04 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/28-14:04 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/28-14:04 [restartedMain] INFO  org.hzqisheng.Application- Started Application in 11.782 seconds (JVM running for 13.828)
2018/12/28-14:04 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- Category [Hash = 684128, categoryId=-2, categoryName=全部, serialVersionUID=1]-----------------
2018/12/28-14:04 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article_category WHERE (category_id = ?) 
2018/12/28-14:04 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample_COUNT- ==> Parameters: -2(Long)
2018/12/28-14:04 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-14:04 [http-nio-12080-exec-2] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.ClassCastException: java.util.ArrayList cannot be cast to com.github.pagehelper.Page] with root cause
java.lang.ClassCastException: java.util.ArrayList cannot be cast to com.github.pagehelper.Page
	at org.hzqisheng.controller.ArticleController.articleList(ArticleController.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018/12/28-14:05 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- Category [Hash = 684097, categoryId=-1, categoryName=全部, serialVersionUID=1]-----------------
2018/12/28-14:05 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-14:05 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-14:05 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-14:05 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-14:05 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 5(Integer)
2018/12/28-14:05 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 5
2018/12/28-14:05 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- Category [Hash = 684128, categoryId=1, categoryName=全部, serialVersionUID=1]-----------------
2018/12/28-14:05 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article_category WHERE (category_id = ?) 
2018/12/28-14:05 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample_COUNT- ==> Parameters: 1(Long)
2018/12/28-14:05 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-14:05 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( category_id = ? ) limit ?,? 
2018/12/28-14:05 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 1(Long), 0(Integer), 5(Integer)
2018/12/28-14:05 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 2
2018/12/28-14:05 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/28-14:05 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/28-14:05 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/28-14:05 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/28-14:05 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 8(Long)
2018/12/28-14:05 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/28-14:05 [http-nio-12080-exec-5] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.ClassCastException: java.util.ArrayList cannot be cast to com.github.pagehelper.Page] with root cause
java.lang.ClassCastException: java.util.ArrayList cannot be cast to com.github.pagehelper.Page
	at org.hzqisheng.controller.ArticleController.articleList(ArticleController.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018/12/28-14:05 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-14:05 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-14:05 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-14:05 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-14:07 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- Category [Hash = 684097, categoryId=-1, categoryName=全部, serialVersionUID=1]-----------------
2018/12/28-14:07 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-14:07 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-14:07 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-14:07 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-14:07 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-14:07 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/28-14:07 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-14:07 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-14:07 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-14:07 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-14:09 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- Category [Hash = 684097, categoryId=-1, categoryName=全部, serialVersionUID=1]-----------------
2018/12/28-14:09 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-14:09 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-14:09 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-14:09 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-14:09 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/28-14:09 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-14:09 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-14:09 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-14:09 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-14:09 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-14:10 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-14:10 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- Category [Hash = 684097, categoryId=-1, categoryName=全部, serialVersionUID=1]-----------------
2018/12/28-14:10 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-14:10 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-14:10 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-14:10 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-14:10 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-14:10 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-14:10 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-14:10 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/28-14:10 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-14:10 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- Category [Hash = 684097, categoryId=-1, categoryName=全部, serialVersionUID=1]-----------------
2018/12/28-14:10 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-14:10 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-14:10 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-14:10 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-14:10 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 3(Integer), 3(Integer)
2018/12/28-14:10 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-14:10 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- Category [Hash = 684097, categoryId=-1, categoryName=全部, serialVersionUID=1]-----------------
2018/12/28-14:10 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-14:10 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-14:10 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-14:10 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-14:10 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 6(Integer), 3(Integer)
2018/12/28-14:10 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 1
2018/12/28-14:10 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- Category [Hash = 684097, categoryId=-1, categoryName=全部, serialVersionUID=1]-----------------
2018/12/28-14:10 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-14:10 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-14:10 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-14:10 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-14:10 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-14:10 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/28-14:10 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-14:10 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-14:10 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-14:10 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-14:10 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- Category [Hash = 684097, categoryId=-1, categoryName=全部, serialVersionUID=1]-----------------
2018/12/28-14:10 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-14:10 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-14:10 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-14:10 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-14:10 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 3(Integer), 3(Integer)
2018/12/28-14:10 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-14:10 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- Category [Hash = 684097, categoryId=-1, categoryName=全部, serialVersionUID=1]-----------------
2018/12/28-14:10 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-14:10 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-14:10 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-14:10 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-14:10 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 6(Integer), 3(Integer)
2018/12/28-14:10 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 1
2018/12/28-14:12 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- Category [Hash = 684097, categoryId=-1, categoryName=全部, serialVersionUID=1]-----------------
2018/12/28-14:12 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-14:12 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-14:12 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-14:12 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-14:12 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-14:12 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-14:12 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-14:12 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-14:12 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/28-14:12 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-14:12 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- Category [Hash = 684097, categoryId=-1, categoryName=全部, serialVersionUID=1]-----------------
2018/12/28-14:12 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-14:12 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-14:12 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-14:12 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-14:12 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 3(Integer), 3(Integer)
2018/12/28-14:12 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-14:12 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- Category [Hash = 684097, categoryId=-1, categoryName=全部, serialVersionUID=1]-----------------
2018/12/28-14:12 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-14:12 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-14:12 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-14:12 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-14:12 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 6(Integer), 3(Integer)
2018/12/28-14:12 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 1
2018/12/28-14:13 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- Category [Hash = 684097, categoryId=-1, categoryName=全部, serialVersionUID=1]-----------------
2018/12/28-14:13 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-14:13 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-14:13 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-14:13 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-14:13 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-14:13 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-14:13 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-14:13 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-14:13 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/28-14:13 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-14:13 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- Category [Hash = 684097, categoryId=-1, categoryName=全部, serialVersionUID=1]-----------------
2018/12/28-14:13 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-14:13 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-14:13 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-14:13 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-14:13 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 3(Integer), 3(Integer)
2018/12/28-14:13 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-14:14 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- Category [Hash = 684097, categoryId=-1, categoryName=全部, serialVersionUID=1]-----------------
2018/12/28-14:14 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-14:14 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-14:14 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-14:14 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-14:14 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-14:14 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-14:14 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-14:14 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-14:14 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/28-14:14 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-14:15 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- Category [Hash = 684097, categoryId=-1, categoryName=全部, serialVersionUID=1]-----------------
2018/12/28-14:15 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-14:15 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-14:15 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-14:15 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-14:15 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-14:15 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-14:15 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/28-14:15 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-14:15 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-14:15 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-14:16 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-14:16 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- Category [Hash = 684097, categoryId=-1, categoryName=全部, serialVersionUID=1]-----------------
2018/12/28-14:16 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-14:16 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-14:16 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-14:16 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-14:16 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-14:16 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-14:16 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-14:16 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/28-14:16 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-14:16 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- Category [Hash = 684097, categoryId=-1, categoryName=全部, serialVersionUID=1]-----------------
2018/12/28-14:16 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-14:16 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-14:16 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-14:16 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-14:16 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 3(Integer), 3(Integer)
2018/12/28-14:16 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-14:16 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- Category [Hash = 684097, categoryId=-1, categoryName=全部, serialVersionUID=1]-----------------
2018/12/28-14:16 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-14:16 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-14:16 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-14:16 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-14:16 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 6(Integer), 3(Integer)
2018/12/28-14:16 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 1
2018/12/28-14:16 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-14:16 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-14:16 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-14:16 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-14:16 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-14:16 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-14:16 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-14:16 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-14:16 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-14:16 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-14:16 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-14:16 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-14:17 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- Category [Hash = 684097, categoryId=-1, categoryName=全部, serialVersionUID=1]-----------------
2018/12/28-14:17 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-14:17 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-14:17 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-14:17 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-14:17 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/28-14:17 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-14:17 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-14:17 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-14:17 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-14:17 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-14:17 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- Category [Hash = 684097, categoryId=-1, categoryName=全部, serialVersionUID=1]-----------------
2018/12/28-14:17 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-14:17 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-14:17 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-14:17 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-14:17 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 3(Integer), 3(Integer)
2018/12/28-14:17 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-14:17 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- Category [Hash = 684097, categoryId=-1, categoryName=全部, serialVersionUID=1]-----------------
2018/12/28-14:17 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-14:17 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-14:17 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-14:17 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-14:17 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 6(Integer), 3(Integer)
2018/12/28-14:17 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 1
2018/12/28-14:17 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- Category [Hash = 684097, categoryId=-1, categoryName=全部, serialVersionUID=1]-----------------
2018/12/28-14:17 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-14:17 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-14:17 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-14:17 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-14:17 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/28-14:17 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-14:17 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- Category [Hash = 684097, categoryId=-1, categoryName=全部, serialVersionUID=1]-----------------
2018/12/28-14:17 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-14:17 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-14:17 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-14:17 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-14:17 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/28-14:17 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-14:17 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- Category [Hash = 684097, categoryId=-1, categoryName=全部, serialVersionUID=1]-----------------
2018/12/28-14:17 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-14:17 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-14:17 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-14:17 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-14:17 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/28-14:17 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-14:17 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- Category [Hash = 684097, categoryId=-1, categoryName=全部, serialVersionUID=1]-----------------
2018/12/28-14:17 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-14:17 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-14:17 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-14:17 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-14:17 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/28-14:17 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-14:17 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- Category [Hash = 684097, categoryId=-1, categoryName=全部, serialVersionUID=1]-----------------
2018/12/28-14:17 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-14:17 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-14:17 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-14:17 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-14:17 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/28-14:17 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-14:17 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- Category [Hash = 684097, categoryId=-1, categoryName=全部, serialVersionUID=1]-----------------
2018/12/28-14:17 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-14:17 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-14:17 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-14:17 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-14:17 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/28-14:17 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-14:17 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- Category [Hash = 684097, categoryId=-1, categoryName=全部, serialVersionUID=1]-----------------
2018/12/28-14:17 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-14:17 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-14:17 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-14:17 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-14:17 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/28-14:17 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-14:17 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- Category [Hash = 684097, categoryId=-1, categoryName=全部, serialVersionUID=1]-----------------
2018/12/28-14:17 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-14:17 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-14:17 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-14:17 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-14:17 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/28-14:17 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-14:18 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- Category [Hash = 684097, categoryId=-1, categoryName=全部, serialVersionUID=1]-----------------
2018/12/28-14:18 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-14:18 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-14:18 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-14:18 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-14:18 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-14:18 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-14:18 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/28-14:18 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-14:18 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-14:18 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-14:18 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- Category [Hash = 684097, categoryId=-1, categoryName=全部, serialVersionUID=1]-----------------
2018/12/28-14:18 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-14:18 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-14:18 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-14:18 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-14:18 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/28-14:18 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-14:18 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- Category [Hash = 684097, categoryId=-1, categoryName=全部, serialVersionUID=1]-----------------
2018/12/28-14:18 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-14:18 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-14:18 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-14:18 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-14:18 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 3(Integer), 3(Integer)
2018/12/28-14:18 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-14:18 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- Category [Hash = 684097, categoryId=-1, categoryName=全部, serialVersionUID=1]-----------------
2018/12/28-14:18 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-14:18 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-14:18 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-14:18 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-14:18 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-14:18 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-14:18 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-14:18 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-14:18 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/28-14:18 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-14:18 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- Category [Hash = 684097, categoryId=-1, categoryName=全部, serialVersionUID=1]-----------------
2018/12/28-14:18 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-14:18 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-14:18 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-14:18 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-14:18 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/28-14:18 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-14:18 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- Category [Hash = 684097, categoryId=-1, categoryName=全部, serialVersionUID=1]-----------------
2018/12/28-14:18 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-14:18 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-14:18 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-14:18 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-14:18 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/28-14:18 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-14:18 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- Category [Hash = 684097, categoryId=-1, categoryName=全部, serialVersionUID=1]-----------------
2018/12/28-14:18 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-14:18 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-14:18 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-14:18 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-14:18 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/28-14:18 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-14:20 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- Category [Hash = 684097, categoryId=-1, categoryName=全部, serialVersionUID=1]-----------------
2018/12/28-14:20 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-14:20 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-14:20 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-14:20 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-14:20 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/28-14:20 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-14:20 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-14:20 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-14:20 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-14:20 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-14:20 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- Category [Hash = 684097, categoryId=-1, categoryName=全部, serialVersionUID=1]-----------------
2018/12/28-14:20 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-14:20 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-14:20 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-14:20 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-14:20 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/28-14:20 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-14:20 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- Category [Hash = 684097, categoryId=-1, categoryName=全部, serialVersionUID=1]-----------------
2018/12/28-14:20 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-14:20 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-14:20 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-14:20 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-14:20 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 3(Integer), 3(Integer)
2018/12/28-14:20 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-14:20 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- Category [Hash = 684097, categoryId=-1, categoryName=全部, serialVersionUID=1]-----------------
2018/12/28-14:20 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-14:20 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-14:20 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-14:20 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-14:20 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 6(Integer), 3(Integer)
2018/12/28-14:20 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 1
2018/12/28-14:21 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-14:21 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-14:21 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-14:21 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-14:21 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-14:21 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-14:21 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- Category [Hash = 684097, categoryId=-1, categoryName=全部, serialVersionUID=1]-----------------
2018/12/28-14:21 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-14:21 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-14:21 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-14:21 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-14:21 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-14:21 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-14:21 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/28-14:21 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-14:21 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- Category [Hash = 684097, categoryId=-1, categoryName=全部, serialVersionUID=1]-----------------
2018/12/28-14:21 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-14:21 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-14:21 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-14:21 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-14:21 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 3(Integer), 3(Integer)
2018/12/28-14:21 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-14:21 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- Category [Hash = 684097, categoryId=-1, categoryName=全部, serialVersionUID=1]-----------------
2018/12/28-14:21 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-14:21 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-14:21 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-14:21 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-14:21 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 6(Integer), 3(Integer)
2018/12/28-14:21 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 1
2018/12/28-14:21 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- Category [Hash = 684097, categoryId=-1, categoryName=全部, serialVersionUID=1]-----------------
2018/12/28-14:21 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-14:21 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-14:21 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-14:21 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-14:21 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/28-14:21 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-14:22 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- Category [Hash = 684097, categoryId=-1, categoryName=全部, serialVersionUID=1]-----------------
2018/12/28-14:22 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-14:22 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-14:22 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-14:22 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-14:22 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-14:22 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/28-14:22 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-14:22 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-14:22 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-14:22 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-14:22 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- Category [Hash = 684097, categoryId=-1, categoryName=全部, serialVersionUID=1]-----------------
2018/12/28-14:22 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-14:22 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-14:22 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-14:22 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-14:22 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 3(Integer), 3(Integer)
2018/12/28-14:22 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-14:22 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- Category [Hash = 684097, categoryId=-1, categoryName=全部, serialVersionUID=1]-----------------
2018/12/28-14:22 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-14:22 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-14:22 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-14:22 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-14:22 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 6(Integer), 3(Integer)
2018/12/28-14:22 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 1
2018/12/28-14:22 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- Category [Hash = 992, categoryId=1, categoryName=, serialVersionUID=1]-----------------
2018/12/28-14:22 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article_category WHERE (category_id = ?) 
2018/12/28-14:22 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample_COUNT- ==> Parameters: 1(Long)
2018/12/28-14:22 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-14:22 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( category_id = ? ) limit ?,? 
2018/12/28-14:22 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 1(Long), 0(Integer), 3(Integer)
2018/12/28-14:22 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 2
2018/12/28-14:22 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/28-14:22 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/28-14:22 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/28-14:22 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/28-14:22 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 8(Long)
2018/12/28-14:22 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/28-14:22 [http-nio-12080-exec-6] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.ClassCastException: java.util.ArrayList cannot be cast to com.github.pagehelper.Page] with root cause
java.lang.ClassCastException: java.util.ArrayList cannot be cast to com.github.pagehelper.Page
	at org.hzqisheng.controller.ArticleController.articleList(ArticleController.java:75)
	at sun.reflect.GeneratedMethodAccessor100.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018/12/28-14:22 [http-nio-12080-exec-7] WARN  org.springframework.web.servlet.PageNotFound- Request method 'GET' not supported
2018/12/28-14:22 [http-nio-12080-exec-7] WARN  org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver- Resolved exception caused by Handler execution: org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported
2018/12/28-14:23 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- Category [Hash = 1162392176, categoryId=1, categoryName=测试标签1, serialVersionUID=1]-----------------
2018/12/28-14:23 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article_category WHERE (category_id = ?) 
2018/12/28-14:23 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample_COUNT- ==> Parameters: 1(Long)
2018/12/28-14:23 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-14:23 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( category_id = ? ) limit ?,? 
2018/12/28-14:23 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 1(Long), 0(Integer), 5(Integer)
2018/12/28-14:23 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 2
2018/12/28-14:23 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/28-14:23 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/28-14:23 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/28-14:23 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/28-14:23 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 8(Long)
2018/12/28-14:23 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/28-14:23 [http-nio-12080-exec-1] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.ClassCastException: java.util.ArrayList cannot be cast to com.github.pagehelper.Page] with root cause
java.lang.ClassCastException: java.util.ArrayList cannot be cast to com.github.pagehelper.Page
	at org.hzqisheng.controller.ArticleController.articleList(ArticleController.java:75)
	at sun.reflect.GeneratedMethodAccessor100.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018/12/28-14:26 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 15056 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/28-14:26 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/28-14:26 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/28-14:26 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/28-14:26 [restartedMain] INFO  org.hzqisheng.Application- Started Application in 8.899 seconds (JVM running for 1348.244)
2018/12/28-14:28 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article_category WHERE (category_id = ?) 
2018/12/28-14:28 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample_COUNT- ==> Parameters: 1(Long)
2018/12/28-14:28 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-14:28 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( category_id = ? ) limit ?,? 
2018/12/28-14:28 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 1(Long), 0(Integer), 5(Integer)
2018/12/28-14:28 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 2
2018/12/28-14:28 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/28-14:28 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/28-14:28 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/28-14:28 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/28-14:28 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 8(Long)
2018/12/28-14:28 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/28-14:28 [http-nio-12080-exec-8] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.ClassCastException: java.util.ArrayList cannot be cast to com.github.pagehelper.Page] with root cause
java.lang.ClassCastException: java.util.ArrayList cannot be cast to com.github.pagehelper.Page
	at org.hzqisheng.controller.ArticleController.articleList(ArticleController.java:75) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_144]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_144]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_144]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_144]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) ~[tomcat-embed-websocket-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_144]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_144]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_144]
2018/12/28-14:28 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 7064 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/28-14:28 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/28-14:28 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/28-14:28 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/28-14:29 [restartedMain] INFO  org.hzqisheng.Application- Started Application in 14.55 seconds (JVM running for 18.408)
2018/12/28-14:29 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( category_id = ? ) 
2018/12/28-14:29 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 1(Long)
2018/12/28-14:29 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 2
2018/12/28-14:29 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/28-14:29 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/28-14:29 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/28-14:29 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/28-14:29 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 8(Long)
2018/12/28-14:29 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/28-14:29 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-14:29 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( category_id = ? ) 
2018/12/28-14:29 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 2(Long)
2018/12/28-14:29 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 1
2018/12/28-14:29 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/28-14:29 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/28-14:29 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/28-14:29 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-14:30 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 7064 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/28-14:30 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/28-14:30 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/28-14:30 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/28-14:30 [restartedMain] INFO  org.hzqisheng.Application- Started Application in 3.815 seconds (JVM running for 86.501)
2018/12/28-14:33 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article_category WHERE (category_id = ?) 
2018/12/28-14:33 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample_COUNT- ==> Parameters: 2(Long)
2018/12/28-14:33 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-14:33 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( category_id = ? ) limit ?,? 
2018/12/28-14:33 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 2(Long), 0(Integer), 5(Integer)
2018/12/28-14:33 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 1
2018/12/28-14:33 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/28-14:33 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/28-14:33 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/28-14:33 [http-nio-12080-exec-2] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.ClassCastException: java.util.ArrayList cannot be cast to com.github.pagehelper.Page] with root cause
java.lang.ClassCastException: java.util.ArrayList cannot be cast to com.github.pagehelper.Page
	at org.hzqisheng.controller.ArticleController.articleList(ArticleController.java:75) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_144]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_144]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_144]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_144]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) ~[tomcat-embed-websocket-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_144]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_144]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_144]
2018/12/28-14:35 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-14:35 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-14:35 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-14:35 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-14:36 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-14:36 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-14:36 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-14:36 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-14:37 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-14:37 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-14:37 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-14:37 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-14:37 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/28-14:37 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-14:37 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-14:37 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-14:37 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-14:37 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-14:37 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-14:37 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 3(Integer), 3(Integer)
2018/12/28-14:37 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-14:37 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-14:37 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-14:37 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-14:37 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-14:37 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-14:37 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-14:37 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-14:37 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-14:37 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-14:37 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-14:37 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-14:37 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-14:37 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-14:37 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/28-14:37 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-14:37 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-14:37 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-14:37 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-14:37 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-14:37 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-14:37 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 3(Integer), 3(Integer)
2018/12/28-14:37 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-14:37 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-14:37 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-14:37 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-14:37 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-14:37 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-14:37 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 6(Integer), 3(Integer)
2018/12/28-14:37 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 1
2018/12/28-14:37 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-14:39 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-14:39 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-14:39 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-14:39 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-14:39 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-14:39 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-14:39 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-14:39 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-14:39 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/28-14:39 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-14:39 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-14:39 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-14:39 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-14:39 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-14:39 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-14:42 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article_category WHERE (category_id = ?) 
2018/12/28-14:42 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample_COUNT- ==> Parameters: 2(Long)
2018/12/28-14:42 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-14:42 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( category_id = ? ) limit ?,? 
2018/12/28-14:42 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 2(Long), 0(Integer), 5(Integer)
2018/12/28-14:42 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 1
2018/12/28-14:42 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/28-14:42 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/28-14:42 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/28-14:42 [http-nio-12080-exec-8] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.ClassCastException: java.util.ArrayList cannot be cast to com.github.pagehelper.Page] with root cause
java.lang.ClassCastException: java.util.ArrayList cannot be cast to com.github.pagehelper.Page
	at org.hzqisheng.controller.ArticleController.articleList(ArticleController.java:75) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_144]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_144]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_144]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_144]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) ~[tomcat-embed-websocket-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_144]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_144]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_144]
2018/12/28-14:42 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 7064 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/28-14:42 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/28-14:42 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/28-14:42 [restartedMain] WARN  org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext- Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanDefinitionStoreException: Failed to parse configuration class [org.hzqisheng.Application]; nested exception is java.io.FileNotFoundException: class path resource [org/hzqisheng/service/ArticleService.class] cannot be opened because it does not exist
2018/12/28-14:42 [restartedMain] ERROR org.springframework.beans.factory.support.DefaultListableBeanFactory- Destroy method on bean with name 'org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory' threw an exception
java.lang.IllegalStateException: ApplicationEventMulticaster not initialized - call 'refresh' before multicasting events via the context: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4509accb: startup date [Fri Dec 28 14:42:48 GMT+08:00 2018]; root of context hierarchy
	at org.springframework.context.support.AbstractApplicationContext.getApplicationEventMulticaster(AbstractApplicationContext.java:414) [spring-context-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.context.support.ApplicationListenerDetector.postProcessBeforeDestruction(ApplicationListenerDetector.java:97) ~[spring-context-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:253) ~[spring-beans-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578) [spring-beans-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554) [spring-beans-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961) [spring-beans-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523) [spring-beans-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968) [spring-beans-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030) [spring-context-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:556) [spring-context-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122) [spring-boot-1.5.4.RELEASE.jar:1.5.4.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693) [spring-boot-1.5.4.RELEASE.jar:1.5.4.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360) [spring-boot-1.5.4.RELEASE.jar:1.5.4.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303) [spring-boot-1.5.4.RELEASE.jar:1.5.4.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118) [spring-boot-1.5.4.RELEASE.jar:1.5.4.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107) [spring-boot-1.5.4.RELEASE.jar:1.5.4.RELEASE]
	at org.hzqisheng.Application.main(Application.java:17) [classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_144]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_144]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_144]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_144]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49) [spring-boot-devtools-1.5.4.RELEASE.jar:1.5.4.RELEASE]
2018/12/28-14:42 [restartedMain] ERROR org.springframework.boot.SpringApplication- Application startup failed
org.springframework.beans.factory.BeanDefinitionStoreException: Failed to parse configuration class [org.hzqisheng.Application]; nested exception is java.io.FileNotFoundException: class path resource [org/hzqisheng/service/ArticleService.class] cannot be opened because it does not exist
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:181) ~[spring-context-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:308) ~[spring-context-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:228) ~[spring-context-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:270) ~[spring-context-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:93) ~[spring-context-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:687) ~[spring-context-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:525) ~[spring-context-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122) ~[spring-boot-1.5.4.RELEASE.jar:1.5.4.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693) [spring-boot-1.5.4.RELEASE.jar:1.5.4.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360) [spring-boot-1.5.4.RELEASE.jar:1.5.4.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303) [spring-boot-1.5.4.RELEASE.jar:1.5.4.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118) [spring-boot-1.5.4.RELEASE.jar:1.5.4.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107) [spring-boot-1.5.4.RELEASE.jar:1.5.4.RELEASE]
	at org.hzqisheng.Application.main(Application.java:17) [classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_144]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_144]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_144]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_144]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49) [spring-boot-devtools-1.5.4.RELEASE.jar:1.5.4.RELEASE]
Caused by: java.io.FileNotFoundException: class path resource [org/hzqisheng/service/ArticleService.class] cannot be opened because it does not exist
	at org.springframework.core.io.ClassPathResource.getInputStream(ClassPathResource.java:172) ~[spring-core-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.core.type.classreading.SimpleMetadataReader.<init>(SimpleMetadataReader.java:50) ~[spring-core-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.core.type.classreading.SimpleMetadataReaderFactory.getMetadataReader(SimpleMetadataReaderFactory.java:98) ~[spring-core-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.boot.type.classreading.ConcurrentReferenceCachingMetadataReaderFactory.createMetadataReader(ConcurrentReferenceCachingMetadataReaderFactory.java:89) ~[spring-boot-1.5.4.RELEASE.jar:1.5.4.RELEASE]
	at org.springframework.boot.type.classreading.ConcurrentReferenceCachingMetadataReaderFactory.getMetadataReader(ConcurrentReferenceCachingMetadataReaderFactory.java:76) ~[spring-boot-1.5.4.RELEASE.jar:1.5.4.RELEASE]
	at org.springframework.core.type.classreading.SimpleMetadataReaderFactory.getMetadataReader(SimpleMetadataReaderFactory.java:93) ~[spring-core-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassParser.asSourceClass(ConfigurationClassParser.java:693) ~[spring-context-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassParser$SourceClass.getInterfaces(ConfigurationClassParser.java:870) ~[spring-context-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassParser.processInterfaces(ConfigurationClassParser.java:363) ~[spring-context-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:320) ~[spring-context-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:245) ~[spring-context-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:190) ~[spring-context-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:292) ~[spring-context-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:245) ~[spring-context-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:198) ~[spring-context-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:167) ~[spring-context-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	... 18 common frames omitted
2018/12/28-14:43 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 7064 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/28-14:43 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/28-14:43 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/28-14:43 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/28-14:43 [restartedMain] INFO  org.hzqisheng.Application- Started Application in 3.754 seconds (JVM running for 864.793)
2018/12/28-14:45 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 11700 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/28-14:45 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/28-14:45 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/28-14:46 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 14920 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/28-14:46 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/28-14:46 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/28-14:46 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/28-14:46 [restartedMain] INFO  org.hzqisheng.Application- Started Application in 15.671 seconds (JVM running for 19.057)
2018/12/28-14:46 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article_category WHERE (category_id = ?) 
2018/12/28-14:46 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample_COUNT- ==> Parameters: 2(Long)
2018/12/28-14:46 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-14:46 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( category_id = ? ) limit ?,? 
2018/12/28-14:46 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 2(Long), 0(Integer), 5(Integer)
2018/12/28-14:46 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 1
2018/12/28-14:46 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/28-14:46 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/28-14:46 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/28-14:46 [http-nio-12080-exec-1] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.ClassCastException: java.util.ArrayList cannot be cast to com.github.pagehelper.Page] with root cause
java.lang.ClassCastException: java.util.ArrayList cannot be cast to com.github.pagehelper.Page
	at org.hzqisheng.controller.ArticleController.articleList(ArticleController.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018/12/28-14:46 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 6744 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/28-14:46 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/28-14:46 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/28-14:46 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/28-14:46 [restartedMain] INFO  org.hzqisheng.Application- Started Application in 10.945 seconds (JVM running for 14.777)
2018/12/28-14:48 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article_category WHERE (category_id = ?) 
2018/12/28-14:48 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample_COUNT- ==> Parameters: 2(Long)
2018/12/28-14:48 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-14:48 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( category_id = ? ) limit ?,? 
2018/12/28-14:48 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 2(Long), 0(Integer), 5(Integer)
2018/12/28-14:48 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 1
2018/12/28-14:49 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/28-14:49 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/28-14:49 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/28-14:50 [http-nio-12080-exec-2] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.ClassCastException: java.util.ArrayList cannot be cast to com.github.pagehelper.Page] with root cause
java.lang.ClassCastException: java.util.ArrayList cannot be cast to com.github.pagehelper.Page
	at org.hzqisheng.controller.ArticleController.articleList(ArticleController.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018/12/28-15:18 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 14488 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/28-15:18 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/28-15:18 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/28-15:18 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/28-15:18 [restartedMain] INFO  org.hzqisheng.Application- Started Application in 10.457 seconds (JVM running for 14.866)
2018/12/28-15:18 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==>  Preparing: SELECT count(*) FROM article_category INNER JOIN article ON article_category.article__id = article.article_id INNER JOIN category ON article_category.category_id = category.category_id WHERE article_category.category_id = ? 
2018/12/28-15:18 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==> Parameters: 2(Long)
2018/12/28-15:18 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- <==      Total: 1
2018/12/28-15:18 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==>  Preparing: select article.article_id as articleId,title,expect,author,read_count as readCount,article.create_time as createTime from article_category inner join article on article_category.article__id = article.article_id inner join category on article_category.category_id = category.category_id where article_category.category_id = ? limit ?,? 
2018/12/28-15:18 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==> Parameters: 2(Long), 0(Integer), 5(Integer)
2018/12/28-15:18 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- <==      Total: 1
2018/12/28-15:18 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-15:18 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==>  Preparing: SELECT count(*) FROM article_category INNER JOIN article ON article_category.article__id = article.article_id INNER JOIN category ON article_category.category_id = category.category_id WHERE article_category.category_id = ? 
2018/12/28-15:18 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==> Parameters: 3(Long)
2018/12/28-15:18 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- <==      Total: 1
2018/12/28-15:18 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==>  Preparing: select article.article_id as articleId,title,expect,author,read_count as readCount,article.create_time as createTime from article_category inner join article on article_category.article__id = article.article_id inner join category on article_category.category_id = category.category_id where article_category.category_id = ? limit ?,? 
2018/12/28-15:18 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==> Parameters: 3(Long), 0(Integer), 5(Integer)
2018/12/28-15:18 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- <==      Total: 2
2018/12/28-15:18 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-15:18 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-15:18 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-15:18 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-15:18 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-15:18 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-15:18 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-15:18 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-15:18 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-15:18 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/28-15:18 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-15:18 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-15:18 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==>  Preparing: SELECT count(*) FROM article_category INNER JOIN article ON article_category.article__id = article.article_id INNER JOIN category ON article_category.category_id = category.category_id WHERE article_category.category_id = ? 
2018/12/28-15:18 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==> Parameters: 1(Long)
2018/12/28-15:18 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- <==      Total: 1
2018/12/28-15:18 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==>  Preparing: select article.article_id as articleId,title,expect,author,read_count as readCount,article.create_time as createTime from article_category inner join article on article_category.article__id = article.article_id inner join category on article_category.category_id = category.category_id where article_category.category_id = ? limit ?,? 
2018/12/28-15:18 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==> Parameters: 1(Long), 0(Integer), 3(Integer)
2018/12/28-15:18 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- <==      Total: 2
2018/12/28-15:18 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-15:19 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==>  Preparing: SELECT count(*) FROM article_category INNER JOIN article ON article_category.article__id = article.article_id INNER JOIN category ON article_category.category_id = category.category_id WHERE article_category.category_id = ? 
2018/12/28-15:19 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==> Parameters: 2(Long)
2018/12/28-15:19 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- <==      Total: 1
2018/12/28-15:19 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==>  Preparing: select article.article_id as articleId,title,expect,author,read_count as readCount,article.create_time as createTime from article_category inner join article on article_category.article__id = article.article_id inner join category on article_category.category_id = category.category_id where article_category.category_id = ? limit ?,? 
2018/12/28-15:19 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==> Parameters: 2(Long), 0(Integer), 3(Integer)
2018/12/28-15:19 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- <==      Total: 1
2018/12/28-15:19 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-15:19 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==>  Preparing: SELECT count(*) FROM article_category INNER JOIN article ON article_category.article__id = article.article_id INNER JOIN category ON article_category.category_id = category.category_id WHERE article_category.category_id = ? 
2018/12/28-15:19 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==> Parameters: 3(Long)
2018/12/28-15:19 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- <==      Total: 1
2018/12/28-15:19 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==>  Preparing: select article.article_id as articleId,title,expect,author,read_count as readCount,article.create_time as createTime from article_category inner join article on article_category.article__id = article.article_id inner join category on article_category.category_id = category.category_id where article_category.category_id = ? limit ?,? 
2018/12/28-15:19 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==> Parameters: 3(Long), 0(Integer), 3(Integer)
2018/12/28-15:19 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- <==      Total: 2
2018/12/28-15:19 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-15:19 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==>  Preparing: SELECT count(*) FROM article_category INNER JOIN article ON article_category.article__id = article.article_id INNER JOIN category ON article_category.category_id = category.category_id WHERE article_category.category_id = ? 
2018/12/28-15:19 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==> Parameters: 4(Long)
2018/12/28-15:19 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- <==      Total: 1
2018/12/28-15:19 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==>  Preparing: select article.article_id as articleId,title,expect,author,read_count as readCount,article.create_time as createTime from article_category inner join article on article_category.article__id = article.article_id inner join category on article_category.category_id = category.category_id where article_category.category_id = ? limit ?,? 
2018/12/28-15:19 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==> Parameters: 4(Long), 0(Integer), 3(Integer)
2018/12/28-15:19 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- <==      Total: 1
2018/12/28-15:19 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-15:19 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==>  Preparing: SELECT count(*) FROM article_category INNER JOIN article ON article_category.article__id = article.article_id INNER JOIN category ON article_category.category_id = category.category_id WHERE article_category.category_id = ? 
2018/12/28-15:19 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==> Parameters: 2(Long)
2018/12/28-15:19 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- <==      Total: 1
2018/12/28-15:19 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==>  Preparing: select article.article_id as articleId,title,expect,author,read_count as readCount,article.create_time as createTime from article_category inner join article on article_category.article__id = article.article_id inner join category on article_category.category_id = category.category_id where article_category.category_id = ? limit ?,? 
2018/12/28-15:19 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==> Parameters: 2(Long), 0(Integer), 3(Integer)
2018/12/28-15:19 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- <==      Total: 1
2018/12/28-15:19 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-15:19 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==>  Preparing: SELECT count(*) FROM article_category INNER JOIN article ON article_category.article__id = article.article_id INNER JOIN category ON article_category.category_id = category.category_id WHERE article_category.category_id = ? 
2018/12/28-15:19 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==> Parameters: 4(Long)
2018/12/28-15:19 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- <==      Total: 1
2018/12/28-15:19 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==>  Preparing: select article.article_id as articleId,title,expect,author,read_count as readCount,article.create_time as createTime from article_category inner join article on article_category.article__id = article.article_id inner join category on article_category.category_id = category.category_id where article_category.category_id = ? limit ?,? 
2018/12/28-15:19 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==> Parameters: 4(Long), 0(Integer), 3(Integer)
2018/12/28-15:19 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- <==      Total: 1
2018/12/28-15:19 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-15:19 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==>  Preparing: SELECT count(*) FROM article_category INNER JOIN article ON article_category.article__id = article.article_id INNER JOIN category ON article_category.category_id = category.category_id WHERE article_category.category_id = ? 
2018/12/28-15:19 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==> Parameters: 3(Long)
2018/12/28-15:19 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- <==      Total: 1
2018/12/28-15:19 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==>  Preparing: select article.article_id as articleId,title,expect,author,read_count as readCount,article.create_time as createTime from article_category inner join article on article_category.article__id = article.article_id inner join category on article_category.category_id = category.category_id where article_category.category_id = ? limit ?,? 
2018/12/28-15:19 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==> Parameters: 3(Long), 0(Integer), 3(Integer)
2018/12/28-15:19 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- <==      Total: 2
2018/12/28-15:19 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-15:19 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==>  Preparing: SELECT count(*) FROM article_category INNER JOIN article ON article_category.article__id = article.article_id INNER JOIN category ON article_category.category_id = category.category_id WHERE article_category.category_id = ? 
2018/12/28-15:19 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==> Parameters: 2(Long)
2018/12/28-15:19 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- <==      Total: 1
2018/12/28-15:19 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==>  Preparing: select article.article_id as articleId,title,expect,author,read_count as readCount,article.create_time as createTime from article_category inner join article on article_category.article__id = article.article_id inner join category on article_category.category_id = category.category_id where article_category.category_id = ? limit ?,? 
2018/12/28-15:19 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==> Parameters: 2(Long), 0(Integer), 3(Integer)
2018/12/28-15:19 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- <==      Total: 1
2018/12/28-15:19 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-15:19 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==>  Preparing: SELECT count(*) FROM article_category INNER JOIN article ON article_category.article__id = article.article_id INNER JOIN category ON article_category.category_id = category.category_id WHERE article_category.category_id = ? 
2018/12/28-15:19 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==> Parameters: 4(Long)
2018/12/28-15:19 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- <==      Total: 1
2018/12/28-15:19 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==>  Preparing: select article.article_id as articleId,title,expect,author,read_count as readCount,article.create_time as createTime from article_category inner join article on article_category.article__id = article.article_id inner join category on article_category.category_id = category.category_id where article_category.category_id = ? limit ?,? 
2018/12/28-15:19 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==> Parameters: 4(Long), 0(Integer), 3(Integer)
2018/12/28-15:19 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- <==      Total: 1
2018/12/28-15:19 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-15:19 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==>  Preparing: SELECT count(*) FROM article_category INNER JOIN article ON article_category.article__id = article.article_id INNER JOIN category ON article_category.category_id = category.category_id WHERE article_category.category_id = ? 
2018/12/28-15:19 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==> Parameters: 3(Long)
2018/12/28-15:19 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- <==      Total: 1
2018/12/28-15:19 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==>  Preparing: select article.article_id as articleId,title,expect,author,read_count as readCount,article.create_time as createTime from article_category inner join article on article_category.article__id = article.article_id inner join category on article_category.category_id = category.category_id where article_category.category_id = ? limit ?,? 
2018/12/28-15:19 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==> Parameters: 3(Long), 0(Integer), 3(Integer)
2018/12/28-15:19 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- <==      Total: 2
2018/12/28-15:19 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-15:19 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==>  Preparing: SELECT count(*) FROM article_category INNER JOIN article ON article_category.article__id = article.article_id INNER JOIN category ON article_category.category_id = category.category_id WHERE article_category.category_id = ? 
2018/12/28-15:19 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==> Parameters: 1(Long)
2018/12/28-15:19 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- <==      Total: 1
2018/12/28-15:19 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==>  Preparing: select article.article_id as articleId,title,expect,author,read_count as readCount,article.create_time as createTime from article_category inner join article on article_category.article__id = article.article_id inner join category on article_category.category_id = category.category_id where article_category.category_id = ? limit ?,? 
2018/12/28-15:19 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==> Parameters: 1(Long), 0(Integer), 3(Integer)
2018/12/28-15:19 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- <==      Total: 2
2018/12/28-15:19 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-15:19 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==>  Preparing: SELECT count(*) FROM article_category INNER JOIN article ON article_category.article__id = article.article_id INNER JOIN category ON article_category.category_id = category.category_id WHERE article_category.category_id = ? 
2018/12/28-15:19 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==> Parameters: 2(Long)
2018/12/28-15:19 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- <==      Total: 1
2018/12/28-15:19 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==>  Preparing: select article.article_id as articleId,title,expect,author,read_count as readCount,article.create_time as createTime from article_category inner join article on article_category.article__id = article.article_id inner join category on article_category.category_id = category.category_id where article_category.category_id = ? limit ?,? 
2018/12/28-15:19 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==> Parameters: 2(Long), 0(Integer), 3(Integer)
2018/12/28-15:19 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- <==      Total: 1
2018/12/28-15:19 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-15:19 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-15:19 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-15:19 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-15:19 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-15:19 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/28-15:19 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-15:19 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-15:19 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-15:19 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-15:19 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-15:19 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-15:19 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 3(Integer), 3(Integer)
2018/12/28-15:19 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-15:19 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-15:19 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-15:19 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-15:19 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-15:19 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-15:19 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 6(Integer), 3(Integer)
2018/12/28-15:19 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 1
2018/12/28-15:19 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-15:19 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==>  Preparing: SELECT count(*) FROM article_category INNER JOIN article ON article_category.article__id = article.article_id INNER JOIN category ON article_category.category_id = category.category_id WHERE article_category.category_id = ? 
2018/12/28-15:19 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==> Parameters: 1(Long)
2018/12/28-15:19 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- <==      Total: 1
2018/12/28-15:19 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==>  Preparing: select article.article_id as articleId,title,expect,author,read_count as readCount,article.create_time as createTime from article_category inner join article on article_category.article__id = article.article_id inner join category on article_category.category_id = category.category_id where article_category.category_id = ? limit ?,? 
2018/12/28-15:19 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==> Parameters: 1(Long), 0(Integer), 3(Integer)
2018/12/28-15:19 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- <==      Total: 2
2018/12/28-15:19 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-15:20 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==>  Preparing: SELECT count(*) FROM article_category INNER JOIN article ON article_category.article__id = article.article_id INNER JOIN category ON article_category.category_id = category.category_id WHERE article_category.category_id = ? 
2018/12/28-15:20 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==> Parameters: 2(Long)
2018/12/28-15:20 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- <==      Total: 1
2018/12/28-15:20 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==>  Preparing: select article.article_id as articleId,title,expect,author,read_count as readCount,article.create_time as createTime from article_category inner join article on article_category.article__id = article.article_id inner join category on article_category.category_id = category.category_id where article_category.category_id = ? limit ?,? 
2018/12/28-15:20 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==> Parameters: 2(Long), 0(Integer), 3(Integer)
2018/12/28-15:20 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- <==      Total: 1
2018/12/28-15:20 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-15:20 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==>  Preparing: SELECT count(*) FROM article_category INNER JOIN article ON article_category.article__id = article.article_id INNER JOIN category ON article_category.category_id = category.category_id WHERE article_category.category_id = ? 
2018/12/28-15:20 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==> Parameters: 1(Long)
2018/12/28-15:20 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- <==      Total: 1
2018/12/28-15:20 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==>  Preparing: select article.article_id as articleId,title,expect,author,read_count as readCount,article.create_time as createTime from article_category inner join article on article_category.article__id = article.article_id inner join category on article_category.category_id = category.category_id where article_category.category_id = ? limit ?,? 
2018/12/28-15:20 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==> Parameters: 1(Long), 0(Integer), 3(Integer)
2018/12/28-15:20 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- <==      Total: 2
2018/12/28-15:20 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-15:20 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==>  Preparing: SELECT count(*) FROM article_category INNER JOIN article ON article_category.article__id = article.article_id INNER JOIN category ON article_category.category_id = category.category_id WHERE article_category.category_id = ? 
2018/12/28-15:20 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==> Parameters: 2(Long)
2018/12/28-15:20 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- <==      Total: 1
2018/12/28-15:20 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==>  Preparing: select article.article_id as articleId,title,expect,author,read_count as readCount,article.create_time as createTime from article_category inner join article on article_category.article__id = article.article_id inner join category on article_category.category_id = category.category_id where article_category.category_id = ? limit ?,? 
2018/12/28-15:20 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==> Parameters: 2(Long), 0(Integer), 3(Integer)
2018/12/28-15:20 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- <==      Total: 1
2018/12/28-15:20 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-15:20 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-15:20 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-15:20 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-15:20 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-15:20 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/28-15:20 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-15:20 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-15:20 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-15:20 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-15:20 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-15:20 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-15:20 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 3(Integer), 3(Integer)
2018/12/28-15:20 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-15:20 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-15:20 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-15:20 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-15:20 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-15:20 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-15:20 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 6(Integer), 3(Integer)
2018/12/28-15:20 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 1
2018/12/28-15:20 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-15:20 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==>  Preparing: SELECT count(*) FROM article_category INNER JOIN article ON article_category.article__id = article.article_id INNER JOIN category ON article_category.category_id = category.category_id WHERE article_category.category_id = ? 
2018/12/28-15:20 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==> Parameters: 1(Long)
2018/12/28-15:20 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- <==      Total: 1
2018/12/28-15:20 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==>  Preparing: select article.article_id as articleId,title,expect,author,read_count as readCount,article.create_time as createTime from article_category inner join article on article_category.article__id = article.article_id inner join category on article_category.category_id = category.category_id where article_category.category_id = ? limit ?,? 
2018/12/28-15:20 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==> Parameters: 1(Long), 0(Integer), 3(Integer)
2018/12/28-15:20 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- <==      Total: 2
2018/12/28-15:20 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-15:20 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==>  Preparing: SELECT count(*) FROM article_category INNER JOIN article ON article_category.article__id = article.article_id INNER JOIN category ON article_category.category_id = category.category_id WHERE article_category.category_id = ? 
2018/12/28-15:20 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==> Parameters: 2(Long)
2018/12/28-15:20 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- <==      Total: 1
2018/12/28-15:20 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==>  Preparing: select article.article_id as articleId,title,expect,author,read_count as readCount,article.create_time as createTime from article_category inner join article on article_category.article__id = article.article_id inner join category on article_category.category_id = category.category_id where article_category.category_id = ? limit ?,? 
2018/12/28-15:20 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==> Parameters: 2(Long), 0(Integer), 3(Integer)
2018/12/28-15:20 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- <==      Total: 1
2018/12/28-15:20 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-15:20 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-15:20 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-15:20 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-15:20 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-15:20 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/28-15:20 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-15:20 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-15:20 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-15:20 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-15:20 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-15:20 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-15:20 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==>  Preparing: SELECT count(*) FROM article_category INNER JOIN article ON article_category.article__id = article.article_id INNER JOIN category ON article_category.category_id = category.category_id WHERE article_category.category_id = ? 
2018/12/28-15:20 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==> Parameters: 1(Long)
2018/12/28-15:20 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- <==      Total: 1
2018/12/28-15:20 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==>  Preparing: select article.article_id as articleId,title,expect,author,read_count as readCount,article.create_time as createTime from article_category inner join article on article_category.article__id = article.article_id inner join category on article_category.category_id = category.category_id where article_category.category_id = ? limit ?,? 
2018/12/28-15:20 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==> Parameters: 1(Long), 0(Integer), 3(Integer)
2018/12/28-15:20 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- <==      Total: 2
2018/12/28-15:20 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-15:20 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==>  Preparing: SELECT count(*) FROM article_category INNER JOIN article ON article_category.article__id = article.article_id INNER JOIN category ON article_category.category_id = category.category_id WHERE article_category.category_id = ? 
2018/12/28-15:20 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==> Parameters: 2(Long)
2018/12/28-15:20 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- <==      Total: 1
2018/12/28-15:20 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==>  Preparing: select article.article_id as articleId,title,expect,author,read_count as readCount,article.create_time as createTime from article_category inner join article on article_category.article__id = article.article_id inner join category on article_category.category_id = category.category_id where article_category.category_id = ? limit ?,? 
2018/12/28-15:20 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==> Parameters: 2(Long), 0(Integer), 3(Integer)
2018/12/28-15:20 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- <==      Total: 1
2018/12/28-15:20 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-15:20 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==>  Preparing: SELECT count(*) FROM article_category INNER JOIN article ON article_category.article__id = article.article_id INNER JOIN category ON article_category.category_id = category.category_id WHERE article_category.category_id = ? 
2018/12/28-15:20 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==> Parameters: 3(Long)
2018/12/28-15:20 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- <==      Total: 1
2018/12/28-15:20 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==>  Preparing: select article.article_id as articleId,title,expect,author,read_count as readCount,article.create_time as createTime from article_category inner join article on article_category.article__id = article.article_id inner join category on article_category.category_id = category.category_id where article_category.category_id = ? limit ?,? 
2018/12/28-15:20 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==> Parameters: 3(Long), 0(Integer), 3(Integer)
2018/12/28-15:20 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- <==      Total: 2
2018/12/28-15:20 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-15:20 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==>  Preparing: SELECT count(*) FROM article_category INNER JOIN article ON article_category.article__id = article.article_id INNER JOIN category ON article_category.category_id = category.category_id WHERE article_category.category_id = ? 
2018/12/28-15:20 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==> Parameters: 2(Long)
2018/12/28-15:20 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- <==      Total: 1
2018/12/28-15:20 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==>  Preparing: select article.article_id as articleId,title,expect,author,read_count as readCount,article.create_time as createTime from article_category inner join article on article_category.article__id = article.article_id inner join category on article_category.category_id = category.category_id where article_category.category_id = ? limit ?,? 
2018/12/28-15:20 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==> Parameters: 2(Long), 0(Integer), 3(Integer)
2018/12/28-15:20 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- <==      Total: 1
2018/12/28-15:20 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-15:21 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==>  Preparing: SELECT count(*) FROM article_category INNER JOIN article ON article_category.article__id = article.article_id INNER JOIN category ON article_category.category_id = category.category_id WHERE article_category.category_id = ? 
2018/12/28-15:21 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==> Parameters: 1(Long)
2018/12/28-15:21 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- <==      Total: 1
2018/12/28-15:21 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==>  Preparing: select article.article_id as articleId,title,expect,author,read_count as readCount,article.create_time as createTime from article_category inner join article on article_category.article__id = article.article_id inner join category on article_category.category_id = category.category_id where article_category.category_id = ? limit ?,? 
2018/12/28-15:21 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==> Parameters: 1(Long), 0(Integer), 3(Integer)
2018/12/28-15:21 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- <==      Total: 2
2018/12/28-15:21 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-15:21 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==>  Preparing: SELECT count(*) FROM article_category INNER JOIN article ON article_category.article__id = article.article_id INNER JOIN category ON article_category.category_id = category.category_id WHERE article_category.category_id = ? 
2018/12/28-15:21 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==> Parameters: 2(Long)
2018/12/28-15:21 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- <==      Total: 1
2018/12/28-15:21 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==>  Preparing: select article.article_id as articleId,title,expect,author,read_count as readCount,article.create_time as createTime from article_category inner join article on article_category.article__id = article.article_id inner join category on article_category.category_id = category.category_id where article_category.category_id = ? limit ?,? 
2018/12/28-15:21 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==> Parameters: 2(Long), 0(Integer), 3(Integer)
2018/12/28-15:21 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- <==      Total: 1
2018/12/28-15:21 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-15:21 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-15:21 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-15:21 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-15:21 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-15:21 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/28-15:21 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-15:21 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-15:21 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-15:21 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-15:21 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-15:21 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-15:22 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==>  Preparing: SELECT count(*) FROM article_category INNER JOIN article ON article_category.article__id = article.article_id INNER JOIN category ON article_category.category_id = category.category_id WHERE article_category.category_id = ? 
2018/12/28-15:22 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==> Parameters: 1(Long)
2018/12/28-15:22 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- <==      Total: 1
2018/12/28-15:22 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==>  Preparing: select article.article_id as articleId,title,expect,author,read_count as readCount,article.create_time as createTime from article_category inner join article on article_category.article__id = article.article_id inner join category on article_category.category_id = category.category_id where article_category.category_id = ? limit ?,? 
2018/12/28-15:22 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==> Parameters: 1(Long), 0(Integer), 3(Integer)
2018/12/28-15:22 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- <==      Total: 2
2018/12/28-15:22 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-15:22 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==>  Preparing: SELECT count(*) FROM article_category INNER JOIN article ON article_category.article__id = article.article_id INNER JOIN category ON article_category.category_id = category.category_id WHERE article_category.category_id = ? 
2018/12/28-15:22 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==> Parameters: 2(Long)
2018/12/28-15:22 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- <==      Total: 1
2018/12/28-15:22 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==>  Preparing: select article.article_id as articleId,title,expect,author,read_count as readCount,article.create_time as createTime from article_category inner join article on article_category.article__id = article.article_id inner join category on article_category.category_id = category.category_id where article_category.category_id = ? limit ?,? 
2018/12/28-15:22 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==> Parameters: 2(Long), 0(Integer), 3(Integer)
2018/12/28-15:22 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- <==      Total: 1
2018/12/28-15:22 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-15:22 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==>  Preparing: SELECT count(*) FROM article_category INNER JOIN article ON article_category.article__id = article.article_id INNER JOIN category ON article_category.category_id = category.category_id WHERE article_category.category_id = ? 
2018/12/28-15:22 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==> Parameters: 3(Long)
2018/12/28-15:22 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- <==      Total: 1
2018/12/28-15:22 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==>  Preparing: select article.article_id as articleId,title,expect,author,read_count as readCount,article.create_time as createTime from article_category inner join article on article_category.article__id = article.article_id inner join category on article_category.category_id = category.category_id where article_category.category_id = ? limit ?,? 
2018/12/28-15:22 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==> Parameters: 3(Long), 0(Integer), 3(Integer)
2018/12/28-15:22 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- <==      Total: 2
2018/12/28-15:22 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-15:22 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-15:22 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-15:22 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-15:22 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-15:22 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/28-15:22 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-15:22 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-15:22 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-15:22 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-15:22 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-15:22 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-15:22 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/28-15:22 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-15:22 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-15:22 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-15:22 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-15:22 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-15:22 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-15:22 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-15:22 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-15:22 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-15:22 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-15:22 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 3(Integer), 3(Integer)
2018/12/28-15:22 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-15:22 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-15:22 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-15:22 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-15:22 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-15:22 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-15:22 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 6(Integer), 3(Integer)
2018/12/28-15:22 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 1
2018/12/28-15:22 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-15:22 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==>  Preparing: SELECT count(*) FROM article_category INNER JOIN article ON article_category.article__id = article.article_id INNER JOIN category ON article_category.category_id = category.category_id WHERE article_category.category_id = ? 
2018/12/28-15:22 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==> Parameters: 1(Long)
2018/12/28-15:22 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- <==      Total: 1
2018/12/28-15:22 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==>  Preparing: select article.article_id as articleId,title,expect,author,read_count as readCount,article.create_time as createTime from article_category inner join article on article_category.article__id = article.article_id inner join category on article_category.category_id = category.category_id where article_category.category_id = ? limit ?,? 
2018/12/28-15:22 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==> Parameters: 1(Long), 0(Integer), 3(Integer)
2018/12/28-15:22 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- <==      Total: 2
2018/12/28-15:22 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-15:22 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==>  Preparing: SELECT count(*) FROM article_category INNER JOIN article ON article_category.article__id = article.article_id INNER JOIN category ON article_category.category_id = category.category_id WHERE article_category.category_id = ? 
2018/12/28-15:22 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==> Parameters: 2(Long)
2018/12/28-15:22 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- <==      Total: 1
2018/12/28-15:22 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==>  Preparing: select article.article_id as articleId,title,expect,author,read_count as readCount,article.create_time as createTime from article_category inner join article on article_category.article__id = article.article_id inner join category on article_category.category_id = category.category_id where article_category.category_id = ? limit ?,? 
2018/12/28-15:22 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==> Parameters: 2(Long), 0(Integer), 3(Integer)
2018/12/28-15:22 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- <==      Total: 1
2018/12/28-15:22 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-15:27 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-15:27 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-15:27 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-15:27 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-15:27 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-15:27 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-15:27 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-15:27 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-15:27 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/28-15:27 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-15:27 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-15:27 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-15:27 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-15:27 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-15:27 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-15:28 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-15:28 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-15:28 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-15:28 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-15:28 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/28-15:28 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-15:28 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-15:28 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-15:28 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-15:28 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-15:28 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-15:28 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-15:28 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-15:28 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-15:28 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-15:28 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 3(Integer), 3(Integer)
2018/12/28-15:28 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-15:28 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-15:28 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-15:28 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-15:28 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-15:28 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-15:28 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 6(Integer), 3(Integer)
2018/12/28-15:28 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 1
2018/12/28-15:28 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-15:28 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==>  Preparing: SELECT count(*) FROM article_category INNER JOIN article ON article_category.article__id = article.article_id INNER JOIN category ON article_category.category_id = category.category_id WHERE article_category.category_id = ? 
2018/12/28-15:28 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==> Parameters: 1(Long)
2018/12/28-15:28 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- <==      Total: 1
2018/12/28-15:28 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==>  Preparing: select article.article_id as articleId,title,expect,author,read_count as readCount,article.create_time as createTime from article_category inner join article on article_category.article__id = article.article_id inner join category on article_category.category_id = category.category_id where article_category.category_id = ? limit ?,? 
2018/12/28-15:28 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==> Parameters: 1(Long), 0(Integer), 3(Integer)
2018/12/28-15:28 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- <==      Total: 2
2018/12/28-15:28 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-15:28 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==>  Preparing: SELECT count(*) FROM article_category INNER JOIN article ON article_category.article__id = article.article_id INNER JOIN category ON article_category.category_id = category.category_id WHERE article_category.category_id = ? 
2018/12/28-15:28 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==> Parameters: 2(Long)
2018/12/28-15:28 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- <==      Total: 1
2018/12/28-15:28 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==>  Preparing: select article.article_id as articleId,title,expect,author,read_count as readCount,article.create_time as createTime from article_category inner join article on article_category.article__id = article.article_id inner join category on article_category.category_id = category.category_id where article_category.category_id = ? limit ?,? 
2018/12/28-15:28 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==> Parameters: 2(Long), 0(Integer), 3(Integer)
2018/12/28-15:28 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- <==      Total: 1
2018/12/28-15:28 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-15:28 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==>  Preparing: SELECT count(*) FROM article_category INNER JOIN article ON article_category.article__id = article.article_id INNER JOIN category ON article_category.category_id = category.category_id WHERE article_category.category_id = ? 
2018/12/28-15:28 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==> Parameters: 3(Long)
2018/12/28-15:28 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- <==      Total: 1
2018/12/28-15:28 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==>  Preparing: select article.article_id as articleId,title,expect,author,read_count as readCount,article.create_time as createTime from article_category inner join article on article_category.article__id = article.article_id inner join category on article_category.category_id = category.category_id where article_category.category_id = ? limit ?,? 
2018/12/28-15:28 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==> Parameters: 3(Long), 0(Integer), 3(Integer)
2018/12/28-15:28 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- <==      Total: 2
2018/12/28-15:28 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-15:28 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-15:28 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-15:28 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-15:28 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-15:28 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/28-15:28 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-15:28 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-15:28 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-15:28 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-15:28 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-15:28 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-15:28 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 3(Integer), 3(Integer)
2018/12/28-15:28 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-15:28 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-15:28 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-15:28 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-15:28 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-15:28 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-15:28 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 6(Integer), 3(Integer)
2018/12/28-15:28 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 1
2018/12/28-15:28 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-15:29 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-15:29 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-15:29 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-15:29 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-15:29 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/28-15:29 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-15:29 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-15:29 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-15:29 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-15:29 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-15:29 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-15:29 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-15:29 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-15:29 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-15:29 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-15:29 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 3(Integer), 3(Integer)
2018/12/28-15:29 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-15:29 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-15:29 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-15:29 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-15:29 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-15:29 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-15:29 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 6(Integer), 3(Integer)
2018/12/28-15:29 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 1
2018/12/28-15:29 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-15:29 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==>  Preparing: SELECT count(*) FROM article_category INNER JOIN article ON article_category.article__id = article.article_id INNER JOIN category ON article_category.category_id = category.category_id WHERE article_category.category_id = ? 
2018/12/28-15:29 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==> Parameters: 1(Long)
2018/12/28-15:29 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- <==      Total: 1
2018/12/28-15:29 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==>  Preparing: select article.article_id as articleId,title,expect,author,read_count as readCount,article.create_time as createTime from article_category inner join article on article_category.article__id = article.article_id inner join category on article_category.category_id = category.category_id where article_category.category_id = ? limit ?,? 
2018/12/28-15:29 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==> Parameters: 1(Long), 0(Integer), 3(Integer)
2018/12/28-15:29 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- <==      Total: 2
2018/12/28-15:29 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-15:29 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-15:29 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-15:29 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-15:29 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-15:29 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/28-15:29 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-15:29 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-15:29 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==>  Preparing: SELECT count(*) FROM article_category INNER JOIN article ON article_category.article__id = article.article_id INNER JOIN category ON article_category.category_id = category.category_id WHERE article_category.category_id = ? 
2018/12/28-15:29 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==> Parameters: 1(Long)
2018/12/28-15:29 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- <==      Total: 1
2018/12/28-15:29 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==>  Preparing: select article.article_id as articleId,title,expect,author,read_count as readCount,article.create_time as createTime from article_category inner join article on article_category.article__id = article.article_id inner join category on article_category.category_id = category.category_id where article_category.category_id = ? limit ?,? 
2018/12/28-15:29 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==> Parameters: 1(Long), 0(Integer), 3(Integer)
2018/12/28-15:29 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- <==      Total: 2
2018/12/28-15:29 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-15:29 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-15:29 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-15:29 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-15:29 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-15:29 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/28-15:29 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-15:29 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-15:48 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-15:48 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-15:48 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-15:48 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-15:48 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-15:48 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-15:48 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-15:48 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-15:48 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 3(Integer), 3(Integer)
2018/12/28-15:48 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-15:48 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-15:49 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-15:49 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-15:49 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-15:49 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-15:49 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-15:49 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-15:49 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/28-15:49 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-15:49 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-15:49 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-15:49 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-15:49 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-15:49 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-15:49 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-15:49 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-15:49 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 3(Integer), 3(Integer)
2018/12/28-15:49 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-15:49 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-15:51 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 14488 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/28-15:51 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/28-15:51 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/28-15:51 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/28-15:52 [restartedMain] INFO  org.hzqisheng.Application- Started Application in 5.545 seconds (JVM running for 2044.839)
2018/12/28-15:52 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 14488 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/28-15:52 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/28-15:52 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/28-15:52 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/28-15:52 [restartedMain] INFO  org.hzqisheng.Application- Started Application in 4.441 seconds (JVM running for 2058.827)
2018/12/28-15:56 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 14488 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/28-15:56 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/28-15:56 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/28-15:56 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/28-15:56 [restartedMain] INFO  org.hzqisheng.Application- Started Application in 2.666 seconds (JVM running for 2293.649)
2018/12/28-15:58 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 5140 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/28-15:58 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/28-15:58 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/28-15:58 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/28-15:58 [restartedMain] INFO  org.hzqisheng.Application- Started Application in 16.965 seconds (JVM running for 20.993)
2018/12/28-15:59 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 8560 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/28-15:59 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/28-15:59 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/28-15:59 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/28-15:59 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 12728 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/28-15:59 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/28-15:59 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/28-15:59 [restartedMain] INFO  org.hzqisheng.Application- Started Application in 18.025 seconds (JVM running for 21.679)
2018/12/28-15:59 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/28-15:59 [restartedMain] WARN  org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer- Unable to start LiveReload server
2018/12/28-15:59 [restartedMain] ERROR org.apache.coyote.http11.Http11NioProtocol- Failed to start end point associated with ProtocolHandler ["http-nio-12080"]
java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:978)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:628)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1022)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.addPreviouslyRemovedConnectors(TomcatEmbeddedServletContainer.java:250)
	at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.start(TomcatEmbeddedServletContainer.java:193)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.startEmbeddedServletContainer(EmbeddedWebApplicationContext.java:297)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.finishRefresh(EmbeddedWebApplicationContext.java:145)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at org.hzqisheng.Application.main(Application.java:17)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
2018/12/28-15:59 [restartedMain] ERROR org.apache.catalina.core.StandardService- Failed to start connector [Connector[HTTP/1.1-12080]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-12080]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.addPreviouslyRemovedConnectors(TomcatEmbeddedServletContainer.java:250)
	at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.start(TomcatEmbeddedServletContainer.java:193)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.startEmbeddedServletContainer(EmbeddedWebApplicationContext.java:297)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.finishRefresh(EmbeddedWebApplicationContext.java:145)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at org.hzqisheng.Application.main(Application.java:17)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.apache.catalina.LifecycleException: service.getName(): "Tomcat";  Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1029)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 18 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:978)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:628)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1022)
	... 19 common frames omitted
2018/12/28-15:59 [restartedMain] ERROR org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter- 

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 12080 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 12080, or configure this application to listen on another port.

2018/12/28-15:59 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 11908 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/28-15:59 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/28-15:59 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/28-16:00 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 8908 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/28-16:00 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/28-16:00 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/28-16:00 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/28-16:00 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/28-16:00 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 12200 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/28-16:00 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/28-16:00 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/28-16:00 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/28-16:00 [restartedMain] INFO  org.hzqisheng.Application- Started Application in 12.575 seconds (JVM running for 15.321)
2018/12/28-16:02 [http-nio-12080-exec-1] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at org.hzqisheng.controller.ArticleController.articleList(ArticleController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018/12/28-16:02 [http-nio-12080-exec-4] WARN  org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver- Failed to bind request element: org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; nested exception is java.lang.NumberFormatException: For input string: ""7""
2018/12/28-16:02 [http-nio-12080-exec-4] WARN  org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver- Resolved exception caused by Handler execution: org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; nested exception is java.lang.NumberFormatException: For input string: ""7""
2018/12/28-16:02 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/28-16:02 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/28-16:02 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/28-16:03 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-16:03 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-16:03 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-16:03 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-16:03 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-16:03 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-16:03 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-16:03 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-16:03 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/28-16:03 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-16:03 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-16:04 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-16:04 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-16:04 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-16:04 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-16:04 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/28-16:04 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-16:04 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-16:04 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-16:04 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-16:04 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-16:04 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-16:04 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-16:04 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-16:04 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-16:04 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-16:04 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 3(Integer), 3(Integer)
2018/12/28-16:04 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-16:04 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-16:07 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-16:07 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-16:07 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-16:07 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-16:07 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-16:07 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-16:07 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-16:07 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-16:07 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/28-16:07 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-16:07 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-16:07 [http-nio-12080-exec-9] WARN  org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver- Resolved exception caused by Handler execution: org.springframework.web.bind.MissingServletRequestParameterException: Required Long parameter 'articleId' is not present
2018/12/28-16:07 [http-nio-12080-exec-10] WARN  org.springframework.web.servlet.PageNotFound- Request method 'GET' not supported
2018/12/28-16:07 [http-nio-12080-exec-10] WARN  org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver- Resolved exception caused by Handler execution: org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported
2018/12/28-16:08 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-16:08 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-16:08 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-16:08 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-16:08 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-16:08 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-16:08 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-16:08 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/28-16:08 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-16:08 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-16:08 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-16:08 [http-nio-12080-exec-4] WARN  org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver- Resolved exception caused by Handler execution: org.springframework.web.bind.MissingServletRequestParameterException: Required Long parameter 'articleId' is not present
2018/12/28-16:08 [http-nio-12080-exec-6] WARN  org.springframework.web.servlet.PageNotFound- Request method 'GET' not supported
2018/12/28-16:08 [http-nio-12080-exec-6] WARN  org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver- Resolved exception caused by Handler execution: org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported
2018/12/28-16:09 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-16:09 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-16:09 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-16:09 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-16:09 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-16:09 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-16:09 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-16:09 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-16:09 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/28-16:09 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-16:09 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-16:09 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/28-16:09 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/28-16:09 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/28-16:12 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-16:12 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-16:12 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-16:12 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-16:12 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-16:12 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-16:12 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-16:12 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-16:12 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/28-16:12 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-16:12 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-16:12 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/28-16:12 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/28-16:12 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/28-16:13 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-16:13 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-16:13 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-16:13 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-16:13 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-16:13 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-16:13 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-16:13 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-16:13 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/28-16:13 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-16:13 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-16:13 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/28-16:13 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/28-16:13 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/28-16:13 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-16:13 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-16:13 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-16:13 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-16:13 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-16:13 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-16:13 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-16:13 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-16:13 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/28-16:13 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-16:13 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-16:13 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/28-16:13 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/28-16:13 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/28-16:14 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-16:14 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-16:14 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-16:14 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-16:14 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-16:14 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-16:14 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-16:14 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-16:14 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/28-16:14 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-16:14 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-16:14 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/28-16:14 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/28-16:14 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/28-16:14 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-16:14 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-16:14 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-16:14 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-16:14 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-16:14 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-16:14 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-16:14 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-16:14 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 3(Integer), 3(Integer)
2018/12/28-16:14 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-16:14 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-16:14 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/28-16:14 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 9(Long)
2018/12/28-16:14 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/28-16:14 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-16:14 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-16:14 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-16:14 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-16:14 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/28-16:14 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/28-16:14 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/28-16:15 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-16:15 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-16:15 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-16:15 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-16:15 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-16:15 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-16:15 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-16:15 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/28-16:15 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-16:15 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-16:15 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-16:15 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/28-16:15 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/28-16:15 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/28-16:39 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-16:39 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-16:39 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-16:39 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-16:39 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-16:39 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-16:39 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-16:39 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-16:39 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/28-16:39 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-16:39 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-16:41 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-16:41 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-16:41 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-16:41 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-16:41 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-16:41 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-16:41 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/28-16:41 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-16:41 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-16:41 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-16:41 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-16:41 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/28-16:41 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/28-16:41 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/28-16:50 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-16:50 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-16:50 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-16:50 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-16:50 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-16:50 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-16:50 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-16:50 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-16:50 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/28-16:50 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-16:50 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-16:50 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/28-16:50 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/28-16:50 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/28-16:50 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-16:50 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-16:50 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-16:50 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-16:50 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/28-16:50 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-16:50 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-16:50 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-16:50 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-16:50 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-16:50 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-16:50 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/28-16:50 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/28-16:50 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/28-16:54 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/28-16:54 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/28-16:54 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/28-16:54 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/28-16:54 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/28-16:54 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/28-16:54 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/28-16:54 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/28-16:54 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/28-16:54 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/28-16:54 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/28-16:54 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/28-16:54 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/28-16:54 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-09:22 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 13968 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/29-09:22 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/29-09:22 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/29-09:22 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/29-09:22 [restartedMain] INFO  org.hzqisheng.Application- Started Application in 9.904 seconds (JVM running for 14.4)
2018/12/29-09:22 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-09:22 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-09:22 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-09:22 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-09:22 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-09:22 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-09:22 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-09:22 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-09:22 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-09:22 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-09:22 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-09:22 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-09:23 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-09:23 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-09:23 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-09:23 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-09:23 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-09:23 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-09:23 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-09:23 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-09:23 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-09:23 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-09:23 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-09:23 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-09:23 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-09:23 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-09:25 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-09:25 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-09:25 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-09:25 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-09:25 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-09:25 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-09:25 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-09:25 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-09:25 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-09:25 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-09:25 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-09:25 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-09:25 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-09:25 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-09:25 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-09:26 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-09:26 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-09:26 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-09:26 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-09:26 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-09:26 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-09:26 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-09:26 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-09:26 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-09:26 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-09:26 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-09:28 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-09:28 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-09:28 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-09:28 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-09:28 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-09:28 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-09:28 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-09:28 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-09:28 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-09:28 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-09:28 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-09:30 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-09:30 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-09:30 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-09:30 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-09:30 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-09:30 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-09:30 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-09:30 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-09:30 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-09:30 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-09:30 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-09:31 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-09:31 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-09:31 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-09:31 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-09:31 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-09:31 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-09:31 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-09:31 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-09:31 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-09:31 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-09:31 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-09:31 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-09:31 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-09:31 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-09:33 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-09:33 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-09:33 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-09:33 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-09:33 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-09:33 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-09:33 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-09:33 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-09:33 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-09:33 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-09:33 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-09:33 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-09:33 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-09:33 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-09:33 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-09:33 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-09:33 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-09:33 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-09:33 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-09:33 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-09:33 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-09:33 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-09:33 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-09:33 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-09:33 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-09:33 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-09:33 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-09:33 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-09:34 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-09:34 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-09:34 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-09:34 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-09:34 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-09:34 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-09:34 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-09:34 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-09:34 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-09:34 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-09:34 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-09:34 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-09:34 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-09:34 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-09:35 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-09:35 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-09:35 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-09:35 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-09:35 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-09:35 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-09:35 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-09:35 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-09:35 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-09:35 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-09:35 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-09:35 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-09:35 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-09:35 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-09:38 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-09:38 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-09:38 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-09:38 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-09:38 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-09:38 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-09:38 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-09:38 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-09:38 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-09:38 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-09:38 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-09:38 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-09:38 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-09:38 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-09:38 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-09:38 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-09:38 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-09:38 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-09:38 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-09:38 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-09:38 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-09:38 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-09:38 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-09:38 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-09:38 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-09:38 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-09:38 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-09:38 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-09:38 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-09:38 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-09:38 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-09:38 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-09:38 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-09:38 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-09:38 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-09:38 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-09:38 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-09:38 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-09:38 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-09:38 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-09:38 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-09:38 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-09:38 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-09:38 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-09:38 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-09:38 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-09:38 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-09:38 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-09:38 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-09:38 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-09:38 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-09:38 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-09:38 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-09:38 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-09:38 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-09:38 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-09:39 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-09:39 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-09:39 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-09:39 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-09:39 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-09:39 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-09:39 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-09:39 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-09:39 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-09:39 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-09:39 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-09:39 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-09:39 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-09:39 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-09:44 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 13968 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/29-09:44 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/29-09:44 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/29-09:44 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/29-09:44 [restartedMain] INFO  org.hzqisheng.Application- Started Application in 4.389 seconds (JVM running for 1331.474)
2018/12/29-09:45 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 13968 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/29-09:45 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/29-09:45 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/29-09:45 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/29-09:45 [restartedMain] INFO  org.hzqisheng.Application- Started Application in 3.89 seconds (JVM running for 1370.817)
2018/12/29-09:47 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 13968 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/29-09:47 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/29-09:47 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/29-09:47 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/29-09:47 [restartedMain] INFO  org.hzqisheng.Application- Started Application in 2.64 seconds (JVM running for 1500.928)
2018/12/29-09:50 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 13968 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/29-09:50 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/29-09:50 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/29-09:50 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/29-09:50 [restartedMain] INFO  org.hzqisheng.Application- Started Application in 4.229 seconds (JVM running for 1667.548)
2018/12/29-10:03 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 2708 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/29-10:03 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/29-10:03 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/29-10:03 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/29-10:03 [restartedMain] INFO  org.hzqisheng.Application- Started Application in 8.883 seconds (JVM running for 11.461)
2018/12/29-10:04 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-10:04 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-10:04 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:04 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:04 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-10:04 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:04 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:04 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-10:04 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:04 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:04 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-10:04 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:04 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:04 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-10:04 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:16 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 2708 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/29-10:16 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/29-10:16 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/29-10:16 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/29-10:16 [restartedMain] INFO  org.hzqisheng.Application- Started Application in 4.399 seconds (JVM running for 813.939)
2018/12/29-10:20 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-10:20 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-10:20 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:20 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-10:20 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-10:20 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-10:20 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-10:20 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-10:20 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-10:20 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-10:20 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-10:21 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-10:21 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-10:21 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-10:21 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-10:21 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-10:21 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-10:21 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-10:21 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-10:21 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-10:21 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:21 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-10:21 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-10:21 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-10:21 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:21 [http-nio-12080-exec-6] WARN  org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver- Failed to bind request element: org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; nested exception is java.lang.NumberFormatException: For input string: "undefined"
2018/12/29-10:21 [http-nio-12080-exec-6] WARN  org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver- Resolved exception caused by Handler execution: org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; nested exception is java.lang.NumberFormatException: For input string: "undefined"
2018/12/29-10:21 [http-nio-12080-exec-7] WARN  org.springframework.web.servlet.PageNotFound- Request method 'GET' not supported
2018/12/29-10:21 [http-nio-12080-exec-7] WARN  org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver- Resolved exception caused by Handler execution: org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported
2018/12/29-10:21 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-10:21 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-10:21 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-10:21 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-10:21 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-10:21 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-10:21 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-10:21 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-10:21 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-10:21 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:21 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-10:21 [http-nio-12080-exec-2] WARN  org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver- Failed to bind request element: org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; nested exception is java.lang.NumberFormatException: For input string: "undefined"
2018/12/29-10:21 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-10:21 [http-nio-12080-exec-2] WARN  org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver- Resolved exception caused by Handler execution: org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; nested exception is java.lang.NumberFormatException: For input string: "undefined"
2018/12/29-10:21 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-10:21 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:21 [http-nio-12080-exec-1] WARN  org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver- Failed to bind request element: org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; nested exception is java.lang.NumberFormatException: For input string: "undefined"
2018/12/29-10:21 [http-nio-12080-exec-1] WARN  org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver- Resolved exception caused by Handler execution: org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; nested exception is java.lang.NumberFormatException: For input string: "undefined"
2018/12/29-10:21 [http-nio-12080-exec-1] WARN  org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver- Failed to bind request element: org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; nested exception is java.lang.NumberFormatException: For input string: "undefined"
2018/12/29-10:21 [http-nio-12080-exec-1] WARN  org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver- Resolved exception caused by Handler execution: org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; nested exception is java.lang.NumberFormatException: For input string: "undefined"
2018/12/29-10:21 [http-nio-12080-exec-4] WARN  org.springframework.web.servlet.PageNotFound- Request method 'GET' not supported
2018/12/29-10:21 [http-nio-12080-exec-4] WARN  org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver- Resolved exception caused by Handler execution: org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported
2018/12/29-10:21 [http-nio-12080-exec-5] WARN  org.springframework.web.servlet.PageNotFound- Request method 'GET' not supported
2018/12/29-10:21 [http-nio-12080-exec-5] WARN  org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver- Resolved exception caused by Handler execution: org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported
2018/12/29-10:21 [http-nio-12080-exec-6] WARN  org.springframework.web.servlet.PageNotFound- Request method 'GET' not supported
2018/12/29-10:21 [http-nio-12080-exec-6] WARN  org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver- Resolved exception caused by Handler execution: org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported
2018/12/29-10:22 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-10:22 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-10:22 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-10:22 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-10:22 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-10:22 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-10:22 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-10:22 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:22 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-10:22 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-10:22 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-10:22 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-10:22 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-10:22 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:22 [http-nio-12080-exec-10] WARN  org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver- Failed to bind request element: org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; nested exception is java.lang.NumberFormatException: For input string: "undefined"
2018/12/29-10:22 [http-nio-12080-exec-10] WARN  org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver- Resolved exception caused by Handler execution: org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; nested exception is java.lang.NumberFormatException: For input string: "undefined"
2018/12/29-10:22 [http-nio-12080-exec-3] WARN  org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver- Failed to bind request element: org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; nested exception is java.lang.NumberFormatException: For input string: "undefined"
2018/12/29-10:22 [http-nio-12080-exec-3] WARN  org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver- Resolved exception caused by Handler execution: org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; nested exception is java.lang.NumberFormatException: For input string: "undefined"
2018/12/29-10:22 [http-nio-12080-exec-3] WARN  org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver- Failed to bind request element: org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; nested exception is java.lang.NumberFormatException: For input string: "undefined"
2018/12/29-10:22 [http-nio-12080-exec-3] WARN  org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver- Resolved exception caused by Handler execution: org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; nested exception is java.lang.NumberFormatException: For input string: "undefined"
2018/12/29-10:22 [http-nio-12080-exec-4] WARN  org.springframework.web.servlet.PageNotFound- Request method 'GET' not supported
2018/12/29-10:22 [http-nio-12080-exec-4] WARN  org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver- Resolved exception caused by Handler execution: org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported
2018/12/29-10:22 [http-nio-12080-exec-5] WARN  org.springframework.web.servlet.PageNotFound- Request method 'GET' not supported
2018/12/29-10:22 [http-nio-12080-exec-5] WARN  org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver- Resolved exception caused by Handler execution: org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported
2018/12/29-10:22 [http-nio-12080-exec-6] WARN  org.springframework.web.servlet.PageNotFound- Request method 'GET' not supported
2018/12/29-10:22 [http-nio-12080-exec-6] WARN  org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver- Resolved exception caused by Handler execution: org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported
2018/12/29-10:24 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-10:24 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-10:24 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-10:24 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-10:24 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-10:24 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-10:24 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-10:24 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-10:24 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:24 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-10:24 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-10:24 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-10:24 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-10:24 [http-nio-12080-exec-10] WARN  org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver- Failed to bind request element: org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; nested exception is java.lang.NumberFormatException: For input string: "undefined"
2018/12/29-10:24 [http-nio-12080-exec-10] WARN  org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver- Resolved exception caused by Handler execution: org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; nested exception is java.lang.NumberFormatException: For input string: "undefined"
2018/12/29-10:24 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:24 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-10:24 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-10:24 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:24 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:24 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-10:24 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:24 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:24 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-10:24 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:24 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:24 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-10:24 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:24 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:24 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-10:24 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:24 [http-nio-12080-exec-3] WARN  org.springframework.web.servlet.PageNotFound- Request method 'GET' not supported
2018/12/29-10:24 [http-nio-12080-exec-3] WARN  org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver- Resolved exception caused by Handler execution: org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported
2018/12/29-10:25 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-10:25 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-10:25 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-10:25 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-10:25 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-10:25 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-10:25 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-10:25 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:25 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-10:25 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-10:25 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-10:25 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-10:25 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-10:25 [http-nio-12080-exec-7] WARN  org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver- Failed to bind request element: org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; nested exception is java.lang.NumberFormatException: For input string: "undefined"
2018/12/29-10:25 [http-nio-12080-exec-7] WARN  org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver- Resolved exception caused by Handler execution: org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; nested exception is java.lang.NumberFormatException: For input string: "undefined"
2018/12/29-10:25 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:25 [http-nio-12080-exec-8] WARN  org.springframework.web.servlet.PageNotFound- Request method 'GET' not supported
2018/12/29-10:25 [http-nio-12080-exec-8] WARN  org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver- Resolved exception caused by Handler execution: org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported
2018/12/29-10:25 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-10:25 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-10:25 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:25 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:25 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-10:25 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:25 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:25 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-10:25 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:25 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:25 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-10:25 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:25 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:25 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-10:25 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:26 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-10:26 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-10:26 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-10:26 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-10:26 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:26 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-10:26 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-10:26 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-10:26 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-10:26 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-10:26 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-10:26 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-10:26 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-10:26 [http-nio-12080-exec-5] WARN  org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver- Failed to bind request element: org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; nested exception is java.lang.NumberFormatException: For input string: "undefined"
2018/12/29-10:26 [http-nio-12080-exec-5] WARN  org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver- Resolved exception caused by Handler execution: org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; nested exception is java.lang.NumberFormatException: For input string: "undefined"
2018/12/29-10:26 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:26 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-10:26 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-10:26 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:26 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:26 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-10:26 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:26 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:26 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-10:26 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:26 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:26 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-10:26 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:26 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:26 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-10:26 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:26 [http-nio-12080-exec-6] WARN  org.springframework.web.servlet.PageNotFound- Request method 'GET' not supported
2018/12/29-10:26 [http-nio-12080-exec-6] WARN  org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver- Resolved exception caused by Handler execution: org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported
2018/12/29-10:26 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-10:26 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-10:26 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-10:26 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-10:26 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-10:26 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:26 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-10:26 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-10:26 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-10:26 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-10:26 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-10:26 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-10:26 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-10:26 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:26 [http-nio-12080-exec-10] WARN  org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver- Failed to bind request element: org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; nested exception is java.lang.NumberFormatException: For input string: "undefined"
2018/12/29-10:26 [http-nio-12080-exec-10] WARN  org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver- Resolved exception caused by Handler execution: org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; nested exception is java.lang.NumberFormatException: For input string: "undefined"
2018/12/29-10:26 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-10:26 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-10:26 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:26 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:26 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-10:26 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:26 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:26 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-10:26 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:26 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:26 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-10:26 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:26 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:26 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-10:26 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:26 [http-nio-12080-exec-1] WARN  org.springframework.web.servlet.PageNotFound- Request method 'GET' not supported
2018/12/29-10:26 [http-nio-12080-exec-1] WARN  org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver- Resolved exception caused by Handler execution: org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported
2018/12/29-10:27 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-10:27 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-10:27 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-10:27 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-10:27 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-10:27 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-10:27 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-10:27 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-10:27 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-10:27 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:27 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-10:27 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-10:27 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-10:27 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:27 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-10:27 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-10:27 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:27 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:27 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-10:27 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:27 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:27 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-10:27 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:27 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:27 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-10:27 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:27 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:27 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-10:27 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:27 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-10:27 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-10:27 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:27 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-10:27 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-10:27 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-10:27 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:27 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-10:27 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-10:27 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 8(Long)
2018/12/29-10:27 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:27 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-10:27 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 8(Long)
2018/12/29-10:27 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 2
2018/12/29-10:27 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:27 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-10:27 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:27 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:27 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-10:27 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:27 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-10:27 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-10:27 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:27 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-10:27 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-10:27 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-10:27 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-10:27 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-10:27 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 3(Integer), 3(Integer)
2018/12/29-10:27 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-10:27 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-10:28 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-10:28 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 8(Long)
2018/12/29-10:28 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:28 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-10:28 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 8(Long)
2018/12/29-10:28 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 2
2018/12/29-10:28 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:28 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-10:28 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:28 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:28 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-10:28 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:28 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-10:28 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-10:28 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:28 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-10:28 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-10:28 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-10:28 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:28 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-10:28 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-10:28 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:28 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:28 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-10:28 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:28 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:28 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-10:28 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:28 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:28 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-10:28 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:28 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:28 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-10:28 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:29 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-10:29 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-10:29 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-10:29 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-10:29 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-10:29 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-10:29 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-10:29 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:29 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-10:29 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-10:29 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-10:29 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-10:29 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-10:29 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:29 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-10:29 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-10:29 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:29 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:29 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-10:29 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:29 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:29 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-10:29 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:29 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:29 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-10:29 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:29 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:29 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-10:29 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:31 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-10:31 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-10:31 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-10:31 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-10:31 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-10:31 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-10:31 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-10:31 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:31 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-10:31 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-10:31 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-10:31 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-10:31 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-10:31 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:31 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-10:31 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-10:31 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:31 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:31 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-10:31 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:31 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:31 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-10:31 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:31 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:31 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-10:31 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:31 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:31 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-10:31 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:31 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-10:31 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-10:31 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-10:31 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-10:31 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-10:31 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-10:31 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-10:31 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:31 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-10:31 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-10:31 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-10:31 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-10:31 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-10:31 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:31 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-10:31 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-10:31 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:31 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:31 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-10:31 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:31 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:31 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-10:31 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:31 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:31 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-10:31 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:31 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:31 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-10:31 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:32 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-10:32 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-10:32 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-10:32 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-10:32 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-10:32 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-10:32 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-10:32 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-10:32 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-10:32 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:32 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-10:32 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-10:32 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-10:32 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:32 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-10:32 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-10:32 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:32 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:32 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-10:32 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:32 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:32 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-10:32 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:32 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:32 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-10:32 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:32 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:32 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-10:32 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:33 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-10:33 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-10:33 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-10:33 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-10:33 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-10:33 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-10:33 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-10:33 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-10:33 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-10:33 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:33 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-10:33 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-10:33 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-10:33 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:33 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-10:33 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-10:33 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:33 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:33 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-10:33 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:33 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:33 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-10:33 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:33 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:33 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-10:33 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:33 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:33 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-10:33 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:33 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-10:33 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-10:33 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-10:33 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-10:33 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-10:33 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:33 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-10:33 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-10:33 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-10:33 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-10:33 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-10:33 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-10:33 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-10:33 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:33 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-10:33 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-10:33 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:33 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:33 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-10:33 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:33 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:33 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-10:33 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:33 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:33 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-10:33 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:33 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:33 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-10:33 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:35 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-10:35 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-10:35 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-10:35 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-10:35 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-10:35 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:35 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-10:35 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-10:35 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-10:35 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-10:35 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-10:35 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-10:35 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-10:35 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:35 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-10:35 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-10:35 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:35 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:35 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-10:35 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:35 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:35 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-10:35 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:35 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:35 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-10:35 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:35 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:35 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-10:35 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:35 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-10:35 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-10:35 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-10:35 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-10:35 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-10:35 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:35 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-10:35 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-10:35 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-10:35 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-10:35 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-10:35 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-10:35 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-10:35 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:35 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-10:35 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-10:35 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:35 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:35 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-10:35 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:35 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:35 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-10:35 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:35 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:35 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-10:35 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:35 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:35 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-10:35 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:38 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-10:38 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-10:38 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-10:38 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-10:38 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-10:38 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-10:38 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-10:38 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:38 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-10:38 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-10:38 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-10:38 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-10:38 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-10:38 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:38 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-10:38 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-10:38 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:38 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:38 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-10:38 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:38 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:38 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-10:38 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:38 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:38 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-10:38 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:38 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:38 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-10:38 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:38 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-10:38 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-10:38 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-10:38 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-10:38 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-10:38 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:38 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-10:38 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-10:38 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-10:38 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-10:38 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-10:38 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-10:38 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-10:38 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:38 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-10:38 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-10:38 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:38 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:38 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-10:38 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:38 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:38 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-10:38 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:38 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:38 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-10:38 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:38 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:38 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-10:38 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:39 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-10:39 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-10:39 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-10:39 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-10:39 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-10:39 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-10:39 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-10:39 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-10:39 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-10:39 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:39 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-10:39 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-10:39 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-10:39 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:39 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-10:39 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-10:39 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:39 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:39 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-10:39 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:39 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:39 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-10:39 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:39 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:39 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-10:39 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:39 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:39 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-10:39 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:40 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-10:40 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-10:40 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-10:40 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-10:40 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-10:40 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:40 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-10:40 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-10:40 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-10:40 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-10:40 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-10:40 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-10:40 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-10:40 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:40 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-10:40 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-10:40 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:40 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:40 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-10:40 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:40 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:40 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-10:40 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:40 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:40 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-10:40 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:40 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:40 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-10:40 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:40 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-10:40 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-10:40 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:40 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-10:44 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-10:44 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-10:44 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:44 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-10:44 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-10:44 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-10:44 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-10:44 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-10:44 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-10:44 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-10:44 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-10:44 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-10:44 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-10:44 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:44 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-10:44 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-10:44 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:44 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:44 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-10:44 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:44 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:44 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-10:44 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:44 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:44 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-10:44 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:44 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:44 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-10:44 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:45 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-10:45 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-10:45 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-10:45 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-10:45 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-10:45 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-10:45 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-10:45 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-10:45 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-10:45 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:45 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-10:45 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-10:45 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-10:45 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:45 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-10:45 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-10:45 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:45 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:45 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-10:45 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:45 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:45 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-10:45 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:45 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:45 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-10:45 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:45 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:45 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-10:45 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:46 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-10:46 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-10:46 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-10:46 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-10:46 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-10:46 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-10:46 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-10:46 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-10:46 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-10:46 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:46 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-10:46 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-10:46 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-10:46 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:46 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-10:46 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-10:46 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:46 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:46 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-10:46 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:46 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:46 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-10:46 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:46 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:46 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-10:46 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:46 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:46 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-10:46 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:46 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-10:46 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-10:46 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-10:46 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-10:46 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-10:46 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-10:46 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-10:46 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:46 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-10:46 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-10:46 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-10:46 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-10:46 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-10:46 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:46 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-10:46 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-10:46 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:46 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:46 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-10:46 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:46 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:46 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-10:46 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:46 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:46 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-10:46 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:46 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:46 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-10:46 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:48 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-10:48 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-10:48 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-10:48 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-10:48 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-10:48 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-10:48 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-10:48 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-10:48 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-10:48 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:48 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-10:48 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-10:48 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-10:48 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:48 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-10:48 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-10:48 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:48 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:48 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-10:48 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:48 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:48 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-10:48 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:48 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:48 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-10:48 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:48 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:48 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-10:48 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:49 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-10:49 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-10:49 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-10:49 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-10:49 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-10:49 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-10:49 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-10:49 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:49 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-10:49 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-10:49 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-10:49 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-10:49 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-10:49 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:49 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-10:49 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-10:49 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:49 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:49 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-10:49 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:49 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:49 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-10:49 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:49 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:49 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-10:49 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:49 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:49 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-10:49 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:53 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-10:53 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-10:53 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-10:53 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-10:53 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-10:53 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-10:53 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-10:53 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:53 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-10:53 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-10:53 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-10:53 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-10:53 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-10:53 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:53 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-10:53 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-10:53 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:53 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:53 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-10:53 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:53 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:53 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-10:53 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:53 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:53 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-10:53 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:53 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:53 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-10:53 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:54 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-10:54 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-10:54 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-10:54 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-10:54 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-10:54 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-10:54 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-10:54 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:54 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-10:54 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-10:54 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-10:54 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-10:54 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-10:54 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:54 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-10:54 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-10:54 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:54 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:54 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-10:54 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:54 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:54 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-10:54 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:54 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:54 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-10:54 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:54 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:54 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-10:54 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:54 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-10:54 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-10:54 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-10:54 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-10:54 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-10:54 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-10:54 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-10:54 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-10:54 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-10:54 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:54 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-10:54 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-10:54 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-10:54 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:54 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-10:54 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-10:54 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:54 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:54 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-10:54 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:54 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:54 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-10:54 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:54 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:54 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-10:54 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:54 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:54 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-10:54 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:55 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-10:55 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-10:55 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-10:55 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-10:55 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-10:55 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-10:55 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-10:55 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-10:55 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-10:55 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:55 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-10:55 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-10:55 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-10:55 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:55 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-10:55 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-10:55 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:55 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:55 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-10:55 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:55 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:55 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-10:55 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:55 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:55 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-10:55 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:55 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:55 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-10:55 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:55 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-10:55 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-10:55 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-10:55 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-10:55 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-10:55 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-10:55 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-10:55 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-10:55 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-10:55 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:55 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-10:55 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-10:55 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-10:55 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:55 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-10:55 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-10:55 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:55 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:55 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-10:55 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:55 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:55 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-10:55 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:55 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:55 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-10:55 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:55 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:55 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-10:55 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:56 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-10:56 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-10:56 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-10:56 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-10:56 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-10:56 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:56 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-10:56 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-10:56 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-10:56 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-10:56 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-10:56 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-10:56 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-10:56 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:56 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-10:56 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-10:56 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:56 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:56 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-10:56 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:56 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:56 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-10:56 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:56 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:56 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-10:56 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:56 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:56 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-10:56 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:57 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-10:57 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-10:57 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-10:57 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-10:57 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-10:57 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:57 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-10:57 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-10:57 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-10:57 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-10:57 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-10:57 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-10:57 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-10:57 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:57 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-10:57 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-10:57 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:57 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:57 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-10:57 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:57 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:57 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-10:57 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:57 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:57 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-10:57 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:57 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:57 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-10:57 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:57 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-10:57 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-10:57 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:57 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-10:57 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==>  Preparing: SELECT count(*) FROM article_category INNER JOIN article ON article_category.article__id = article.article_id INNER JOIN category ON article_category.category_id = category.category_id WHERE article_category.category_id = ? 
2018/12/29-10:57 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==> Parameters: 1(Long)
2018/12/29-10:57 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- <==      Total: 1
2018/12/29-10:57 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==>  Preparing: select article.article_id as articleId,title,expect,author,read_count as readCount,article.create_time as createTime from article_category inner join article on article_category.article__id = article.article_id inner join category on article_category.category_id = category.category_id where article_category.category_id = ? limit ?,? 
2018/12/29-10:57 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==> Parameters: 1(Long), 0(Integer), 3(Integer)
2018/12/29-10:57 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- <==      Total: 2
2018/12/29-10:57 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-10:57 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-10:57 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-10:57 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-10:57 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-10:57 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-10:57 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-10:57 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-10:57 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==>  Preparing: SELECT count(*) FROM article_category INNER JOIN article ON article_category.article__id = article.article_id INNER JOIN category ON article_category.category_id = category.category_id WHERE article_category.category_id = ? 
2018/12/29-10:57 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==> Parameters: 1(Long)
2018/12/29-10:57 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- <==      Total: 1
2018/12/29-10:57 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==>  Preparing: select article.article_id as articleId,title,expect,author,read_count as readCount,article.create_time as createTime from article_category inner join article on article_category.article__id = article.article_id inner join category on article_category.category_id = category.category_id where article_category.category_id = ? limit ?,? 
2018/12/29-10:57 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==> Parameters: 1(Long), 0(Integer), 3(Integer)
2018/12/29-10:57 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- <==      Total: 2
2018/12/29-10:57 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-10:57 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==>  Preparing: SELECT count(*) FROM article_category INNER JOIN article ON article_category.article__id = article.article_id INNER JOIN category ON article_category.category_id = category.category_id WHERE article_category.category_id = ? 
2018/12/29-10:57 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==> Parameters: 2(Long)
2018/12/29-10:57 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- <==      Total: 1
2018/12/29-10:57 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==>  Preparing: select article.article_id as articleId,title,expect,author,read_count as readCount,article.create_time as createTime from article_category inner join article on article_category.article__id = article.article_id inner join category on article_category.category_id = category.category_id where article_category.category_id = ? limit ?,? 
2018/12/29-10:57 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==> Parameters: 2(Long), 0(Integer), 3(Integer)
2018/12/29-10:57 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- <==      Total: 1
2018/12/29-10:57 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-10:57 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==>  Preparing: SELECT count(*) FROM article_category INNER JOIN article ON article_category.article__id = article.article_id INNER JOIN category ON article_category.category_id = category.category_id WHERE article_category.category_id = ? 
2018/12/29-10:57 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==> Parameters: 3(Long)
2018/12/29-10:57 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- <==      Total: 1
2018/12/29-10:57 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==>  Preparing: select article.article_id as articleId,title,expect,author,read_count as readCount,article.create_time as createTime from article_category inner join article on article_category.article__id = article.article_id inner join category on article_category.category_id = category.category_id where article_category.category_id = ? limit ?,? 
2018/12/29-10:57 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==> Parameters: 3(Long), 0(Integer), 3(Integer)
2018/12/29-10:57 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- <==      Total: 2
2018/12/29-10:57 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-10:57 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-10:57 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-10:57 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-10:57 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-10:57 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-10:57 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-10:57 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-10:57 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-10:57 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-10:57 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-10:57 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-10:57 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 3(Integer), 3(Integer)
2018/12/29-10:57 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-10:57 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-10:57 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-10:57 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-10:57 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-10:57 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-10:57 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 6(Integer), 3(Integer)
2018/12/29-10:57 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 1
2018/12/29-10:57 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-10:57 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==>  Preparing: SELECT count(*) FROM article_category INNER JOIN article ON article_category.article__id = article.article_id INNER JOIN category ON article_category.category_id = category.category_id WHERE article_category.category_id = ? 
2018/12/29-10:57 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==> Parameters: 1(Long)
2018/12/29-10:57 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- <==      Total: 1
2018/12/29-10:57 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==>  Preparing: select article.article_id as articleId,title,expect,author,read_count as readCount,article.create_time as createTime from article_category inner join article on article_category.article__id = article.article_id inner join category on article_category.category_id = category.category_id where article_category.category_id = ? limit ?,? 
2018/12/29-10:57 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==> Parameters: 1(Long), 0(Integer), 3(Integer)
2018/12/29-10:57 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- <==      Total: 2
2018/12/29-10:57 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-10:57 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-10:57 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-10:57 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-10:57 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-10:57 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-10:57 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-10:57 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-10:57 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-10:57 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-10:57 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:57 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-10:57 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-10:57 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-10:57 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:57 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-10:57 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-10:57 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:57 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:57 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-10:57 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:57 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:57 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-10:57 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:57 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:57 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-10:57 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:57 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:57 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-10:57 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:58 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-10:58 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-10:58 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-10:58 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-10:58 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-10:58 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-10:58 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-10:58 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:58 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-10:58 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-10:58 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-10:58 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-10:58 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-10:58 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:58 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-10:58 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-10:58 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:58 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:58 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-10:58 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:58 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:58 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-10:58 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:58 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:58 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-10:58 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:58 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:58 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-10:58 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:59 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-10:59 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-10:59 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-10:59 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-10:59 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-10:59 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-10:59 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-10:59 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-10:59 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-10:59 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:59 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-10:59 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-10:59 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-10:59 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:59 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-10:59 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-10:59 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:59 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:59 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-10:59 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:59 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:59 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-10:59 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:59 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:59 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-10:59 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:59 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:59 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-10:59 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:59 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-10:59 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-10:59 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-10:59 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-10:59 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-10:59 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-10:59 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-10:59 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-10:59 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 3(Integer), 3(Integer)
2018/12/29-10:59 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-10:59 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-10:59 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-10:59 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 8(Long)
2018/12/29-10:59 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:59 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-10:59 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 8(Long)
2018/12/29-10:59 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 2
2018/12/29-10:59 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:59 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-10:59 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-10:59 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-10:59 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-10:59 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:00 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-11:00 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-11:00 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-11:00 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-11:00 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-11:00 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-11:00 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:00 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-11:00 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-11:00 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-11:00 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:00 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-11:00 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:00 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:00 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-11:00 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:00 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:00 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-11:00 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:00 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:00 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-11:00 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:01 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-11:01 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-11:01 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-11:01 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-11:01 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-11:01 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-11:01 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-11:01 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-11:01 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-11:01 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-11:01 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-11:01 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-11:01 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-11:01 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:01 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-11:01 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-11:01 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-11:01 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:01 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-11:01 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:01 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:01 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-11:01 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:01 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:01 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-11:01 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:01 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:01 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-11:01 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:01 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-11:01 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-11:01 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-11:01 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-11:01 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-11:01 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-11:01 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-11:01 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-11:01 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-11:01 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-11:01 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-11:01 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-11:01 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-11:01 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:01 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-11:01 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-11:01 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-11:01 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:01 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-11:01 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:01 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:01 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-11:01 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:01 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:01 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-11:01 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:01 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:01 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-11:01 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:02 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-11:02 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-11:02 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-11:02 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-11:02 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-11:02 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-11:02 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-11:02 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-11:02 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-11:02 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-11:02 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-11:02 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-11:02 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 8(Long)
2018/12/29-11:02 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:02 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-11:02 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 8(Long)
2018/12/29-11:02 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 2
2018/12/29-11:02 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:02 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-11:02 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:02 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:02 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-11:02 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:08 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-11:08 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-11:08 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-11:08 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-11:08 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-11:08 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-11:08 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-11:08 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-11:08 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 3(Integer), 3(Integer)
2018/12/29-11:08 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-11:08 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-11:08 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-11:08 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-11:08 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-11:08 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-11:08 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-11:08 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-11:08 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:08 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-11:08 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-11:08 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-11:08 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:08 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-11:08 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:08 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:08 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-11:08 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:08 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:08 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-11:08 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:08 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:08 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-11:08 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:09 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-11:09 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-11:09 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-11:09 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-11:09 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-11:09 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-11:09 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-11:09 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-11:09 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 6(Integer), 3(Integer)
2018/12/29-11:09 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 1
2018/12/29-11:09 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-11:09 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-11:09 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-11:09 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-11:09 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-11:09 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-11:09 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-11:09 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-11:09 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-11:09 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-11:09 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-11:09 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-11:09 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-11:09 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-11:09 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-11:09 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-11:09 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-11:09 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-11:09 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-11:09 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:09 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-11:09 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-11:09 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-11:09 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:09 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-11:09 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:09 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:09 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-11:09 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:09 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:09 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-11:09 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:09 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:09 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-11:09 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:09 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-11:09 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-11:09 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-11:09 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-11:09 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-11:09 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 8(Long)
2018/12/29-11:09 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:09 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-11:09 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 8(Long)
2018/12/29-11:09 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 2
2018/12/29-11:09 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:09 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-11:09 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:09 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:09 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-11:09 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:09 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-11:09 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-11:09 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-11:09 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-11:09 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-11:09 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-11:09 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:09 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-11:09 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-11:09 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-11:09 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:09 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-11:09 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:09 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:09 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-11:09 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:09 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:09 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-11:09 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:09 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:09 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-11:09 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:09 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-11:09 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-11:09 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-11:09 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-11:09 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-11:09 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 8(Long)
2018/12/29-11:09 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:09 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-11:09 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 8(Long)
2018/12/29-11:09 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 2
2018/12/29-11:09 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:09 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-11:09 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:09 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:09 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-11:09 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:09 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-11:09 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-11:09 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-11:09 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-11:09 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-11:09 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 8(Long)
2018/12/29-11:09 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:09 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-11:09 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 8(Long)
2018/12/29-11:09 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 2
2018/12/29-11:09 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:09 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-11:09 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:09 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:09 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-11:09 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:09 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-11:09 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-11:09 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-11:09 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-11:09 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-11:09 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-11:09 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:09 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-11:09 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-11:09 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-11:09 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:09 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-11:09 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:09 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:09 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-11:09 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:09 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:09 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-11:09 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:09 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:09 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-11:09 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:09 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-11:09 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-11:09 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-11:09 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-11:11 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-11:11 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-11:11 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:11 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-11:11 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-11:11 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-11:11 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:11 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-11:11 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:11 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:11 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-11:11 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:11 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:11 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-11:11 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:11 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:11 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-11:11 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:14 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-11:14 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-11:14 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-11:14 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-11:14 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-11:14 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-11:14 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:14 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-11:14 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-11:14 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-11:14 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:14 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-11:14 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:14 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:14 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-11:14 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:14 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:14 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-11:14 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:14 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:14 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-11:14 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:16 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-11:16 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-11:16 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-11:16 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-11:16 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-11:16 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-11:16 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-11:16 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-11:16 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-11:16 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-11:16 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-11:16 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-11:16 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-11:16 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:16 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-11:16 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-11:16 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-11:16 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:16 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-11:16 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:16 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:16 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-11:16 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:16 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:16 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-11:16 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:16 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:16 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-11:16 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:20 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-11:20 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-11:20 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-11:20 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-11:20 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-11:20 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-11:20 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-11:20 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-11:20 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 3(Integer), 3(Integer)
2018/12/29-11:20 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-11:20 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-11:20 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-11:20 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-11:20 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-11:20 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-11:20 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 6(Integer), 3(Integer)
2018/12/29-11:20 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 1
2018/12/29-11:20 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-11:20 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-11:20 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-11:20 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-11:20 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-11:20 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-11:20 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-11:20 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-11:20 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-11:20 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-11:20 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-11:20 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-11:20 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-11:20 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==>  Preparing: SELECT count(*) FROM article_category INNER JOIN article ON article_category.article__id = article.article_id INNER JOIN category ON article_category.category_id = category.category_id WHERE article_category.category_id = ? 
2018/12/29-11:20 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==> Parameters: 1(Long)
2018/12/29-11:20 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- <==      Total: 1
2018/12/29-11:20 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==>  Preparing: select article.article_id as articleId,title,expect,author,read_count as readCount,article.create_time as createTime from article_category inner join article on article_category.article__id = article.article_id inner join category on article_category.category_id = category.category_id where article_category.category_id = ? limit ?,? 
2018/12/29-11:20 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==> Parameters: 1(Long), 0(Integer), 3(Integer)
2018/12/29-11:20 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- <==      Total: 2
2018/12/29-11:20 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-11:20 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-11:20 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-11:20 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-11:20 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-11:20 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-11:20 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-11:20 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-11:21 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-11:21 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-11:21 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-11:21 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-11:21 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 3(Integer), 3(Integer)
2018/12/29-11:21 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-11:21 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-11:21 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-11:21 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-11:21 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-11:21 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-11:21 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 6(Integer), 3(Integer)
2018/12/29-11:21 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 1
2018/12/29-11:21 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-11:21 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==>  Preparing: SELECT count(*) FROM article_category INNER JOIN article ON article_category.article__id = article.article_id INNER JOIN category ON article_category.category_id = category.category_id WHERE article_category.category_id = ? 
2018/12/29-11:21 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==> Parameters: 1(Long)
2018/12/29-11:21 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- <==      Total: 1
2018/12/29-11:21 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==>  Preparing: select article.article_id as articleId,title,expect,author,read_count as readCount,article.create_time as createTime from article_category inner join article on article_category.article__id = article.article_id inner join category on article_category.category_id = category.category_id where article_category.category_id = ? limit ?,? 
2018/12/29-11:21 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==> Parameters: 1(Long), 0(Integer), 3(Integer)
2018/12/29-11:21 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- <==      Total: 2
2018/12/29-11:21 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-11:21 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==>  Preparing: SELECT count(*) FROM article_category INNER JOIN article ON article_category.article__id = article.article_id INNER JOIN category ON article_category.category_id = category.category_id WHERE article_category.category_id = ? 
2018/12/29-11:21 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==> Parameters: 2(Long)
2018/12/29-11:21 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- <==      Total: 1
2018/12/29-11:21 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==>  Preparing: select article.article_id as articleId,title,expect,author,read_count as readCount,article.create_time as createTime from article_category inner join article on article_category.article__id = article.article_id inner join category on article_category.category_id = category.category_id where article_category.category_id = ? limit ?,? 
2018/12/29-11:21 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==> Parameters: 2(Long), 0(Integer), 3(Integer)
2018/12/29-11:21 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- <==      Total: 1
2018/12/29-11:21 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-11:21 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==>  Preparing: SELECT count(*) FROM article_category INNER JOIN article ON article_category.article__id = article.article_id INNER JOIN category ON article_category.category_id = category.category_id WHERE article_category.category_id = ? 
2018/12/29-11:21 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==> Parameters: 3(Long)
2018/12/29-11:21 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- <==      Total: 1
2018/12/29-11:21 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==>  Preparing: select article.article_id as articleId,title,expect,author,read_count as readCount,article.create_time as createTime from article_category inner join article on article_category.article__id = article.article_id inner join category on article_category.category_id = category.category_id where article_category.category_id = ? limit ?,? 
2018/12/29-11:21 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==> Parameters: 3(Long), 0(Integer), 3(Integer)
2018/12/29-11:21 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- <==      Total: 2
2018/12/29-11:21 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-11:21 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==>  Preparing: SELECT count(*) FROM article_category INNER JOIN article ON article_category.article__id = article.article_id INNER JOIN category ON article_category.category_id = category.category_id WHERE article_category.category_id = ? 
2018/12/29-11:21 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- ==> Parameters: 4(Long)
2018/12/29-11:21 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId_COUNT- <==      Total: 1
2018/12/29-11:21 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==>  Preparing: select article.article_id as articleId,title,expect,author,read_count as readCount,article.create_time as createTime from article_category inner join article on article_category.article__id = article.article_id inner join category on article_category.category_id = category.category_id where article_category.category_id = ? limit ?,? 
2018/12/29-11:21 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- ==> Parameters: 4(Long), 0(Integer), 3(Integer)
2018/12/29-11:21 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectArticleListByCategoryId- <==      Total: 1
2018/12/29-11:21 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-11:21 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-11:21 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-11:21 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-11:21 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-11:21 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-11:21 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-11:21 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-11:21 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-11:21 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-11:21 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-11:21 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-11:21 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 3(Integer), 3(Integer)
2018/12/29-11:21 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-11:21 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-11:21 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-11:21 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-11:21 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-11:21 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-11:21 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 6(Integer), 3(Integer)
2018/12/29-11:21 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 1
2018/12/29-11:21 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-11:22 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-11:22 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 9(Long)
2018/12/29-11:22 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:22 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-11:22 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 9(Long)
2018/12/29-11:22 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 0
2018/12/29-11:22 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-11:22 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-11:22 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-11:22 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-11:22 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-11:22 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-11:22 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:22 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-11:22 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-11:22 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-11:22 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:22 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-11:22 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:22 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:22 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-11:22 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:22 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:22 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-11:22 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:22 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:22 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-11:22 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:34 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-11:34 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-11:34 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-11:34 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-11:34 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-11:34 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-11:34 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-11:34 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-11:34 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-11:34 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-11:34 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-11:34 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-11:34 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-11:34 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:34 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-11:34 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-11:34 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-11:34 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:34 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-11:34 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:34 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:34 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-11:34 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:34 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:34 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-11:34 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:34 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:34 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-11:34 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:38 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-11:38 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-11:38 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-11:38 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-11:38 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-11:38 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-11:38 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-11:38 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-11:38 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-11:38 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-11:38 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-11:38 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-11:38 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-11:38 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:38 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-11:38 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-11:38 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-11:38 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:38 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-11:38 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:38 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:38 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-11:38 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:38 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:38 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-11:38 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:38 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:38 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-11:38 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:40 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-11:40 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-11:40 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-11:40 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-11:40 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-11:40 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-11:40 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-11:40 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-11:40 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-11:40 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-11:40 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-11:40 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-11:40 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-11:40 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:40 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-11:40 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-11:40 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-11:40 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:40 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-11:40 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:40 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:40 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-11:40 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:40 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:40 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-11:40 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:40 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:40 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-11:40 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:41 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-11:41 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-11:41 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-11:41 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-11:41 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-11:41 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-11:41 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-11:41 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-11:41 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-11:41 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-11:41 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-11:41 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-11:41 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-11:41 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:41 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-11:41 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-11:41 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-11:41 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:41 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-11:41 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:41 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:41 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-11:41 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:41 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:41 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-11:41 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:41 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:41 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-11:41 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:41 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-11:41 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-11:41 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-11:41 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-11:41 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-11:41 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-11:41 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-11:41 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-11:41 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-11:41 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-11:41 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-11:41 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-11:41 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-11:41 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:41 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-11:41 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-11:41 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-11:41 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:41 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-11:41 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:41 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:41 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-11:41 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:41 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:41 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-11:41 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:41 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:41 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-11:41 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:44 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-11:44 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-11:44 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-11:44 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-11:44 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-11:44 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-11:44 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-11:44 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-11:44 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-11:44 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-11:44 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-11:44 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-11:44 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-11:44 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:44 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-11:44 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-11:44 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-11:44 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:44 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-11:44 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:44 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:44 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-11:44 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:44 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:44 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-11:44 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:44 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:44 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-11:44 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:44 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-11:44 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-11:44 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-11:44 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-11:44 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-11:44 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-11:44 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-11:44 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-11:44 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-11:44 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-11:44 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-11:44 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-11:44 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-11:44 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-11:44 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-11:44 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 3(Integer), 3(Integer)
2018/12/29-11:44 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-11:44 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-11:44 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-11:44 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-11:44 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:44 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-11:44 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-11:44 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-11:44 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:44 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-11:44 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:44 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:44 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-11:44 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:44 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:44 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-11:44 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:44 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:44 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-11:44 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:45 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-11:45 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-11:45 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-11:45 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-11:45 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-11:45 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-11:45 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-11:45 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-11:45 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-11:45 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-11:45 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-11:45 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-11:45 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-11:45 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:45 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-11:45 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-11:45 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-11:45 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:45 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-11:45 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:45 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:45 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-11:45 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:45 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:45 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-11:45 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:45 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:45 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-11:45 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:47 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-11:47 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-11:47 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-11:47 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-11:47 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-11:47 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-11:47 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-11:47 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-11:47 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-11:47 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-11:47 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-11:47 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-11:47 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-11:47 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:47 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-11:47 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-11:47 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-11:47 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:47 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-11:47 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:47 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:47 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-11:47 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:47 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:47 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-11:47 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:47 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:47 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-11:47 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:47 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-11:47 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-11:47 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-11:47 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-11:47 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-11:47 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-11:47 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-11:47 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-11:47 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-11:47 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-11:47 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-11:47 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-11:47 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-11:47 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:47 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-11:47 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-11:47 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-11:47 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:47 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-11:47 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:47 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:47 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-11:47 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:47 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:47 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-11:47 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:47 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:47 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-11:47 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:51 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-11:51 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-11:51 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-11:51 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-11:51 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-11:51 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-11:51 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-11:51 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-11:51 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-11:51 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-11:51 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-11:51 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-11:51 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-11:51 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:51 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-11:51 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-11:51 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-11:51 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:51 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-11:51 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:51 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:51 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-11:51 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:51 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:51 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-11:51 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:51 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:51 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-11:51 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:52 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-11:52 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-11:52 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-11:52 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-11:52 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-11:52 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-11:52 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-11:52 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-11:52 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-11:52 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-11:52 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-11:52 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-11:52 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-11:52 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:52 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-11:52 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-11:52 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-11:52 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:52 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-11:52 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:52 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:52 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-11:52 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:52 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:52 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-11:52 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:52 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:52 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-11:52 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:52 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-11:52 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-11:52 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-11:52 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-11:52 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-11:52 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-11:52 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-11:52 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-11:52 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-11:52 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-11:52 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-11:53 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-11:53 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-11:53 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:53 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-11:53 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-11:53 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-11:53 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:53 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-11:53 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:53 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:53 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-11:53 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:53 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:53 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-11:53 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:53 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:53 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-11:53 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:53 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-11:53 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-11:53 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-11:53 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-11:53 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-11:53 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-11:53 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-11:53 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-11:53 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-11:53 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-11:53 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-11:53 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-11:53 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-11:53 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:53 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-11:53 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-11:53 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-11:53 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:53 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-11:53 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:53 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:53 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-11:53 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:53 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:53 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-11:53 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:53 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:53 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-11:53 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:53 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-11:53 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-11:53 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-11:53 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-11:53 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-11:53 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-11:53 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-11:53 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-11:53 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-11:53 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-11:53 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-11:53 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-11:53 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-11:53 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:53 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-11:53 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-11:53 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-11:53 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:53 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-11:53 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:53 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:53 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-11:53 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:53 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:53 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-11:53 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:53 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:53 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-11:53 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:54 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-11:54 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-11:54 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-11:54 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-11:54 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-11:54 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-11:54 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-11:54 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-11:54 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-11:54 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-11:54 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-11:54 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-11:54 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-11:54 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:54 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-11:54 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-11:54 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-11:54 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:54 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-11:54 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:54 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:54 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-11:54 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:54 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:54 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-11:54 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:54 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:54 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-11:54 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:54 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-11:54 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-11:54 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-11:54 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-11:54 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-11:54 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-11:54 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-11:54 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-11:54 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-11:54 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-11:54 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-11:54 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-11:54 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-11:54 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:54 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-11:54 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-11:54 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-11:54 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:54 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-11:54 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:54 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:54 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-11:54 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:54 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:54 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-11:54 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:54 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:54 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-11:54 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:54 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-11:54 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-11:54 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-11:54 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-11:54 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-11:54 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-11:54 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-11:54 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-11:54 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-11:54 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-11:54 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-11:54 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-11:54 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-11:54 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:54 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-11:54 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-11:54 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-11:54 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:54 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-11:54 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:54 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:54 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-11:54 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:54 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:54 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-11:54 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-11:54 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-11:54 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-11:54 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:10 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-13:10 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-13:10 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-13:10 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-13:10 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-13:10 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-13:10 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-13:10 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-13:10 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-13:10 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-13:10 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-13:10 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-13:10 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-13:10 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:10 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-13:10 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-13:10 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-13:10 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-13:10 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-13:10 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:10 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-13:10 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-13:10 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:10 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-13:10 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-13:10 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:10 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-13:10 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-13:10 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:11 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-13:11 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-13:11 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-13:11 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-13:11 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-13:11 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-13:11 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-13:11 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-13:11 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-13:11 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-13:11 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-13:11 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-13:11 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-13:11 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:11 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-13:11 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-13:11 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-13:11 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-13:11 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-13:11 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:11 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-13:11 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-13:11 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:11 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-13:11 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-13:11 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:11 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-13:11 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-13:11 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:13 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-13:13 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-13:13 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-13:13 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-13:13 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-13:13 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-13:13 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-13:13 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-13:13 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-13:13 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-13:13 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-13:13 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-13:13 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-13:13 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:13 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-13:13 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-13:13 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-13:13 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-13:13 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-13:13 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:13 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-13:13 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-13:13 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:13 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-13:13 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-13:13 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:13 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-13:13 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-13:13 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:13 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-13:13 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-13:13 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-13:13 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-13:13 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-13:13 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-13:13 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-13:13 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-13:13 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-13:13 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-13:13 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-13:13 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-13:13 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-13:13 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:13 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-13:13 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-13:13 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-13:13 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-13:13 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-13:13 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:13 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-13:13 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-13:13 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:13 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-13:13 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-13:13 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:13 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-13:13 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-13:13 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:14 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-13:14 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-13:14 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-13:14 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-13:14 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-13:14 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-13:14 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-13:14 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-13:14 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-13:14 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-13:14 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-13:14 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-13:14 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-13:14 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:14 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-13:14 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-13:14 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-13:14 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-13:14 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-13:14 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:14 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-13:14 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-13:14 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:14 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-13:14 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-13:14 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:14 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-13:14 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-13:14 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:15 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-13:15 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-13:15 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-13:15 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-13:15 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-13:15 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-13:15 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-13:15 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-13:15 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-13:15 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-13:15 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-13:15 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-13:15 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-13:15 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:15 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-13:15 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-13:15 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-13:15 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-13:15 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-13:15 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:15 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-13:15 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-13:15 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:15 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-13:15 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-13:15 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:15 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-13:15 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-13:15 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:24 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-13:24 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-13:24 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-13:24 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-13:24 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-13:24 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-13:24 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-13:24 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-13:24 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-13:24 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-13:24 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-13:24 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-13:24 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-13:24 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:24 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-13:24 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-13:24 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-13:24 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-13:24 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-13:24 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:24 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-13:24 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-13:24 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:24 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-13:24 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-13:24 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:24 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-13:24 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-13:24 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:25 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-13:25 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-13:25 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-13:25 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-13:25 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-13:25 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-13:25 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-13:25 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-13:25 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-13:25 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-13:25 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-13:25 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-13:25 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-13:25 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-13:25 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-13:25 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 3(Integer), 3(Integer)
2018/12/29-13:25 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-13:25 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-13:25 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-13:25 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-13:25 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:25 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-13:25 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-13:25 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-13:25 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-13:25 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-13:25 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:25 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-13:25 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-13:25 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:25 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-13:25 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-13:25 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:25 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-13:25 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-13:25 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:26 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-13:26 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-13:26 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-13:26 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-13:26 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-13:26 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-13:26 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-13:26 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-13:26 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-13:26 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-13:26 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-13:26 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-13:26 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-13:26 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-13:26 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-13:26 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 3(Integer), 3(Integer)
2018/12/29-13:26 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-13:26 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-13:26 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-13:26 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-13:26 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:26 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-13:26 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-13:26 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-13:26 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-13:26 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-13:26 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:26 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-13:26 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-13:26 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:26 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-13:26 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-13:26 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:26 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-13:26 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-13:26 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:31 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-13:31 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-13:31 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-13:31 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-13:31 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-13:31 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-13:31 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-13:31 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-13:31 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-13:31 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-13:31 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-13:31 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-13:31 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-13:31 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:31 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-13:31 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-13:31 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-13:31 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-13:31 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-13:31 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:31 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-13:31 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-13:31 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:31 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-13:31 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-13:31 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:31 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-13:31 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-13:31 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:31 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-13:31 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-13:31 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-13:31 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-13:31 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-13:31 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-13:31 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-13:31 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-13:31 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-13:31 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-13:31 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-13:31 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-13:31 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-13:31 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-13:31 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-13:31 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 3(Integer), 3(Integer)
2018/12/29-13:31 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-13:31 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-13:31 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-13:31 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-13:31 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:31 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-13:31 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-13:31 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-13:31 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-13:31 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-13:31 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:31 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-13:31 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-13:31 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:31 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-13:31 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-13:31 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:31 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-13:31 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-13:31 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:31 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-13:31 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-13:31 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-13:31 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-13:31 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-13:31 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-13:31 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-13:31 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-13:31 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-13:31 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-13:31 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-13:31 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-13:31 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-13:31 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-13:31 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-13:31 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 3(Integer), 3(Integer)
2018/12/29-13:31 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-13:31 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-13:31 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-13:31 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-13:31 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:31 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-13:31 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-13:31 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-13:31 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-13:31 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-13:31 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:31 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-13:31 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-13:31 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:31 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-13:31 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-13:31 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:31 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-13:31 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-13:31 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:32 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-13:32 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-13:32 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-13:32 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-13:32 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-13:32 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-13:32 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-13:32 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-13:32 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-13:32 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-13:32 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-13:32 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-13:32 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-13:32 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-13:32 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-13:32 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 3(Integer), 3(Integer)
2018/12/29-13:32 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-13:32 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-13:32 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-13:32 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-13:32 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:32 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-13:32 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-13:32 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-13:32 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-13:32 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-13:32 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:32 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-13:32 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-13:32 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:32 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-13:32 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-13:32 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:32 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-13:32 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-13:32 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:32 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-13:32 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-13:32 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-13:32 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-13:32 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-13:32 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-13:32 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-13:32 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-13:32 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-13:32 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-13:32 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-13:32 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-13:32 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-13:32 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-13:32 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-13:32 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 3(Integer), 3(Integer)
2018/12/29-13:32 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-13:32 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-13:32 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-13:32 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-13:32 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:32 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-13:32 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-13:32 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-13:32 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-13:32 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-13:32 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:32 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-13:32 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-13:32 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:32 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-13:32 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-13:32 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:32 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-13:32 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-13:32 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:34 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-13:34 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-13:34 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-13:34 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-13:34 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-13:34 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-13:34 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-13:34 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-13:34 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-13:34 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-13:34 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-13:34 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-13:34 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-13:34 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:34 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-13:34 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-13:34 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-13:34 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-13:34 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-13:34 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:34 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-13:34 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-13:34 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:34 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-13:34 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-13:34 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:34 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-13:34 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-13:34 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:36 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-13:36 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-13:36 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-13:36 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-13:36 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-13:36 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-13:36 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-13:36 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-13:36 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-13:36 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-13:36 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-13:36 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-13:36 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-13:36 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:36 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-13:36 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-13:36 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-13:36 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-13:36 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-13:36 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:36 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-13:36 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-13:36 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:36 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-13:36 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-13:36 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:36 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-13:36 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-13:36 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:37 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-13:37 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-13:37 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-13:37 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-13:37 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-13:37 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-13:37 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-13:37 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-13:37 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-13:37 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-13:37 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-13:37 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-13:37 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-13:37 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:37 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-13:37 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-13:37 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-13:37 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-13:37 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-13:37 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:37 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-13:37 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-13:37 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:37 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-13:37 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-13:37 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:37 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-13:37 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-13:37 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:51 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-13:51 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-13:51 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-13:51 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-13:51 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-13:51 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-13:51 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-13:51 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-13:51 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-13:51 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-13:51 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-13:51 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-13:51 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-13:51 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:51 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-13:51 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-13:51 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-13:51 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-13:51 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-13:51 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:51 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-13:51 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-13:51 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:51 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-13:51 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-13:51 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:51 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-13:51 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-13:51 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:53 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-13:53 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-13:53 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-13:53 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-13:53 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-13:53 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-13:53 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-13:53 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-13:53 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-13:53 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-13:53 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-13:53 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-13:53 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-13:53 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-13:53 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-13:53 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 3(Integer), 3(Integer)
2018/12/29-13:53 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-13:53 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-13:53 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-13:53 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-13:53 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:53 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-13:53 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-13:53 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-13:53 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-13:53 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-13:53 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:53 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-13:53 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-13:53 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:53 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-13:53 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-13:53 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:53 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-13:53 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-13:53 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-13:54 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 2708 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/29-13:54 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/29-13:54 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/29-13:54 [restartedMain] WARN  org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext- Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanDefinitionStoreException: Failed to parse configuration class [org.hzqisheng.Application]; nested exception is java.io.FileNotFoundException: class path resource [org/hzqisheng/service/ArticleService.class] cannot be opened because it does not exist
2018/12/29-13:54 [restartedMain] ERROR org.springframework.beans.factory.support.DefaultListableBeanFactory- Destroy method on bean with name 'org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory' threw an exception
java.lang.IllegalStateException: ApplicationEventMulticaster not initialized - call 'refresh' before multicasting events via the context: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@37a1a07: startup date [Sat Dec 29 13:54:30 GMT+08:00 2018]; root of context hierarchy
	at org.springframework.context.support.AbstractApplicationContext.getApplicationEventMulticaster(AbstractApplicationContext.java:414) [spring-context-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.context.support.ApplicationListenerDetector.postProcessBeforeDestruction(ApplicationListenerDetector.java:97) ~[spring-context-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:253) ~[spring-beans-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578) [spring-beans-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554) [spring-beans-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961) [spring-beans-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523) [spring-beans-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968) [spring-beans-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030) [spring-context-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:556) [spring-context-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122) [spring-boot-1.5.4.RELEASE.jar:1.5.4.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693) [spring-boot-1.5.4.RELEASE.jar:1.5.4.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360) [spring-boot-1.5.4.RELEASE.jar:1.5.4.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303) [spring-boot-1.5.4.RELEASE.jar:1.5.4.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118) [spring-boot-1.5.4.RELEASE.jar:1.5.4.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107) [spring-boot-1.5.4.RELEASE.jar:1.5.4.RELEASE]
	at org.hzqisheng.Application.main(Application.java:17) [classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_144]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_144]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_144]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_144]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49) [spring-boot-devtools-1.5.4.RELEASE.jar:1.5.4.RELEASE]
2018/12/29-13:54 [restartedMain] ERROR org.springframework.boot.SpringApplication- Application startup failed
org.springframework.beans.factory.BeanDefinitionStoreException: Failed to parse configuration class [org.hzqisheng.Application]; nested exception is java.io.FileNotFoundException: class path resource [org/hzqisheng/service/ArticleService.class] cannot be opened because it does not exist
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:181) ~[spring-context-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:308) ~[spring-context-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:228) ~[spring-context-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:270) ~[spring-context-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:93) ~[spring-context-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:687) ~[spring-context-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:525) ~[spring-context-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122) ~[spring-boot-1.5.4.RELEASE.jar:1.5.4.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693) [spring-boot-1.5.4.RELEASE.jar:1.5.4.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360) [spring-boot-1.5.4.RELEASE.jar:1.5.4.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303) [spring-boot-1.5.4.RELEASE.jar:1.5.4.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118) [spring-boot-1.5.4.RELEASE.jar:1.5.4.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107) [spring-boot-1.5.4.RELEASE.jar:1.5.4.RELEASE]
	at org.hzqisheng.Application.main(Application.java:17) [classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_144]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_144]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_144]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_144]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49) [spring-boot-devtools-1.5.4.RELEASE.jar:1.5.4.RELEASE]
Caused by: java.io.FileNotFoundException: class path resource [org/hzqisheng/service/ArticleService.class] cannot be opened because it does not exist
	at org.springframework.core.io.ClassPathResource.getInputStream(ClassPathResource.java:172) ~[spring-core-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.core.type.classreading.SimpleMetadataReader.<init>(SimpleMetadataReader.java:50) ~[spring-core-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.core.type.classreading.SimpleMetadataReaderFactory.getMetadataReader(SimpleMetadataReaderFactory.java:98) ~[spring-core-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.boot.type.classreading.ConcurrentReferenceCachingMetadataReaderFactory.createMetadataReader(ConcurrentReferenceCachingMetadataReaderFactory.java:89) ~[spring-boot-1.5.4.RELEASE.jar:1.5.4.RELEASE]
	at org.springframework.boot.type.classreading.ConcurrentReferenceCachingMetadataReaderFactory.getMetadataReader(ConcurrentReferenceCachingMetadataReaderFactory.java:76) ~[spring-boot-1.5.4.RELEASE.jar:1.5.4.RELEASE]
	at org.springframework.core.type.classreading.SimpleMetadataReaderFactory.getMetadataReader(SimpleMetadataReaderFactory.java:93) ~[spring-core-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassParser.asSourceClass(ConfigurationClassParser.java:693) ~[spring-context-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassParser$SourceClass.getInterfaces(ConfigurationClassParser.java:870) ~[spring-context-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassParser.processInterfaces(ConfigurationClassParser.java:363) ~[spring-context-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:320) ~[spring-context-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:245) ~[spring-context-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:190) ~[spring-context-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:292) ~[spring-context-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:245) ~[spring-context-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:198) ~[spring-context-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:167) ~[spring-context-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	... 18 common frames omitted
2018/12/29-13:56 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 2708 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/29-13:56 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/29-13:56 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/29-13:56 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/29-13:56 [restartedMain] INFO  org.hzqisheng.Application- Started Application in 5.399 seconds (JVM running for 14005.593)
2018/12/29-13:58 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 2708 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/29-13:58 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/29-13:58 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/29-13:59 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/29-13:59 [restartedMain] INFO  org.hzqisheng.Application- Started Application in 4.857 seconds (JVM running for 14141.593)
2018/12/29-14:01 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 2708 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/29-14:01 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/29-14:01 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/29-14:01 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/29-14:01 [restartedMain] INFO  org.hzqisheng.Application- Started Application in 5.262 seconds (JVM running for 14281.226)
2018/12/29-14:06 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 7940 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/29-14:06 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/29-14:06 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/29-14:06 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/29-14:06 [restartedMain] INFO  org.hzqisheng.Application- Started Application in 10.243 seconds (JVM running for 13.509)
2018/12/29-14:07 [http-nio-12080-exec-2] DEBUG org.lis_dao.CommentDao.countByExample- ==>  Preparing: select count(*) from comment WHERE ( article_id = ? ) 
2018/12/29-14:07 [http-nio-12080-exec-2] DEBUG org.lis_dao.CommentDao.countByExample- ==> Parameters: 8(Long)
2018/12/29-14:07 [http-nio-12080-exec-2] DEBUG org.lis_dao.CommentDao.countByExample- <==      Total: 1
2018/12/29-14:07 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 通过文章的id统计其评论数------------------------------------
2018/12/29-14:10 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-14:10 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-14:10 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-14:10 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-14:10 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-14:10 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-14:10 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-14:10 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-14:10 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-14:10 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-14:10 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-14:10 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-14:10 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-14:10 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-14:10 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 通过文章id查找文章------------------------------------
2018/12/29-14:10 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-14:10 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-14:10 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-14:10 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-14:10 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-14:10 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-14:10 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-14:10 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-14:10 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-14:10 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-14:10 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-14:10 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-14:10 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-14:10 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-14:10 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-14:10 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 通过articleId查找相应的标签------------------------------------
2018/12/29-14:10 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-14:10 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-14:10 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-14:10 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-14:10 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-14:10 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-14:10 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-14:10 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-14:10 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 3(Integer), 3(Integer)
2018/12/29-14:10 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-14:10 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-14:11 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-14:11 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-14:11 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-14:11 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-14:11 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 6(Integer), 3(Integer)
2018/12/29-14:11 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 1
2018/12/29-14:11 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-14:11 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-14:11 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 12(Long)
2018/12/29-14:11 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-14:11 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 通过文章id查找文章------------------------------------
2018/12/29-14:11 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-14:11 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 12(Long)
2018/12/29-14:11 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 0
2018/12/29-14:11 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 通过articleId查找相应的标签------------------------------------
2018/12/29-14:11 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-14:11 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-14:11 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-14:11 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-14:11 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-14:11 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 8(Long)
2018/12/29-14:11 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-14:11 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 通过文章id查找文章------------------------------------
2018/12/29-14:11 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-14:11 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 8(Long)
2018/12/29-14:11 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 2
2018/12/29-14:11 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-14:11 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-14:11 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-14:11 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-14:11 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-14:11 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-14:11 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 通过articleId查找相应的标签------------------------------------
2018/12/29-14:11 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-14:11 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-14:11 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-14:11 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-14:12 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-14:12 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-14:12 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-14:12 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-14:12 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-14:12 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-14:12 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-14:12 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-14:12 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-14:12 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-14:12 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-14:12 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-14:12 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-14:12 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-14:12 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 通过文章id查找文章------------------------------------
2018/12/29-14:12 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-14:12 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-14:12 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-14:12 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-14:12 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-14:12 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-14:12 [http-nio-12080-exec-2] DEBUG org.lis_dao.CommentDao.countByExample- ==>  Preparing: select count(*) from comment WHERE ( article_id = ? ) 
2018/12/29-14:12 [http-nio-12080-exec-2] DEBUG org.lis_dao.CommentDao.countByExample- ==> Parameters: 7(Long)
2018/12/29-14:12 [http-nio-12080-exec-2] DEBUG org.lis_dao.CommentDao.countByExample- <==      Total: 1
2018/12/29-14:12 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 通过文章的id统计其评论数------------------------------------
2018/12/29-14:12 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-14:12 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-14:12 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-14:12 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-14:12 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-14:12 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-14:12 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-14:12 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-14:12 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-14:12 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 通过articleId查找相应的标签------------------------------------
2018/12/29-14:12 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-14:12 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-14:12 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-14:12 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-14:12 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-14:12 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-14:12 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-14:12 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-14:12 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 3(Integer), 3(Integer)
2018/12/29-14:12 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-14:12 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-14:12 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-14:12 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 8(Long)
2018/12/29-14:12 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-14:12 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 通过文章id查找文章------------------------------------
2018/12/29-14:12 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-14:12 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 8(Long)
2018/12/29-14:12 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 2
2018/12/29-14:12 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-14:12 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-14:12 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-14:12 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-14:12 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-14:12 [http-nio-12080-exec-7] DEBUG org.lis_dao.CommentDao.countByExample- ==>  Preparing: select count(*) from comment WHERE ( article_id = ? ) 
2018/12/29-14:12 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-14:12 [http-nio-12080-exec-7] DEBUG org.lis_dao.CommentDao.countByExample- ==> Parameters: 8(Long)
2018/12/29-14:12 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 通过articleId查找相应的标签------------------------------------
2018/12/29-14:12 [http-nio-12080-exec-7] DEBUG org.lis_dao.CommentDao.countByExample- <==      Total: 1
2018/12/29-14:12 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 通过文章的id统计其评论数------------------------------------
2018/12/29-14:16 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 7940 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/29-14:16 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/29-14:16 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/29-14:16 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/29-14:16 [restartedMain] INFO  org.hzqisheng.Application- Started Application in 6.304 seconds (JVM running for 611.639)
2018/12/29-14:23 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 1104 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/29-14:23 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/29-14:23 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/29-14:23 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/29-14:23 [restartedMain] INFO  org.hzqisheng.Application- Started Application in 13.051 seconds (JVM running for 16.344)
2018/12/29-14:24 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 14592 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/29-14:24 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/29-14:24 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/29-14:24 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/29-14:24 [restartedMain] INFO  org.hzqisheng.Application- Started Application in 15.076 seconds (JVM running for 19.235)
2018/12/29-14:24 [http-nio-12080-exec-2] DEBUG org.lis_dao.CommentDao.selectByExample- ==>  Preparing: select comment_id, comment_content, article_id, create_time, user_id from comment WHERE ( article_id = ? ) 
2018/12/29-14:24 [http-nio-12080-exec-2] DEBUG org.lis_dao.CommentDao.selectByExample- ==> Parameters: 8(Long)
2018/12/29-14:24 [http-nio-12080-exec-2] DEBUG org.lis_dao.CommentDao.selectByExample- <==      Total: 2
2018/12/29-14:24 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 通过文章id获取评论列表------------------------------------
2018/12/29-14:33 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-14:33 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-14:33 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-14:33 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-14:33 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-14:33 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-14:33 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-14:33 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-14:33 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-14:33 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-14:33 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-14:33 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-14:33 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-14:33 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-14:33 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 通过文章id查找文章------------------------------------
2018/12/29-14:33 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-14:33 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-14:33 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-14:33 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-14:33 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-14:33 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-14:33 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-14:33 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-14:33 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-14:33 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-14:33 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-14:33 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-14:33 [http-nio-12080-exec-8] DEBUG org.lis_dao.CommentDao.countByExample- ==>  Preparing: select count(*) from comment WHERE ( article_id = ? ) 
2018/12/29-14:33 [http-nio-12080-exec-8] DEBUG org.lis_dao.CommentDao.countByExample- ==> Parameters: 7(Long)
2018/12/29-14:33 [http-nio-12080-exec-8] DEBUG org.lis_dao.CommentDao.countByExample- <==      Total: 1
2018/12/29-14:33 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 通过文章的id统计其评论数------------------------------------
2018/12/29-14:33 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-14:33 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-14:33 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-14:33 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 通过articleId查找相应的标签------------------------------------
2018/12/29-14:34 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-14:34 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-14:34 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-14:34 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-14:34 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-14:34 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-14:34 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-14:34 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-14:34 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 3(Integer), 3(Integer)
2018/12/29-14:34 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-14:34 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-14:34 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-14:34 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 8(Long)
2018/12/29-14:34 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-14:34 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 通过文章id查找文章------------------------------------
2018/12/29-14:34 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-14:34 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 8(Long)
2018/12/29-14:34 [http-nio-12080-exec-3] DEBUG org.lis_dao.CommentDao.countByExample- ==>  Preparing: select count(*) from comment WHERE ( article_id = ? ) 
2018/12/29-14:34 [http-nio-12080-exec-3] DEBUG org.lis_dao.CommentDao.countByExample- ==> Parameters: 8(Long)
2018/12/29-14:34 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 2
2018/12/29-14:34 [http-nio-12080-exec-3] DEBUG org.lis_dao.CommentDao.countByExample- <==      Total: 1
2018/12/29-14:34 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 通过文章的id统计其评论数------------------------------------
2018/12/29-14:34 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-14:34 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-14:34 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-14:34 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-14:34 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-14:34 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-14:34 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 通过articleId查找相应的标签------------------------------------
2018/12/29-14:34 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-14:34 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-14:34 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-14:34 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-14:34 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-14:34 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-14:34 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-14:34 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-14:34 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-14:34 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-14:34 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-14:34 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-14:34 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 8(Long)
2018/12/29-14:34 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-14:34 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 通过文章id查找文章------------------------------------
2018/12/29-14:34 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-14:34 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 8(Long)
2018/12/29-14:34 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 2
2018/12/29-14:34 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-14:34 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-14:34 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-14:34 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-14:34 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-14:34 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-14:34 [http-nio-12080-exec-7] DEBUG org.lis_dao.CommentDao.countByExample- ==>  Preparing: select count(*) from comment WHERE ( article_id = ? ) 
2018/12/29-14:34 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 通过articleId查找相应的标签------------------------------------
2018/12/29-14:34 [http-nio-12080-exec-7] DEBUG org.lis_dao.CommentDao.countByExample- ==> Parameters: 8(Long)
2018/12/29-14:34 [http-nio-12080-exec-7] DEBUG org.lis_dao.CommentDao.countByExample- <==      Total: 1
2018/12/29-14:34 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 通过文章的id统计其评论数------------------------------------
2018/12/29-14:34 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-14:34 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-14:34 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-14:34 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-14:34 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-14:34 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-14:34 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-14:34 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-14:34 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-14:34 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-14:34 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-14:34 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-14:34 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 8(Long)
2018/12/29-14:34 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-14:34 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 通过文章id查找文章------------------------------------
2018/12/29-14:34 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-14:34 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 8(Long)
2018/12/29-14:34 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 2
2018/12/29-14:34 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-14:34 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-14:34 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-14:34 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-14:34 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-14:34 [http-nio-12080-exec-2] DEBUG org.lis_dao.CommentDao.countByExample- ==>  Preparing: select count(*) from comment WHERE ( article_id = ? ) 
2018/12/29-14:34 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-14:34 [http-nio-12080-exec-2] DEBUG org.lis_dao.CommentDao.countByExample- ==> Parameters: 8(Long)
2018/12/29-14:34 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 通过articleId查找相应的标签------------------------------------
2018/12/29-14:34 [http-nio-12080-exec-2] DEBUG org.lis_dao.CommentDao.countByExample- <==      Total: 1
2018/12/29-14:34 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 通过文章的id统计其评论数------------------------------------
2018/12/29-14:34 [http-nio-12080-exec-5] DEBUG org.lis_dao.CommentDao.selectByExample- ==>  Preparing: select comment_id, comment_content, article_id, create_time, user_id from comment WHERE ( article_id = ? ) 
2018/12/29-14:34 [http-nio-12080-exec-5] DEBUG org.lis_dao.CommentDao.selectByExample- ==> Parameters: 8(Long)
2018/12/29-14:34 [http-nio-12080-exec-5] DEBUG org.lis_dao.CommentDao.selectByExample- <==      Total: 2
2018/12/29-14:34 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 通过文章id获取评论列表------------------------------------
2018/12/29-14:36 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-14:36 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-14:36 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-14:36 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-14:36 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-14:36 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-14:36 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-14:36 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-14:36 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-14:36 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-14:36 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-14:36 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-14:36 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 8(Long)
2018/12/29-14:36 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-14:36 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 通过文章id查找文章------------------------------------
2018/12/29-14:36 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-14:36 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 8(Long)
2018/12/29-14:36 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 2
2018/12/29-14:36 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-14:36 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-14:36 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-14:36 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-14:36 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-14:36 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-14:36 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 通过articleId查找相应的标签------------------------------------
2018/12/29-14:36 [http-nio-12080-exec-3] DEBUG org.lis_dao.CommentDao.countByExample- ==>  Preparing: select count(*) from comment WHERE ( article_id = ? ) 
2018/12/29-14:36 [http-nio-12080-exec-2] DEBUG org.lis_dao.CommentDao.selectByExample- ==>  Preparing: select comment_id, comment_content, article_id, create_time, user_id from comment WHERE ( article_id = ? ) 
2018/12/29-14:36 [http-nio-12080-exec-2] DEBUG org.lis_dao.CommentDao.selectByExample- ==> Parameters: 8(Long)
2018/12/29-14:36 [http-nio-12080-exec-3] DEBUG org.lis_dao.CommentDao.countByExample- ==> Parameters: 8(Long)
2018/12/29-14:36 [http-nio-12080-exec-2] DEBUG org.lis_dao.CommentDao.selectByExample- <==      Total: 2
2018/12/29-14:36 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 通过文章id获取评论列表------------------------------------
2018/12/29-14:36 [http-nio-12080-exec-3] DEBUG org.lis_dao.CommentDao.countByExample- <==      Total: 1
2018/12/29-14:36 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 通过文章的id统计其评论数------------------------------------
2018/12/29-14:37 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-14:37 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-14:37 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-14:37 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-14:37 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-14:37 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-14:37 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-14:37 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-14:37 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-14:37 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-14:37 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-14:37 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-14:37 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 8(Long)
2018/12/29-14:37 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-14:37 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 通过文章id查找文章------------------------------------
2018/12/29-14:37 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-14:37 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 8(Long)
2018/12/29-14:37 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 2
2018/12/29-14:37 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-14:37 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-14:37 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-14:37 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-14:37 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-14:37 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-14:37 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 通过articleId查找相应的标签------------------------------------
2018/12/29-14:37 [http-nio-12080-exec-1] DEBUG org.lis_dao.CommentDao.countByExample- ==>  Preparing: select count(*) from comment WHERE ( article_id = ? ) 
2018/12/29-14:37 [http-nio-12080-exec-1] DEBUG org.lis_dao.CommentDao.countByExample- ==> Parameters: 8(Long)
2018/12/29-14:37 [http-nio-12080-exec-1] DEBUG org.lis_dao.CommentDao.countByExample- <==      Total: 1
2018/12/29-14:37 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 通过文章的id统计其评论数------------------------------------
2018/12/29-14:37 [http-nio-12080-exec-2] DEBUG org.lis_dao.CommentDao.selectByExample- ==>  Preparing: select comment_id, comment_content, article_id, create_time, user_id from comment WHERE ( article_id = ? ) 
2018/12/29-14:37 [http-nio-12080-exec-2] DEBUG org.lis_dao.CommentDao.selectByExample- ==> Parameters: 8(Long)
2018/12/29-14:37 [http-nio-12080-exec-2] DEBUG org.lis_dao.CommentDao.selectByExample- <==      Total: 2
2018/12/29-14:37 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 通过文章id获取评论列表------------------------------------
2018/12/29-14:37 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-14:37 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-14:37 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-14:37 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-14:37 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-14:37 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-14:37 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-14:37 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-14:37 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-14:37 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-14:37 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-14:37 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-14:37 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 8(Long)
2018/12/29-14:37 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-14:37 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 通过文章id查找文章------------------------------------
2018/12/29-14:37 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-14:37 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 8(Long)
2018/12/29-14:37 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 2
2018/12/29-14:37 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-14:37 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-14:37 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-14:37 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-14:37 [http-nio-12080-exec-7] DEBUG org.lis_dao.CommentDao.countByExample- ==>  Preparing: select count(*) from comment WHERE ( article_id = ? ) 
2018/12/29-14:37 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-14:37 [http-nio-12080-exec-7] DEBUG org.lis_dao.CommentDao.countByExample- ==> Parameters: 8(Long)
2018/12/29-14:37 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-14:37 [http-nio-12080-exec-7] DEBUG org.lis_dao.CommentDao.countByExample- <==      Total: 1
2018/12/29-14:37 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 通过articleId查找相应的标签------------------------------------
2018/12/29-14:37 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 通过文章的id统计其评论数------------------------------------
2018/12/29-14:37 [http-nio-12080-exec-9] DEBUG org.lis_dao.CommentDao.selectByExample- ==>  Preparing: select comment_id, comment_content, article_id, create_time, user_id from comment WHERE ( article_id = ? ) 
2018/12/29-14:37 [http-nio-12080-exec-9] DEBUG org.lis_dao.CommentDao.selectByExample- ==> Parameters: 8(Long)
2018/12/29-14:37 [http-nio-12080-exec-9] DEBUG org.lis_dao.CommentDao.selectByExample- <==      Total: 2
2018/12/29-14:37 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 通过文章id获取评论列表------------------------------------
2018/12/29-14:40 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 14592 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/29-14:40 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/29-14:40 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/29-14:40 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/29-14:40 [restartedMain] INFO  org.hzqisheng.Application- Started Application in 4.822 seconds (JVM running for 962.337)
2018/12/29-14:59 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 7100 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/29-14:59 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/29-14:59 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/29-14:59 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/29-15:00 [restartedMain] INFO  org.hzqisheng.Application- Started Application in 9.419 seconds (JVM running for 11.631)
2018/12/29-15:00 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==>  Preparing: select comment_id as commentId,comment_content as commentContent,title,comment.create_time as createTime,username from comment inner join user on comment.user_id = user.user_id inner join article on comment.article_id = article.article_id where comment.article_id = ? order by comment.create_time 
2018/12/29-15:00 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==> Parameters: 8(Long)
2018/12/29-15:00 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- <==      Total: 2
2018/12/29-15:00 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 通过文章id获取评论列表------------------------------------
2018/12/29-15:01 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-15:01 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-15:01 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-15:01 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-15:01 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-15:01 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-15:01 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-15:01 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-15:01 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-15:01 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-15:01 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-15:01 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-15:01 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-15:01 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:01 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 通过文章id查找文章------------------------------------
2018/12/29-15:01 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==>  Preparing: select comment_id as commentId,comment_content as commentContent,title,comment.create_time as createTime,username from comment inner join user on comment.user_id = user.user_id inner join article on comment.article_id = article.article_id where comment.article_id = ? order by comment.create_time 
2018/12/29-15:01 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==> Parameters: 7(Long)
2018/12/29-15:01 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- <==      Total: 0
2018/12/29-15:01 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 通过文章id获取评论列表------------------------------------
2018/12/29-15:01 [http-nio-12080-exec-9] DEBUG org.lis_dao.CommentDao.countByExample- ==>  Preparing: select count(*) from comment WHERE ( article_id = ? ) 
2018/12/29-15:01 [http-nio-12080-exec-9] DEBUG org.lis_dao.CommentDao.countByExample- ==> Parameters: 7(Long)
2018/12/29-15:01 [http-nio-12080-exec-9] DEBUG org.lis_dao.CommentDao.countByExample- <==      Total: 1
2018/12/29-15:01 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 通过文章的id统计其评论数------------------------------------
2018/12/29-15:01 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-15:01 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-15:01 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-15:01 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-15:01 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-15:01 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:01 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-15:01 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-15:01 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:01 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-15:01 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-15:01 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:01 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-15:01 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-15:01 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:01 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 通过articleId查找相应的标签------------------------------------
2018/12/29-15:01 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-15:01 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-15:01 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-15:01 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-15:01 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-15:01 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-15:01 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-15:01 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-15:01 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 3(Integer), 3(Integer)
2018/12/29-15:01 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-15:01 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-15:01 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-15:01 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 8(Long)
2018/12/29-15:01 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:01 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 通过文章id查找文章------------------------------------
2018/12/29-15:01 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-15:01 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 8(Long)
2018/12/29-15:01 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 2
2018/12/29-15:01 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-15:01 [http-nio-12080-exec-5] DEBUG org.lis_dao.CommentDao.countByExample- ==>  Preparing: select count(*) from comment WHERE ( article_id = ? ) 
2018/12/29-15:01 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-15:01 [http-nio-12080-exec-5] DEBUG org.lis_dao.CommentDao.countByExample- ==> Parameters: 8(Long)
2018/12/29-15:01 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:01 [http-nio-12080-exec-5] DEBUG org.lis_dao.CommentDao.countByExample- <==      Total: 1
2018/12/29-15:01 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 通过文章的id统计其评论数------------------------------------
2018/12/29-15:01 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-15:01 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-15:01 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:01 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 通过articleId查找相应的标签------------------------------------
2018/12/29-15:01 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==>  Preparing: select comment_id as commentId,comment_content as commentContent,title,comment.create_time as createTime,username from comment inner join user on comment.user_id = user.user_id inner join article on comment.article_id = article.article_id where comment.article_id = ? order by comment.create_time 
2018/12/29-15:01 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==> Parameters: 8(Long)
2018/12/29-15:01 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- <==      Total: 2
2018/12/29-15:01 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 通过文章id获取评论列表------------------------------------
2018/12/29-15:01 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-15:01 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-15:01 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-15:01 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-15:01 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-15:01 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-15:01 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-15:01 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-15:01 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-15:01 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-15:01 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-15:01 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-15:01 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-15:01 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:01 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 通过文章id查找文章------------------------------------
2018/12/29-15:01 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-15:01 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-15:01 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-15:01 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-15:01 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-15:01 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:01 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-15:01 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-15:01 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:01 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-15:01 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-15:01 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:01 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-15:01 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-15:01 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:01 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 通过articleId查找相应的标签------------------------------------
2018/12/29-15:01 [http-nio-12080-exec-1] DEBUG org.lis_dao.CommentDao.countByExample- ==>  Preparing: select count(*) from comment WHERE ( article_id = ? ) 
2018/12/29-15:01 [http-nio-12080-exec-1] DEBUG org.lis_dao.CommentDao.countByExample- ==> Parameters: 7(Long)
2018/12/29-15:01 [http-nio-12080-exec-1] DEBUG org.lis_dao.CommentDao.countByExample- <==      Total: 1
2018/12/29-15:01 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 通过文章的id统计其评论数------------------------------------
2018/12/29-15:01 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==>  Preparing: select comment_id as commentId,comment_content as commentContent,title,comment.create_time as createTime,username from comment inner join user on comment.user_id = user.user_id inner join article on comment.article_id = article.article_id where comment.article_id = ? order by comment.create_time 
2018/12/29-15:01 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==> Parameters: 7(Long)
2018/12/29-15:01 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- <==      Total: 0
2018/12/29-15:01 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 通过文章id获取评论列表------------------------------------
2018/12/29-15:01 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-15:01 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-15:01 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-15:01 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-15:01 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-15:01 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-15:01 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-15:01 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-15:01 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 3(Integer), 3(Integer)
2018/12/29-15:01 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-15:01 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-15:01 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-15:01 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 8(Long)
2018/12/29-15:01 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:01 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 通过文章id查找文章------------------------------------
2018/12/29-15:01 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-15:01 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 8(Long)
2018/12/29-15:01 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 2
2018/12/29-15:01 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-15:01 [http-nio-12080-exec-10] DEBUG org.lis_dao.CommentDao.countByExample- ==>  Preparing: select count(*) from comment WHERE ( article_id = ? ) 
2018/12/29-15:01 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-15:01 [http-nio-12080-exec-10] DEBUG org.lis_dao.CommentDao.countByExample- ==> Parameters: 8(Long)
2018/12/29-15:01 [http-nio-12080-exec-10] DEBUG org.lis_dao.CommentDao.countByExample- <==      Total: 1
2018/12/29-15:01 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:01 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 通过文章的id统计其评论数------------------------------------
2018/12/29-15:01 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-15:01 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-15:01 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:01 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 通过articleId查找相应的标签------------------------------------
2018/12/29-15:01 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==>  Preparing: select comment_id as commentId,comment_content as commentContent,title,comment.create_time as createTime,username from comment inner join user on comment.user_id = user.user_id inner join article on comment.article_id = article.article_id where comment.article_id = ? order by comment.create_time 
2018/12/29-15:01 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==> Parameters: 8(Long)
2018/12/29-15:01 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- <==      Total: 2
2018/12/29-15:01 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 通过文章id获取评论列表------------------------------------
2018/12/29-15:02 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-15:02 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-15:02 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-15:02 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-15:02 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-15:02 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-15:02 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-15:02 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-15:02 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-15:02 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-15:02 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-15:02 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-15:02 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 8(Long)
2018/12/29-15:02 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:02 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 通过文章id查找文章------------------------------------
2018/12/29-15:02 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-15:02 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 8(Long)
2018/12/29-15:02 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 2
2018/12/29-15:02 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-15:02 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-15:02 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:02 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-15:02 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-15:02 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:02 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 通过articleId查找相应的标签------------------------------------
2018/12/29-15:02 [http-nio-12080-exec-5] DEBUG org.lis_dao.CommentDao.countByExample- ==>  Preparing: select count(*) from comment WHERE ( article_id = ? ) 
2018/12/29-15:02 [http-nio-12080-exec-5] DEBUG org.lis_dao.CommentDao.countByExample- ==> Parameters: 8(Long)
2018/12/29-15:02 [http-nio-12080-exec-5] DEBUG org.lis_dao.CommentDao.countByExample- <==      Total: 1
2018/12/29-15:02 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 通过文章的id统计其评论数------------------------------------
2018/12/29-15:02 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==>  Preparing: select comment_id as commentId,comment_content as commentContent,title,comment.create_time as createTime,username from comment inner join user on comment.user_id = user.user_id inner join article on comment.article_id = article.article_id where comment.article_id = ? order by comment.create_time 
2018/12/29-15:02 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==> Parameters: 8(Long)
2018/12/29-15:02 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- <==      Total: 2
2018/12/29-15:02 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 通过文章id获取评论列表------------------------------------
2018/12/29-15:10 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 7100 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/29-15:10 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/29-15:10 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/29-15:10 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/29-15:10 [restartedMain] WARN  org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext- Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'articleService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'org.lis_dao.ArticleDao' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@javax.annotation.Resource(shareable=true, lookup=, name=, description=, authenticationType=CONTAINER, type=class java.lang.Object, mappedName=)}
2018/12/29-15:10 [restartedMain] ERROR org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter- 

***************************
APPLICATION FAILED TO START
***************************

Description:

A component required a bean of type 'org.lis_dao.ArticleDao' that could not be found.


Action:

Consider defining a bean of type 'org.lis_dao.ArticleDao' in your configuration.

2018/12/29-15:10 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 7100 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/29-15:10 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/29-15:10 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/29-15:10 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/29-15:10 [restartedMain] INFO  org.hzqisheng.Application- Started Application in 5.108 seconds (JVM running for 633.017)
2018/12/29-15:10 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 14908 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/29-15:10 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/29-15:10 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/29-15:10 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/29-15:11 [restartedMain] INFO  org.hzqisheng.Application- Started Application in 15.685 seconds (JVM running for 19.597)
2018/12/29-15:11 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-15:11 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-15:11 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-15:11 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- ------------------------------------
2018/12/29-15:12 [restartedMain] INFO  org.hzqisheng.Application- Starting Application on DESKTOP-2TIOAVO with PID 11072 (E:\Ideaproject\yunlis\lis_api\target\classes started by thlnkpad in E:\Ideaproject\yunlis)
2018/12/29-15:12 [restartedMain] DEBUG org.hzqisheng.Application- Running with Spring Boot v1.5.4.RELEASE, Spring v4.3.9.RELEASE
2018/12/29-15:12 [restartedMain] INFO  org.hzqisheng.Application- The following profiles are active: dev
2018/12/29-15:12 [restartedMain] INFO  org.hzqisheng.config.MybatisAutoConfiguration- 注册MyBatis分页插件PageHelper
2018/12/29-15:12 [restartedMain] INFO  org.hzqisheng.Application- Started Application in 13.692 seconds (JVM running for 16.222)
2018/12/29-15:19 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-15:19 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-15:19 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-15:19 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-15:19 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-15:19 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-15:19 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-15:19 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-15:19 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-15:19 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-15:19 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-15:19 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-15:19 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-15:19 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-15:19 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-15:19 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 3(Integer), 3(Integer)
2018/12/29-15:19 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-15:19 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-15:19 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-15:19 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 8(Long)
2018/12/29-15:19 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:19 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 通过文章id查找文章------------------------------------
2018/12/29-15:19 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==>  Preparing: select comment_id as commentId,comment_content as commentContent,title,comment.create_time as createTime,username from comment inner join user on comment.user_id = user.user_id inner join article on comment.article_id = article.article_id where comment.article_id = ? order by comment.create_time 
2018/12/29-15:19 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==> Parameters: 8(Long)
2018/12/29-15:19 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- <==      Total: 2
2018/12/29-15:19 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 通过文章id获取评论列表------------------------------------
2018/12/29-15:19 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-15:19 [http-nio-12080-exec-6] DEBUG org.lis_dao.CommentDao.countByExample- ==>  Preparing: select count(*) from comment WHERE ( article_id = ? ) 
2018/12/29-15:19 [http-nio-12080-exec-6] DEBUG org.lis_dao.CommentDao.countByExample- ==> Parameters: 8(Long)
2018/12/29-15:19 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 8(Long)
2018/12/29-15:19 [http-nio-12080-exec-6] DEBUG org.lis_dao.CommentDao.countByExample- <==      Total: 1
2018/12/29-15:19 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 2
2018/12/29-15:19 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 通过文章的id统计其评论数------------------------------------
2018/12/29-15:19 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-15:19 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-15:19 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:19 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-15:19 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-15:19 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:19 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 通过articleId查找相应的标签------------------------------------
2018/12/29-15:21 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-15:21 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-15:21 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-15:21 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-15:21 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-15:21 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-15:21 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-15:21 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-15:21 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-15:21 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-15:21 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-15:21 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-15:21 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-15:21 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-15:21 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-15:21 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 3(Integer), 3(Integer)
2018/12/29-15:21 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-15:21 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-15:21 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-15:21 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 8(Long)
2018/12/29-15:21 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:21 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 通过文章id查找文章------------------------------------
2018/12/29-15:21 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-15:21 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 8(Long)
2018/12/29-15:21 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 2
2018/12/29-15:21 [http-nio-12080-exec-6] DEBUG org.lis_dao.CommentDao.countByExample- ==>  Preparing: select count(*) from comment WHERE ( article_id = ? ) 
2018/12/29-15:21 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-15:21 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-15:21 [http-nio-12080-exec-6] DEBUG org.lis_dao.CommentDao.countByExample- ==> Parameters: 8(Long)
2018/12/29-15:21 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:21 [http-nio-12080-exec-6] DEBUG org.lis_dao.CommentDao.countByExample- <==      Total: 1
2018/12/29-15:21 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-15:21 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 通过文章的id统计其评论数------------------------------------
2018/12/29-15:21 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-15:21 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:21 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 通过articleId查找相应的标签------------------------------------
2018/12/29-15:21 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==>  Preparing: select comment_id as commentId,comment_content as commentContent,title,comment.create_time as createTime,username from comment inner join user on comment.user_id = user.user_id inner join article on comment.article_id = article.article_id where comment.article_id = ? order by comment.create_time 
2018/12/29-15:21 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==> Parameters: 8(Long)
2018/12/29-15:21 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- <==      Total: 2
2018/12/29-15:21 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 通过文章id获取评论列表------------------------------------
2018/12/29-15:23 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-15:23 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-15:23 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-15:23 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-15:23 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-15:23 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-15:23 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-15:23 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-15:23 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-15:23 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-15:23 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-15:23 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-15:23 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 8(Long)
2018/12/29-15:23 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:23 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 通过文章id查找文章------------------------------------
2018/12/29-15:23 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-15:23 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 8(Long)
2018/12/29-15:23 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 2
2018/12/29-15:23 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-15:23 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-15:23 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:23 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-15:23 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-15:23 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:23 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 通过articleId查找相应的标签------------------------------------
2018/12/29-15:23 [http-nio-12080-exec-4] DEBUG org.lis_dao.CommentDao.countByExample- ==>  Preparing: select count(*) from comment WHERE ( article_id = ? ) 
2018/12/29-15:23 [http-nio-12080-exec-4] DEBUG org.lis_dao.CommentDao.countByExample- ==> Parameters: 8(Long)
2018/12/29-15:23 [http-nio-12080-exec-4] DEBUG org.lis_dao.CommentDao.countByExample- <==      Total: 1
2018/12/29-15:23 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 通过文章的id统计其评论数------------------------------------
2018/12/29-15:23 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==>  Preparing: select comment_id as commentId,comment_content as commentContent,title,comment.create_time as createTime,username from comment inner join user on comment.user_id = user.user_id inner join article on comment.article_id = article.article_id where comment.article_id = ? order by comment.create_time 
2018/12/29-15:23 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==> Parameters: 8(Long)
2018/12/29-15:23 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- <==      Total: 2
2018/12/29-15:23 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 通过文章id获取评论列表------------------------------------
2018/12/29-15:24 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-15:24 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-15:24 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-15:24 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-15:24 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-15:24 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-15:24 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-15:24 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-15:24 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-15:24 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-15:24 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-15:24 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-15:24 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-15:24 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:24 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 通过文章id查找文章------------------------------------
2018/12/29-15:24 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-15:24 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-15:24 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-15:24 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-15:24 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-15:24 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:24 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-15:24 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-15:24 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:24 [http-nio-12080-exec-1] DEBUG org.lis_dao.CommentDao.countByExample- ==>  Preparing: select count(*) from comment WHERE ( article_id = ? ) 
2018/12/29-15:24 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-15:24 [http-nio-12080-exec-1] DEBUG org.lis_dao.CommentDao.countByExample- ==> Parameters: 7(Long)
2018/12/29-15:24 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-15:24 [http-nio-12080-exec-1] DEBUG org.lis_dao.CommentDao.countByExample- <==      Total: 1
2018/12/29-15:24 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:24 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-15:24 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 通过文章的id统计其评论数------------------------------------
2018/12/29-15:24 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-15:24 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:24 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 通过articleId查找相应的标签------------------------------------
2018/12/29-15:24 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==>  Preparing: select comment_id as commentId,comment_content as commentContent,title,comment.create_time as createTime,username from comment inner join user on comment.user_id = user.user_id inner join article on comment.article_id = article.article_id where comment.article_id = ? order by comment.create_time 
2018/12/29-15:24 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==> Parameters: 7(Long)
2018/12/29-15:24 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- <==      Total: 0
2018/12/29-15:24 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 通过文章id获取评论列表------------------------------------
2018/12/29-15:24 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-15:24 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-15:24 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-15:24 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-15:24 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-15:24 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-15:24 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-15:24 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-15:24 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 3(Integer), 3(Integer)
2018/12/29-15:24 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-15:24 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-15:24 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-15:24 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 8(Long)
2018/12/29-15:24 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:24 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 通过文章id查找文章------------------------------------
2018/12/29-15:24 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-15:24 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 8(Long)
2018/12/29-15:24 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 2
2018/12/29-15:24 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-15:24 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-15:24 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:24 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-15:24 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-15:24 [http-nio-12080-exec-10] DEBUG org.lis_dao.CommentDao.countByExample- ==>  Preparing: select count(*) from comment WHERE ( article_id = ? ) 
2018/12/29-15:24 [http-nio-12080-exec-10] DEBUG org.lis_dao.CommentDao.countByExample- ==> Parameters: 8(Long)
2018/12/29-15:24 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:24 [http-nio-12080-exec-10] DEBUG org.lis_dao.CommentDao.countByExample- <==      Total: 1
2018/12/29-15:24 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 通过articleId查找相应的标签------------------------------------
2018/12/29-15:24 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 通过文章的id统计其评论数------------------------------------
2018/12/29-15:24 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==>  Preparing: select comment_id as commentId,comment_content as commentContent,title,comment.create_time as createTime,username from comment inner join user on comment.user_id = user.user_id inner join article on comment.article_id = article.article_id where comment.article_id = ? order by comment.create_time 
2018/12/29-15:24 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==> Parameters: 8(Long)
2018/12/29-15:24 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- <==      Total: 2
2018/12/29-15:24 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 通过文章id获取评论列表------------------------------------
2018/12/29-15:29 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-15:29 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-15:29 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-15:29 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-15:29 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-15:29 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-15:29 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-15:29 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-15:29 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-15:29 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-15:29 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-15:29 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-15:29 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-15:29 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:29 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 通过文章id查找文章------------------------------------
2018/12/29-15:29 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-15:29 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-15:29 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-15:29 [http-nio-12080-exec-7] DEBUG org.lis_dao.CommentDao.countByExample- ==>  Preparing: select count(*) from comment WHERE ( article_id = ? ) 
2018/12/29-15:29 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-15:29 [http-nio-12080-exec-7] DEBUG org.lis_dao.CommentDao.countByExample- ==> Parameters: 7(Long)
2018/12/29-15:29 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-15:29 [http-nio-12080-exec-7] DEBUG org.lis_dao.CommentDao.countByExample- <==      Total: 1
2018/12/29-15:29 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:29 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 通过文章的id统计其评论数------------------------------------
2018/12/29-15:29 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-15:29 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-15:29 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:29 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-15:29 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-15:29 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:29 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-15:29 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-15:29 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==>  Preparing: select comment_id as commentId,comment_content as commentContent,title,comment.create_time as createTime,username from comment inner join user on comment.user_id = user.user_id inner join article on comment.article_id = article.article_id where comment.article_id = ? order by comment.create_time 
2018/12/29-15:29 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==> Parameters: 7(Long)
2018/12/29-15:29 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:29 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 通过articleId查找相应的标签------------------------------------
2018/12/29-15:29 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- <==      Total: 0
2018/12/29-15:29 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 通过文章id获取评论列表------------------------------------
2018/12/29-15:29 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-15:29 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-15:29 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-15:29 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-15:29 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-15:29 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-15:29 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-15:29 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-15:29 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 3(Integer), 3(Integer)
2018/12/29-15:29 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-15:29 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-15:29 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-15:29 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 8(Long)
2018/12/29-15:29 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:29 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 通过文章id查找文章------------------------------------
2018/12/29-15:29 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-15:29 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 8(Long)
2018/12/29-15:29 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 2
2018/12/29-15:29 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-15:29 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-15:29 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:29 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-15:29 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-15:29 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:29 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 通过articleId查找相应的标签------------------------------------
2018/12/29-15:29 [http-nio-12080-exec-3] DEBUG org.lis_dao.CommentDao.countByExample- ==>  Preparing: select count(*) from comment WHERE ( article_id = ? ) 
2018/12/29-15:29 [http-nio-12080-exec-3] DEBUG org.lis_dao.CommentDao.countByExample- ==> Parameters: 8(Long)
2018/12/29-15:29 [http-nio-12080-exec-3] DEBUG org.lis_dao.CommentDao.countByExample- <==      Total: 1
2018/12/29-15:29 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==>  Preparing: select comment_id as commentId,comment_content as commentContent,title,comment.create_time as createTime,username from comment inner join user on comment.user_id = user.user_id inner join article on comment.article_id = article.article_id where comment.article_id = ? order by comment.create_time 
2018/12/29-15:29 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 通过文章的id统计其评论数------------------------------------
2018/12/29-15:29 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==> Parameters: 8(Long)
2018/12/29-15:29 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- <==      Total: 2
2018/12/29-15:29 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 通过文章id获取评论列表------------------------------------
2018/12/29-15:31 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-15:31 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-15:31 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-15:31 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-15:31 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-15:31 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-15:31 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-15:31 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-15:31 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-15:31 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-15:31 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-15:31 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-15:31 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 8(Long)
2018/12/29-15:31 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:31 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 通过文章id查找文章------------------------------------
2018/12/29-15:31 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-15:31 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 8(Long)
2018/12/29-15:31 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 2
2018/12/29-15:31 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-15:31 [http-nio-12080-exec-1] DEBUG org.lis_dao.CommentDao.countByExample- ==>  Preparing: select count(*) from comment WHERE ( article_id = ? ) 
2018/12/29-15:31 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-15:31 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:31 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-15:31 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-15:31 [http-nio-12080-exec-1] DEBUG org.lis_dao.CommentDao.countByExample- ==> Parameters: 8(Long)
2018/12/29-15:31 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:31 [http-nio-12080-exec-1] DEBUG org.lis_dao.CommentDao.countByExample- <==      Total: 1
2018/12/29-15:31 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 通过articleId查找相应的标签------------------------------------
2018/12/29-15:31 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 通过文章的id统计其评论数------------------------------------
2018/12/29-15:31 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==>  Preparing: select comment_id as commentId,comment_content as commentContent,title,comment.create_time as createTime,username from comment inner join user on comment.user_id = user.user_id inner join article on comment.article_id = article.article_id where comment.article_id = ? order by comment.create_time 
2018/12/29-15:31 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==> Parameters: 8(Long)
2018/12/29-15:31 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- <==      Total: 2
2018/12/29-15:31 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 通过文章id获取评论列表------------------------------------
2018/12/29-15:32 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-15:32 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-15:32 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-15:32 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-15:32 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-15:32 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-15:32 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-15:32 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-15:32 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-15:32 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-15:32 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-15:32 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-15:32 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-15:32 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-15:32 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-15:32 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 3(Integer), 3(Integer)
2018/12/29-15:32 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-15:32 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-15:32 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-15:32 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 8(Long)
2018/12/29-15:32 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:32 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 通过文章id查找文章------------------------------------
2018/12/29-15:32 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-15:32 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 8(Long)
2018/12/29-15:32 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 2
2018/12/29-15:32 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-15:32 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-15:32 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:32 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-15:32 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-15:32 [http-nio-12080-exec-9] DEBUG org.lis_dao.CommentDao.countByExample- ==>  Preparing: select count(*) from comment WHERE ( article_id = ? ) 
2018/12/29-15:32 [http-nio-12080-exec-9] DEBUG org.lis_dao.CommentDao.countByExample- ==> Parameters: 8(Long)
2018/12/29-15:32 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:32 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 通过articleId查找相应的标签------------------------------------
2018/12/29-15:32 [http-nio-12080-exec-9] DEBUG org.lis_dao.CommentDao.countByExample- <==      Total: 1
2018/12/29-15:32 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 通过文章的id统计其评论数------------------------------------
2018/12/29-15:32 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==>  Preparing: select comment_id as commentId,comment_content as commentContent,title,comment.create_time as createTime,username from comment inner join user on comment.user_id = user.user_id inner join article on comment.article_id = article.article_id where comment.article_id = ? order by comment.create_time 
2018/12/29-15:32 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==> Parameters: 8(Long)
2018/12/29-15:32 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- <==      Total: 2
2018/12/29-15:32 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 通过文章id获取评论列表------------------------------------
2018/12/29-15:34 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-15:34 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-15:34 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-15:34 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-15:34 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-15:34 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-15:34 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-15:34 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-15:34 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-15:34 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-15:34 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-15:34 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-15:34 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-15:34 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:34 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 通过文章id查找文章------------------------------------
2018/12/29-15:34 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-15:34 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-15:34 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-15:34 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-15:34 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-15:34 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:34 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-15:34 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-15:34 [http-nio-12080-exec-8] DEBUG org.lis_dao.CommentDao.countByExample- ==>  Preparing: select count(*) from comment WHERE ( article_id = ? ) 
2018/12/29-15:34 [http-nio-12080-exec-8] DEBUG org.lis_dao.CommentDao.countByExample- ==> Parameters: 7(Long)
2018/12/29-15:34 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:34 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-15:34 [http-nio-12080-exec-8] DEBUG org.lis_dao.CommentDao.countByExample- <==      Total: 1
2018/12/29-15:34 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-15:34 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 通过文章的id统计其评论数------------------------------------
2018/12/29-15:34 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:34 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-15:34 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-15:34 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:34 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 通过articleId查找相应的标签------------------------------------
2018/12/29-15:34 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==>  Preparing: select comment_id as commentId,comment_content as commentContent,title,comment.create_time as createTime,username from comment inner join user on comment.user_id = user.user_id inner join article on comment.article_id = article.article_id where comment.article_id = ? order by comment.create_time 
2018/12/29-15:34 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==> Parameters: 7(Long)
2018/12/29-15:34 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- <==      Total: 0
2018/12/29-15:34 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 通过文章id获取评论列表------------------------------------
2018/12/29-15:34 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-15:34 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-15:34 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-15:34 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-15:34 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-15:34 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-15:34 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-15:34 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-15:34 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 3(Integer), 3(Integer)
2018/12/29-15:34 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-15:34 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-15:34 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-15:34 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 8(Long)
2018/12/29-15:34 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:34 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 通过文章id查找文章------------------------------------
2018/12/29-15:34 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-15:34 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 8(Long)
2018/12/29-15:34 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 2
2018/12/29-15:34 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-15:34 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-15:34 [http-nio-12080-exec-4] DEBUG org.lis_dao.CommentDao.countByExample- ==>  Preparing: select count(*) from comment WHERE ( article_id = ? ) 
2018/12/29-15:34 [http-nio-12080-exec-4] DEBUG org.lis_dao.CommentDao.countByExample- ==> Parameters: 8(Long)
2018/12/29-15:34 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:34 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-15:34 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-15:34 [http-nio-12080-exec-4] DEBUG org.lis_dao.CommentDao.countByExample- <==      Total: 1
2018/12/29-15:34 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 通过文章的id统计其评论数------------------------------------
2018/12/29-15:34 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:34 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 通过articleId查找相应的标签------------------------------------
2018/12/29-15:34 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==>  Preparing: select comment_id as commentId,comment_content as commentContent,title,comment.create_time as createTime,username from comment inner join user on comment.user_id = user.user_id inner join article on comment.article_id = article.article_id where comment.article_id = ? order by comment.create_time 
2018/12/29-15:34 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==> Parameters: 8(Long)
2018/12/29-15:34 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- <==      Total: 2
2018/12/29-15:34 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 通过文章id获取评论列表------------------------------------
2018/12/29-15:35 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-15:35 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-15:35 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-15:35 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-15:35 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-15:35 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-15:35 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-15:35 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-15:35 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-15:35 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-15:35 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-15:35 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-15:35 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 8(Long)
2018/12/29-15:35 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:35 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 通过文章id查找文章------------------------------------
2018/12/29-15:35 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-15:35 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 8(Long)
2018/12/29-15:35 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 2
2018/12/29-15:35 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-15:35 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-15:35 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:35 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-15:35 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-15:35 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:35 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 通过articleId查找相应的标签------------------------------------
2018/12/29-15:35 [http-nio-12080-exec-1] DEBUG org.lis_dao.CommentDao.countByExample- ==>  Preparing: select count(*) from comment WHERE ( article_id = ? ) 
2018/12/29-15:35 [http-nio-12080-exec-1] DEBUG org.lis_dao.CommentDao.countByExample- ==> Parameters: 8(Long)
2018/12/29-15:35 [http-nio-12080-exec-1] DEBUG org.lis_dao.CommentDao.countByExample- <==      Total: 1
2018/12/29-15:35 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 通过文章的id统计其评论数------------------------------------
2018/12/29-15:35 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==>  Preparing: select comment_id as commentId,comment_content as commentContent,title,comment.create_time as createTime,username from comment inner join user on comment.user_id = user.user_id inner join article on comment.article_id = article.article_id where comment.article_id = ? order by comment.create_time 
2018/12/29-15:35 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==> Parameters: 8(Long)
2018/12/29-15:35 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- <==      Total: 2
2018/12/29-15:35 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 通过文章id获取评论列表------------------------------------
2018/12/29-15:51 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-15:51 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-15:51 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-15:51 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-15:51 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-15:51 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-15:51 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-15:51 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-15:51 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-15:51 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-15:51 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-15:51 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-15:51 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-15:51 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:51 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 通过文章id查找文章------------------------------------
2018/12/29-15:51 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-15:51 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-15:51 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-15:51 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-15:51 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-15:51 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:51 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-15:51 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-15:51 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:51 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-15:51 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-15:51 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:51 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-15:51 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-15:51 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:51 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 通过articleId查找相应的标签------------------------------------
2018/12/29-15:51 [http-nio-12080-exec-9] DEBUG org.lis_dao.CommentDao.countByExample- ==>  Preparing: select count(*) from comment WHERE ( article_id = ? ) 
2018/12/29-15:51 [http-nio-12080-exec-9] DEBUG org.lis_dao.CommentDao.countByExample- ==> Parameters: 7(Long)
2018/12/29-15:51 [http-nio-12080-exec-9] DEBUG org.lis_dao.CommentDao.countByExample- <==      Total: 1
2018/12/29-15:51 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 通过文章的id统计其评论数------------------------------------
2018/12/29-15:51 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==>  Preparing: select comment_id as commentId,comment_content as commentContent,title,comment.create_time as createTime,username from comment inner join user on comment.user_id = user.user_id inner join article on comment.article_id = article.article_id where comment.article_id = ? order by comment.create_time 
2018/12/29-15:51 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==> Parameters: 7(Long)
2018/12/29-15:51 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- <==      Total: 0
2018/12/29-15:51 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 通过文章id获取评论列表------------------------------------
2018/12/29-15:51 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-15:51 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-15:51 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-15:51 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-15:51 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-15:51 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-15:51 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-15:51 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-15:51 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 3(Integer), 3(Integer)
2018/12/29-15:51 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-15:51 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-15:52 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-15:52 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 8(Long)
2018/12/29-15:52 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:52 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 通过文章id查找文章------------------------------------
2018/12/29-15:52 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-15:52 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 8(Long)
2018/12/29-15:52 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 2
2018/12/29-15:52 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-15:52 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-15:52 [http-nio-12080-exec-10] DEBUG org.lis_dao.CommentDao.countByExample- ==>  Preparing: select count(*) from comment WHERE ( article_id = ? ) 
2018/12/29-15:52 [http-nio-12080-exec-10] DEBUG org.lis_dao.CommentDao.countByExample- ==> Parameters: 8(Long)
2018/12/29-15:52 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:52 [http-nio-12080-exec-10] DEBUG org.lis_dao.CommentDao.countByExample- <==      Total: 1
2018/12/29-15:52 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 通过文章的id统计其评论数------------------------------------
2018/12/29-15:52 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-15:52 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-15:52 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:52 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 通过articleId查找相应的标签------------------------------------
2018/12/29-15:52 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==>  Preparing: select comment_id as commentId,comment_content as commentContent,title,comment.create_time as createTime,username from comment inner join user on comment.user_id = user.user_id inner join article on comment.article_id = article.article_id where comment.article_id = ? order by comment.create_time 
2018/12/29-15:52 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==> Parameters: 8(Long)
2018/12/29-15:52 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- <==      Total: 2
2018/12/29-15:52 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 通过文章id获取评论列表------------------------------------
2018/12/29-15:52 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-15:52 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-15:52 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-15:52 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-15:52 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-15:52 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-15:52 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-15:52 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-15:52 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-15:52 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-15:52 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-15:52 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-15:52 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 8(Long)
2018/12/29-15:52 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:52 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 通过文章id查找文章------------------------------------
2018/12/29-15:52 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-15:52 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 8(Long)
2018/12/29-15:52 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 2
2018/12/29-15:52 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-15:52 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-15:52 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:52 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-15:52 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-15:52 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:52 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 通过articleId查找相应的标签------------------------------------
2018/12/29-15:52 [http-nio-12080-exec-2] DEBUG org.lis_dao.CommentDao.countByExample- ==>  Preparing: select count(*) from comment WHERE ( article_id = ? ) 
2018/12/29-15:52 [http-nio-12080-exec-2] DEBUG org.lis_dao.CommentDao.countByExample- ==> Parameters: 8(Long)
2018/12/29-15:52 [http-nio-12080-exec-2] DEBUG org.lis_dao.CommentDao.countByExample- <==      Total: 1
2018/12/29-15:52 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 通过文章的id统计其评论数------------------------------------
2018/12/29-15:52 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==>  Preparing: select comment_id as commentId,comment_content as commentContent,title,comment.create_time as createTime,username from comment inner join user on comment.user_id = user.user_id inner join article on comment.article_id = article.article_id where comment.article_id = ? order by comment.create_time 
2018/12/29-15:52 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==> Parameters: 8(Long)
2018/12/29-15:52 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- <==      Total: 2
2018/12/29-15:52 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 通过文章id获取评论列表------------------------------------
2018/12/29-15:54 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-15:54 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-15:54 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-15:54 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-15:54 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-15:54 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-15:54 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-15:54 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-15:54 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-15:54 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-15:54 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-15:54 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-15:54 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 8(Long)
2018/12/29-15:54 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:54 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 通过文章id查找文章------------------------------------
2018/12/29-15:54 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-15:54 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 8(Long)
2018/12/29-15:54 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 2
2018/12/29-15:54 [http-nio-12080-exec-9] DEBUG org.lis_dao.CommentDao.countByExample- ==>  Preparing: select count(*) from comment WHERE ( article_id = ? ) 
2018/12/29-15:54 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-15:54 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-15:54 [http-nio-12080-exec-9] DEBUG org.lis_dao.CommentDao.countByExample- ==> Parameters: 8(Long)
2018/12/29-15:54 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:54 [http-nio-12080-exec-9] DEBUG org.lis_dao.CommentDao.countByExample- <==      Total: 1
2018/12/29-15:54 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 通过文章的id统计其评论数------------------------------------
2018/12/29-15:54 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-15:54 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-15:54 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:54 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 通过articleId查找相应的标签------------------------------------
2018/12/29-15:54 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==>  Preparing: select comment_id as commentId,comment_content as commentContent,title,comment.create_time as createTime,username from comment inner join user on comment.user_id = user.user_id inner join article on comment.article_id = article.article_id where comment.article_id = ? order by comment.create_time 
2018/12/29-15:54 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==> Parameters: 8(Long)
2018/12/29-15:54 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- <==      Total: 2
2018/12/29-15:54 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 通过文章id获取评论列表------------------------------------
2018/12/29-15:54 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-15:54 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-15:54 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-15:54 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-15:54 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-15:54 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-15:54 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-15:54 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-15:54 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-15:54 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-15:54 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-15:54 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-15:54 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-15:54 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-15:54 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-15:54 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 3(Integer), 3(Integer)
2018/12/29-15:54 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-15:54 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-15:54 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-15:54 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 8(Long)
2018/12/29-15:54 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:54 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 通过文章id查找文章------------------------------------
2018/12/29-15:54 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-15:54 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 8(Long)
2018/12/29-15:54 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 2
2018/12/29-15:54 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-15:54 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-15:54 [http-nio-12080-exec-6] DEBUG org.lis_dao.CommentDao.countByExample- ==>  Preparing: select count(*) from comment WHERE ( article_id = ? ) 
2018/12/29-15:54 [http-nio-12080-exec-6] DEBUG org.lis_dao.CommentDao.countByExample- ==> Parameters: 8(Long)
2018/12/29-15:54 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:54 [http-nio-12080-exec-6] DEBUG org.lis_dao.CommentDao.countByExample- <==      Total: 1
2018/12/29-15:54 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 通过文章的id统计其评论数------------------------------------
2018/12/29-15:54 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-15:54 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-15:54 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:54 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 通过articleId查找相应的标签------------------------------------
2018/12/29-15:54 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==>  Preparing: select comment_id as commentId,comment_content as commentContent,title,comment.create_time as createTime,username from comment inner join user on comment.user_id = user.user_id inner join article on comment.article_id = article.article_id where comment.article_id = ? order by comment.create_time 
2018/12/29-15:54 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==> Parameters: 8(Long)
2018/12/29-15:54 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- <==      Total: 2
2018/12/29-15:54 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 通过文章id获取评论列表------------------------------------
2018/12/29-15:55 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-15:55 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-15:55 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-15:55 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-15:55 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-15:55 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-15:55 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-15:55 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-15:55 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-15:55 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-15:55 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-15:55 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-15:55 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 8(Long)
2018/12/29-15:55 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:55 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 通过文章id查找文章------------------------------------
2018/12/29-15:55 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-15:55 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 8(Long)
2018/12/29-15:55 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 2
2018/12/29-15:55 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-15:55 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-15:55 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:55 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-15:55 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-15:55 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:55 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 通过articleId查找相应的标签------------------------------------
2018/12/29-15:55 [http-nio-12080-exec-2] DEBUG org.lis_dao.CommentDao.countByExample- ==>  Preparing: select count(*) from comment WHERE ( article_id = ? ) 
2018/12/29-15:55 [http-nio-12080-exec-2] DEBUG org.lis_dao.CommentDao.countByExample- ==> Parameters: 8(Long)
2018/12/29-15:55 [http-nio-12080-exec-2] DEBUG org.lis_dao.CommentDao.countByExample- <==      Total: 1
2018/12/29-15:55 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 通过文章的id统计其评论数------------------------------------
2018/12/29-15:55 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==>  Preparing: select comment_id as commentId,comment_content as commentContent,title,comment.create_time as createTime,username from comment inner join user on comment.user_id = user.user_id inner join article on comment.article_id = article.article_id where comment.article_id = ? order by comment.create_time 
2018/12/29-15:55 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==> Parameters: 8(Long)
2018/12/29-15:55 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- <==      Total: 2
2018/12/29-15:55 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 通过文章id获取评论列表------------------------------------
2018/12/29-15:56 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-15:56 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-15:56 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-15:56 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-15:56 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-15:56 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-15:56 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-15:56 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-15:56 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-15:56 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-15:56 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-15:56 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-15:56 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 8(Long)
2018/12/29-15:56 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:56 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 通过文章id查找文章------------------------------------
2018/12/29-15:56 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-15:56 [http-nio-12080-exec-3] DEBUG org.lis_dao.CommentDao.countByExample- ==>  Preparing: select count(*) from comment WHERE ( article_id = ? ) 
2018/12/29-15:56 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 8(Long)
2018/12/29-15:56 [http-nio-12080-exec-3] DEBUG org.lis_dao.CommentDao.countByExample- ==> Parameters: 8(Long)
2018/12/29-15:56 [http-nio-12080-exec-3] DEBUG org.lis_dao.CommentDao.countByExample- <==      Total: 1
2018/12/29-15:56 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 2
2018/12/29-15:56 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 通过文章的id统计其评论数------------------------------------
2018/12/29-15:56 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-15:56 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-15:56 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:56 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-15:56 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-15:56 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:56 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 通过articleId查找相应的标签------------------------------------
2018/12/29-15:56 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==>  Preparing: select comment_id as commentId,comment_content as commentContent,title,comment.create_time as createTime,username from comment inner join user on comment.user_id = user.user_id inner join article on comment.article_id = article.article_id where comment.article_id = ? order by comment.create_time 
2018/12/29-15:56 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==> Parameters: 8(Long)
2018/12/29-15:56 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- <==      Total: 2
2018/12/29-15:56 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 通过文章id获取评论列表------------------------------------
2018/12/29-15:59 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-15:59 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-15:59 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-15:59 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-15:59 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-15:59 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-15:59 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-15:59 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-15:59 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-15:59 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-15:59 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-15:59 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-15:59 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-15:59 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-15:59 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-15:59 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 3(Integer), 3(Integer)
2018/12/29-15:59 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-15:59 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-15:59 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-15:59 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 8(Long)
2018/12/29-15:59 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:59 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 通过文章id查找文章------------------------------------
2018/12/29-15:59 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-15:59 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 8(Long)
2018/12/29-15:59 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 2
2018/12/29-15:59 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-15:59 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-15:59 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:59 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-15:59 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-15:59 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:59 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 通过articleId查找相应的标签------------------------------------
2018/12/29-15:59 [http-nio-12080-exec-1] DEBUG org.lis_dao.CommentDao.countByExample- ==>  Preparing: select count(*) from comment WHERE ( article_id = ? ) 
2018/12/29-15:59 [http-nio-12080-exec-1] DEBUG org.lis_dao.CommentDao.countByExample- ==> Parameters: 8(Long)
2018/12/29-15:59 [http-nio-12080-exec-1] DEBUG org.lis_dao.CommentDao.countByExample- <==      Total: 1
2018/12/29-15:59 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 通过文章的id统计其评论数------------------------------------
2018/12/29-15:59 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==>  Preparing: select comment_id as commentId,comment_content as commentContent,title,comment.create_time as createTime,username from comment inner join user on comment.user_id = user.user_id inner join article on comment.article_id = article.article_id where comment.article_id = ? order by comment.create_time 
2018/12/29-15:59 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==> Parameters: 8(Long)
2018/12/29-15:59 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- <==      Total: 2
2018/12/29-15:59 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 通过文章id获取评论列表------------------------------------
2018/12/29-15:59 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-15:59 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-15:59 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-15:59 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-15:59 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-15:59 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-15:59 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-15:59 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-15:59 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-15:59 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-15:59 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-15:59 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-15:59 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 8(Long)
2018/12/29-15:59 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:59 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 通过文章id查找文章------------------------------------
2018/12/29-15:59 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-15:59 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 8(Long)
2018/12/29-15:59 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 2
2018/12/29-15:59 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-15:59 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-15:59 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:59 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-15:59 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-15:59 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-15:59 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 通过articleId查找相应的标签------------------------------------
2018/12/29-15:59 [http-nio-12080-exec-5] DEBUG org.lis_dao.CommentDao.countByExample- ==>  Preparing: select count(*) from comment WHERE ( article_id = ? ) 
2018/12/29-15:59 [http-nio-12080-exec-5] DEBUG org.lis_dao.CommentDao.countByExample- ==> Parameters: 8(Long)
2018/12/29-15:59 [http-nio-12080-exec-5] DEBUG org.lis_dao.CommentDao.countByExample- <==      Total: 1
2018/12/29-15:59 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 通过文章的id统计其评论数------------------------------------
2018/12/29-15:59 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==>  Preparing: select comment_id as commentId,comment_content as commentContent,title,comment.create_time as createTime,username from comment inner join user on comment.user_id = user.user_id inner join article on comment.article_id = article.article_id where comment.article_id = ? order by comment.create_time 
2018/12/29-15:59 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==> Parameters: 8(Long)
2018/12/29-15:59 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- <==      Total: 2
2018/12/29-15:59 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 通过文章id获取评论列表------------------------------------
2018/12/29-16:00 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-16:00 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-16:00 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-16:00 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-16:00 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-16:00 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-16:00 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-16:00 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-16:00 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-16:00 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-16:00 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-16:00 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-16:00 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 8(Long)
2018/12/29-16:00 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-16:00 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 通过文章id查找文章------------------------------------
2018/12/29-16:00 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-16:00 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 8(Long)
2018/12/29-16:00 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 2
2018/12/29-16:00 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-16:00 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-16:00 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-16:00 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-16:00 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-16:00 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-16:00 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 通过articleId查找相应的标签------------------------------------
2018/12/29-16:00 [http-nio-12080-exec-4] DEBUG org.lis_dao.CommentDao.countByExample- ==>  Preparing: select count(*) from comment WHERE ( article_id = ? ) 
2018/12/29-16:00 [http-nio-12080-exec-4] DEBUG org.lis_dao.CommentDao.countByExample- ==> Parameters: 8(Long)
2018/12/29-16:00 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==>  Preparing: select comment_id as commentId,comment_content as commentContent,title,comment.create_time as createTime,username from comment inner join user on comment.user_id = user.user_id inner join article on comment.article_id = article.article_id where comment.article_id = ? order by comment.create_time 
2018/12/29-16:00 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==> Parameters: 8(Long)
2018/12/29-16:00 [http-nio-12080-exec-4] DEBUG org.lis_dao.CommentDao.countByExample- <==      Total: 1
2018/12/29-16:00 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 通过文章的id统计其评论数------------------------------------
2018/12/29-16:00 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- <==      Total: 2
2018/12/29-16:00 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 通过文章id获取评论列表------------------------------------
2018/12/29-16:01 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-16:01 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-16:01 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-16:01 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-16:01 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-16:01 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-16:01 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-16:01 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-16:01 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-16:01 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-16:01 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-16:01 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-16:01 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 8(Long)
2018/12/29-16:01 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-16:01 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 通过文章id查找文章------------------------------------
2018/12/29-16:01 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-16:01 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 8(Long)
2018/12/29-16:01 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 2
2018/12/29-16:01 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-16:01 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-16:01 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-16:01 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-16:01 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-16:01 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-16:01 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 通过articleId查找相应的标签------------------------------------
2018/12/29-16:01 [http-nio-12080-exec-2] DEBUG org.lis_dao.CommentDao.countByExample- ==>  Preparing: select count(*) from comment WHERE ( article_id = ? ) 
2018/12/29-16:01 [http-nio-12080-exec-2] DEBUG org.lis_dao.CommentDao.countByExample- ==> Parameters: 8(Long)
2018/12/29-16:01 [http-nio-12080-exec-2] DEBUG org.lis_dao.CommentDao.countByExample- <==      Total: 1
2018/12/29-16:01 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 通过文章的id统计其评论数------------------------------------
2018/12/29-16:01 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==>  Preparing: select comment_id as commentId,comment_content as commentContent,title,comment.create_time as createTime,username from comment inner join user on comment.user_id = user.user_id inner join article on comment.article_id = article.article_id where comment.article_id = ? order by comment.create_time 
2018/12/29-16:01 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==> Parameters: 8(Long)
2018/12/29-16:01 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- <==      Total: 2
2018/12/29-16:01 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 通过文章id获取评论列表------------------------------------
2018/12/29-16:03 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-16:03 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-16:03 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-16:03 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-16:03 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-16:03 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-16:03 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-16:03 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-16:03 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-16:03 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-16:03 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-16:03 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-16:03 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 8(Long)
2018/12/29-16:03 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-16:03 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 通过文章id查找文章------------------------------------
2018/12/29-16:03 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-16:03 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 8(Long)
2018/12/29-16:03 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 2
2018/12/29-16:03 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-16:03 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-16:03 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-16:03 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-16:03 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-16:03 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-16:03 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 通过articleId查找相应的标签------------------------------------
2018/12/29-16:03 [http-nio-12080-exec-9] DEBUG org.lis_dao.CommentDao.countByExample- ==>  Preparing: select count(*) from comment WHERE ( article_id = ? ) 
2018/12/29-16:03 [http-nio-12080-exec-9] DEBUG org.lis_dao.CommentDao.countByExample- ==> Parameters: 8(Long)
2018/12/29-16:03 [http-nio-12080-exec-9] DEBUG org.lis_dao.CommentDao.countByExample- <==      Total: 1
2018/12/29-16:03 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 通过文章的id统计其评论数------------------------------------
2018/12/29-16:03 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==>  Preparing: select comment_id as commentId,comment_content as commentContent,title,comment.create_time as createTime,username from comment inner join user on comment.user_id = user.user_id inner join article on comment.article_id = article.article_id where comment.article_id = ? order by comment.create_time 
2018/12/29-16:03 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==> Parameters: 8(Long)
2018/12/29-16:03 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- <==      Total: 2
2018/12/29-16:03 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 通过文章id获取评论列表------------------------------------
2018/12/29-16:03 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-16:03 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-16:03 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-16:03 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-16:03 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-16:03 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-16:03 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-16:03 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-16:03 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-16:03 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-16:03 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-16:03 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-16:03 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 8(Long)
2018/12/29-16:03 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-16:03 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 通过文章id查找文章------------------------------------
2018/12/29-16:03 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-16:03 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 8(Long)
2018/12/29-16:03 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 2
2018/12/29-16:03 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-16:03 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-16:03 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-16:03 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-16:03 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-16:03 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-16:03 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 通过articleId查找相应的标签------------------------------------
2018/12/29-16:03 [http-nio-12080-exec-6] DEBUG org.lis_dao.CommentDao.countByExample- ==>  Preparing: select count(*) from comment WHERE ( article_id = ? ) 
2018/12/29-16:03 [http-nio-12080-exec-6] DEBUG org.lis_dao.CommentDao.countByExample- ==> Parameters: 8(Long)
2018/12/29-16:03 [http-nio-12080-exec-6] DEBUG org.lis_dao.CommentDao.countByExample- <==      Total: 1
2018/12/29-16:03 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==>  Preparing: select comment_id as commentId,comment_content as commentContent,title,comment.create_time as createTime,username from comment inner join user on comment.user_id = user.user_id inner join article on comment.article_id = article.article_id where comment.article_id = ? order by comment.create_time 
2018/12/29-16:03 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 通过文章的id统计其评论数------------------------------------
2018/12/29-16:03 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==> Parameters: 8(Long)
2018/12/29-16:03 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- <==      Total: 2
2018/12/29-16:03 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 通过文章id获取评论列表------------------------------------
2018/12/29-16:05 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-16:05 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-16:05 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-16:05 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-16:05 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-16:05 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-16:05 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-16:05 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-16:05 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-16:05 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-16:05 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-16:05 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-16:05 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 8(Long)
2018/12/29-16:05 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-16:05 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 通过文章id查找文章------------------------------------
2018/12/29-16:05 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-16:05 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 8(Long)
2018/12/29-16:05 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 2
2018/12/29-16:05 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-16:05 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-16:05 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-16:05 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-16:05 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-16:05 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-16:05 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 通过articleId查找相应的标签------------------------------------
2018/12/29-16:05 [http-nio-12080-exec-7] DEBUG org.lis_dao.CommentDao.countByExample- ==>  Preparing: select count(*) from comment WHERE ( article_id = ? ) 
2018/12/29-16:05 [http-nio-12080-exec-7] DEBUG org.lis_dao.CommentDao.countByExample- ==> Parameters: 8(Long)
2018/12/29-16:05 [http-nio-12080-exec-7] DEBUG org.lis_dao.CommentDao.countByExample- <==      Total: 1
2018/12/29-16:05 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 通过文章的id统计其评论数------------------------------------
2018/12/29-16:05 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==>  Preparing: select comment_id as commentId,comment_content as commentContent,title,comment.create_time as createTime,username from comment inner join user on comment.user_id = user.user_id inner join article on comment.article_id = article.article_id where comment.article_id = ? order by comment.create_time 
2018/12/29-16:05 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==> Parameters: 8(Long)
2018/12/29-16:05 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- <==      Total: 2
2018/12/29-16:05 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 通过文章id获取评论列表------------------------------------
2018/12/29-16:06 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-16:06 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-16:06 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-16:06 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-16:06 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-16:06 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-16:06 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-16:06 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-16:06 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-16:06 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-16:06 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-16:06 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-16:06 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 8(Long)
2018/12/29-16:06 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-16:06 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 通过文章id查找文章------------------------------------
2018/12/29-16:06 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-16:06 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 8(Long)
2018/12/29-16:06 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 2
2018/12/29-16:06 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-16:06 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-16:06 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-16:06 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-16:06 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-16:06 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-16:06 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 通过articleId查找相应的标签------------------------------------
2018/12/29-16:06 [http-nio-12080-exec-1] DEBUG org.lis_dao.CommentDao.countByExample- ==>  Preparing: select count(*) from comment WHERE ( article_id = ? ) 
2018/12/29-16:06 [http-nio-12080-exec-1] DEBUG org.lis_dao.CommentDao.countByExample- ==> Parameters: 8(Long)
2018/12/29-16:06 [http-nio-12080-exec-1] DEBUG org.lis_dao.CommentDao.countByExample- <==      Total: 1
2018/12/29-16:06 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 通过文章的id统计其评论数------------------------------------
2018/12/29-16:06 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==>  Preparing: select comment_id as commentId,comment_content as commentContent,title,comment.create_time as createTime,username from comment inner join user on comment.user_id = user.user_id inner join article on comment.article_id = article.article_id where comment.article_id = ? order by comment.create_time 
2018/12/29-16:06 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==> Parameters: 8(Long)
2018/12/29-16:06 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- <==      Total: 2
2018/12/29-16:06 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 通过文章id获取评论列表------------------------------------
2018/12/29-16:06 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-16:06 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-16:06 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-16:06 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-16:06 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-16:06 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-16:06 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-16:06 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-16:06 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-16:06 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-16:06 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-16:06 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-16:06 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-16:06 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-16:06 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-16:06 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 3(Integer), 3(Integer)
2018/12/29-16:06 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-16:06 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-16:06 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-16:06 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 8(Long)
2018/12/29-16:06 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-16:06 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 通过文章id查找文章------------------------------------
2018/12/29-16:06 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-16:06 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 8(Long)
2018/12/29-16:06 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 2
2018/12/29-16:06 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-16:06 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-16:06 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-16:06 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-16:06 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-16:06 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-16:06 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 通过articleId查找相应的标签------------------------------------
2018/12/29-16:06 [http-nio-12080-exec-3] DEBUG org.lis_dao.CommentDao.countByExample- ==>  Preparing: select count(*) from comment WHERE ( article_id = ? ) 
2018/12/29-16:06 [http-nio-12080-exec-3] DEBUG org.lis_dao.CommentDao.countByExample- ==> Parameters: 8(Long)
2018/12/29-16:06 [http-nio-12080-exec-3] DEBUG org.lis_dao.CommentDao.countByExample- <==      Total: 1
2018/12/29-16:06 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==>  Preparing: select comment_id as commentId,comment_content as commentContent,title,comment.create_time as createTime,username from comment inner join user on comment.user_id = user.user_id inner join article on comment.article_id = article.article_id where comment.article_id = ? order by comment.create_time 
2018/12/29-16:06 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==> Parameters: 8(Long)
2018/12/29-16:06 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 通过文章的id统计其评论数------------------------------------
2018/12/29-16:06 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- <==      Total: 2
2018/12/29-16:06 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 通过文章id获取评论列表------------------------------------
2018/12/29-16:06 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-16:06 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-16:06 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-16:06 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-16:06 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-16:06 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-16:06 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-16:06 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-16:06 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-16:06 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-16:06 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-16:06 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-16:06 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 8(Long)
2018/12/29-16:06 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-16:06 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 通过文章id查找文章------------------------------------
2018/12/29-16:06 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-16:06 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 8(Long)
2018/12/29-16:06 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 2
2018/12/29-16:06 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-16:06 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-16:06 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-16:06 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-16:06 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-16:06 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-16:06 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 通过articleId查找相应的标签------------------------------------
2018/12/29-16:06 [http-nio-12080-exec-4] DEBUG org.lis_dao.CommentDao.countByExample- ==>  Preparing: select count(*) from comment WHERE ( article_id = ? ) 
2018/12/29-16:06 [http-nio-12080-exec-4] DEBUG org.lis_dao.CommentDao.countByExample- ==> Parameters: 8(Long)
2018/12/29-16:06 [http-nio-12080-exec-4] DEBUG org.lis_dao.CommentDao.countByExample- <==      Total: 1
2018/12/29-16:06 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 通过文章的id统计其评论数------------------------------------
2018/12/29-16:06 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==>  Preparing: select comment_id as commentId,comment_content as commentContent,title,comment.create_time as createTime,username from comment inner join user on comment.user_id = user.user_id inner join article on comment.article_id = article.article_id where comment.article_id = ? order by comment.create_time 
2018/12/29-16:06 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==> Parameters: 8(Long)
2018/12/29-16:06 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- <==      Total: 2
2018/12/29-16:06 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 通过文章id获取评论列表------------------------------------
2018/12/29-16:06 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-16:06 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-16:06 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-16:06 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-16:06 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 3(Integer), 3(Integer)
2018/12/29-16:06 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-16:06 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-16:12 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-16:12 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-16:12 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-16:12 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-16:12 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-16:12 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-16:12 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-16:12 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-16:12 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-16:12 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-16:12 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-16:12 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-16:12 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 8(Long)
2018/12/29-16:12 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-16:12 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 通过文章id查找文章------------------------------------
2018/12/29-16:12 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-16:12 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 8(Long)
2018/12/29-16:12 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 2
2018/12/29-16:12 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-16:12 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-16:12 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-16:12 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==>  Preparing: select comment_id as commentId,comment_content as commentContent,title,comment.create_time as createTime,username from comment inner join user on comment.user_id = user.user_id inner join article on comment.article_id = article.article_id where comment.article_id = ? order by comment.create_time 
2018/12/29-16:12 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-16:12 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-16:12 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==> Parameters: 8(Long)
2018/12/29-16:12 [http-nio-12080-exec-2] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-16:12 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 通过articleId查找相应的标签------------------------------------
2018/12/29-16:12 [http-nio-12080-exec-10] DEBUG org.lis_dao.CommentDao.countByExample- ==>  Preparing: select count(*) from comment WHERE ( article_id = ? ) 
2018/12/29-16:12 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- <==      Total: 2
2018/12/29-16:12 [http-nio-12080-exec-10] DEBUG org.lis_dao.CommentDao.countByExample- ==> Parameters: 8(Long)
2018/12/29-16:12 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 通过文章id获取评论列表------------------------------------
2018/12/29-16:12 [http-nio-12080-exec-10] DEBUG org.lis_dao.CommentDao.countByExample- <==      Total: 1
2018/12/29-16:12 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 通过文章的id统计其评论数------------------------------------
2018/12/29-16:12 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:12 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 3(Long)
2018/12/29-16:12 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 0
2018/12/29-16:12 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:12 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:12 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:12 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:12 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:18 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-16:18 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-16:18 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-16:18 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-16:18 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-16:18 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-16:18 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-16:18 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-16:18 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-16:18 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-16:18 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-16:18 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-16:18 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 8(Long)
2018/12/29-16:18 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-16:18 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 通过文章id查找文章------------------------------------
2018/12/29-16:18 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-16:18 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 8(Long)
2018/12/29-16:18 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 2
2018/12/29-16:18 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-16:18 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-16:18 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-16:18 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-16:18 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-16:18 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-16:18 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 通过articleId查找相应的标签------------------------------------
2018/12/29-16:18 [http-nio-12080-exec-10] DEBUG org.lis_dao.CommentDao.countByExample- ==>  Preparing: select count(*) from comment WHERE ( article_id = ? ) 
2018/12/29-16:18 [http-nio-12080-exec-10] DEBUG org.lis_dao.CommentDao.countByExample- ==> Parameters: 8(Long)
2018/12/29-16:18 [http-nio-12080-exec-10] DEBUG org.lis_dao.CommentDao.countByExample- <==      Total: 1
2018/12/29-16:18 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 通过文章的id统计其评论数------------------------------------
2018/12/29-16:18 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==>  Preparing: select comment_id as commentId,comment_content as commentContent,title,comment.create_time as createTime,username from comment inner join user on comment.user_id = user.user_id inner join article on comment.article_id = article.article_id where comment.article_id = ? order by comment.create_time 
2018/12/29-16:18 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==> Parameters: 8(Long)
2018/12/29-16:18 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- <==      Total: 2
2018/12/29-16:18 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 通过文章id获取评论列表------------------------------------
2018/12/29-16:18 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:18 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 3(Long)
2018/12/29-16:18 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 0
2018/12/29-16:18 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:18 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:18 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:18 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:18 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:18 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:18 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:18 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:18 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:18 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:18 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:18 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:18 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:18 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:18 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:18 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:18 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:18 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:18 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 3(Long)
2018/12/29-16:18 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 0
2018/12/29-16:18 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:18 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:18 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:18 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:18 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:18 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:18 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:18 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:18 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:18 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:18 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:18 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:18 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:18 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:18 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:18 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:18 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:18 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:18 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 3(Long)
2018/12/29-16:18 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 0
2018/12/29-16:18 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:18 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:18 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 3(Long)
2018/12/29-16:18 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 0
2018/12/29-16:18 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:18 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:18 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 3(Long)
2018/12/29-16:18 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 0
2018/12/29-16:18 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:18 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:18 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:18 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:18 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:18 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:18 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:18 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:18 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:18 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:18 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:18 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:18 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:18 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:18 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:18 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:18 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:18 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:18 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 3(Long)
2018/12/29-16:18 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 0
2018/12/29-16:18 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:18 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:18 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:18 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:18 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:18 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:18 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:18 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:18 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:18 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:18 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 3(Long)
2018/12/29-16:18 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 0
2018/12/29-16:18 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:18 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:18 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 3(Long)
2018/12/29-16:18 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 0
2018/12/29-16:18 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:18 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:18 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 3(Long)
2018/12/29-16:18 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 0
2018/12/29-16:18 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:18 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:18 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 3(Long)
2018/12/29-16:18 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 0
2018/12/29-16:18 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:18 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:18 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 3(Long)
2018/12/29-16:18 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 0
2018/12/29-16:18 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:18 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:18 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 3(Long)
2018/12/29-16:18 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 0
2018/12/29-16:18 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:18 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:18 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:18 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:18 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:18 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:18 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 3(Long)
2018/12/29-16:18 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 0
2018/12/29-16:18 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:18 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:18 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 3(Long)
2018/12/29-16:18 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 0
2018/12/29-16:18 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:18 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:18 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:18 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:18 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:18 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:18 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:18 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:18 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:18 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:18 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:18 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:18 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:18 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:18 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 3(Long)
2018/12/29-16:18 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 0
2018/12/29-16:18 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:18 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:18 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 3(Long)
2018/12/29-16:18 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 0
2018/12/29-16:18 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:18 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:18 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:18 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:18 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:18 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:18 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 3(Long)
2018/12/29-16:18 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 0
2018/12/29-16:18 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:18 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:18 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 3(Long)
2018/12/29-16:18 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 0
2018/12/29-16:18 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:18 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:18 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:18 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:18 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:18 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:18 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:18 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:18 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:18 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:18 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:18 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:18 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:19 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:19 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:19 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:19 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:20 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-16:20 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-16:20 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-16:20 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-16:20 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-16:20 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-16:20 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-16:20 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-16:20 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-16:20 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-16:20 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-16:20 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-16:20 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-16:20 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-16:20 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-16:20 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 3(Integer), 3(Integer)
2018/12/29-16:20 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-16:20 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-16:20 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-16:20 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 8(Long)
2018/12/29-16:20 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-16:20 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 通过文章id查找文章------------------------------------
2018/12/29-16:20 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-16:20 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 8(Long)
2018/12/29-16:20 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 2
2018/12/29-16:20 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-16:20 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-16:20 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-16:20 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-16:20 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-16:20 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-16:20 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 通过articleId查找相应的标签------------------------------------
2018/12/29-16:20 [http-nio-12080-exec-7] DEBUG org.lis_dao.CommentDao.countByExample- ==>  Preparing: select count(*) from comment WHERE ( article_id = ? ) 
2018/12/29-16:20 [http-nio-12080-exec-7] DEBUG org.lis_dao.CommentDao.countByExample- ==> Parameters: 8(Long)
2018/12/29-16:20 [http-nio-12080-exec-7] DEBUG org.lis_dao.CommentDao.countByExample- <==      Total: 1
2018/12/29-16:20 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 通过文章的id统计其评论数------------------------------------
2018/12/29-16:20 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==>  Preparing: select comment_id as commentId,comment_content as commentContent,title,comment.create_time as createTime,username from comment inner join user on comment.user_id = user.user_id inner join article on comment.article_id = article.article_id where comment.article_id = ? order by comment.create_time 
2018/12/29-16:20 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==> Parameters: 8(Long)
2018/12/29-16:20 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- <==      Total: 2
2018/12/29-16:20 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 通过文章id获取评论列表------------------------------------
2018/12/29-16:20 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:20 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 3(Long)
2018/12/29-16:20 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 0
2018/12/29-16:20 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:20 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:20 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 3(Long)
2018/12/29-16:20 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 0
2018/12/29-16:20 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:20 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:20 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:20 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:20 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:20 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:20 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:20 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:20 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:25 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-16:25 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-16:25 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-16:25 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-16:25 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-16:25 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-16:25 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-16:25 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-16:25 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-16:25 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-16:25 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-16:25 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-16:25 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 8(Long)
2018/12/29-16:25 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-16:25 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 通过文章id查找文章------------------------------------
2018/12/29-16:25 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-16:25 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 8(Long)
2018/12/29-16:25 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 2
2018/12/29-16:25 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-16:25 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-16:25 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-16:25 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-16:25 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-16:25 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-16:25 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 通过articleId查找相应的标签------------------------------------
2018/12/29-16:25 [http-nio-12080-exec-6] DEBUG org.lis_dao.CommentDao.countByExample- ==>  Preparing: select count(*) from comment WHERE ( article_id = ? ) 
2018/12/29-16:25 [http-nio-12080-exec-6] DEBUG org.lis_dao.CommentDao.countByExample- ==> Parameters: 8(Long)
2018/12/29-16:25 [http-nio-12080-exec-6] DEBUG org.lis_dao.CommentDao.countByExample- <==      Total: 1
2018/12/29-16:25 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 通过文章的id统计其评论数------------------------------------
2018/12/29-16:25 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==>  Preparing: select comment_id as commentId,comment_content as commentContent,title,comment.create_time as createTime,username from comment inner join user on comment.user_id = user.user_id inner join article on comment.article_id = article.article_id where comment.article_id = ? order by comment.create_time 
2018/12/29-16:25 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==> Parameters: 8(Long)
2018/12/29-16:25 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- <==      Total: 2
2018/12/29-16:25 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 通过文章id获取评论列表------------------------------------
2018/12/29-16:25 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:25 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 3(Long)
2018/12/29-16:25 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 0
2018/12/29-16:25 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:25 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:25 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:25 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:25 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:25 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:25 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:25 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:25 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:25 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:25 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:25 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:25 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:25 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:25 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:25 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:25 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:25 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:25 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 3(Long)
2018/12/29-16:25 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 0
2018/12/29-16:25 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:25 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:25 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:25 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:25 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:25 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:25 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:25 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:25 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:25 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:25 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 3(Long)
2018/12/29-16:25 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 0
2018/12/29-16:25 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:25 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:25 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 3(Long)
2018/12/29-16:25 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 0
2018/12/29-16:25 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:25 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:25 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:25 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:25 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:26 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:26 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 3(Long)
2018/12/29-16:26 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 0
2018/12/29-16:26 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:26 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:26 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:26 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:26 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:26 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:26 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 3(Long)
2018/12/29-16:26 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 0
2018/12/29-16:26 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:26 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:26 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:26 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:26 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:26 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:26 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 3(Long)
2018/12/29-16:26 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 0
2018/12/29-16:26 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:26 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:26 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:26 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:26 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:26 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:26 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 3(Long)
2018/12/29-16:26 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 0
2018/12/29-16:26 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:26 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:26 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:26 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:26 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:27 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-16:27 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-16:27 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-16:27 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-16:27 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-16:27 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-16:27 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-16:27 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-16:27 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-16:27 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-16:27 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-16:27 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-16:27 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-16:27 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-16:27 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-16:27 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 3(Integer), 3(Integer)
2018/12/29-16:27 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-16:27 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-16:27 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-16:27 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 8(Long)
2018/12/29-16:27 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-16:27 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 通过文章id查找文章------------------------------------
2018/12/29-16:27 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-16:27 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 8(Long)
2018/12/29-16:27 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 2
2018/12/29-16:27 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-16:27 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-16:27 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-16:27 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-16:27 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-16:27 [http-nio-12080-exec-7] DEBUG org.lis_dao.CommentDao.countByExample- ==>  Preparing: select count(*) from comment WHERE ( article_id = ? ) 
2018/12/29-16:27 [http-nio-12080-exec-7] DEBUG org.lis_dao.CommentDao.countByExample- ==> Parameters: 8(Long)
2018/12/29-16:27 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-16:27 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 通过articleId查找相应的标签------------------------------------
2018/12/29-16:27 [http-nio-12080-exec-7] DEBUG org.lis_dao.CommentDao.countByExample- <==      Total: 1
2018/12/29-16:27 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 通过文章的id统计其评论数------------------------------------
2018/12/29-16:27 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==>  Preparing: select comment_id as commentId,comment_content as commentContent,title,comment.create_time as createTime,username from comment inner join user on comment.user_id = user.user_id inner join article on comment.article_id = article.article_id where comment.article_id = ? order by comment.create_time 
2018/12/29-16:27 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==> Parameters: 8(Long)
2018/12/29-16:27 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- <==      Total: 2
2018/12/29-16:27 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 通过文章id获取评论列表------------------------------------
2018/12/29-16:27 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:27 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:27 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:27 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:27 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:27 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:27 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:27 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:27 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:27 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 3(Long)
2018/12/29-16:27 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 0
2018/12/29-16:27 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:27 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:27 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:27 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:27 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:27 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:27 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 3(Long)
2018/12/29-16:27 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 0
2018/12/29-16:27 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:27 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:27 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:27 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:27 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:27 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:27 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:27 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:27 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:27 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:27 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 3(Long)
2018/12/29-16:27 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 0
2018/12/29-16:27 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:27 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:27 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:27 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:27 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:27 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:27 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:27 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:27 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:27 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:27 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 3(Long)
2018/12/29-16:27 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 0
2018/12/29-16:27 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:27 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:27 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 3(Long)
2018/12/29-16:27 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 0
2018/12/29-16:27 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:27 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:27 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 3(Long)
2018/12/29-16:27 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 0
2018/12/29-16:27 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:27 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:27 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:27 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:27 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:27 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:27 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:27 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:27 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:27 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:27 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:27 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:27 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:27 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:27 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 3(Long)
2018/12/29-16:27 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 0
2018/12/29-16:27 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:27 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:27 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 3(Long)
2018/12/29-16:27 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 0
2018/12/29-16:27 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:27 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:27 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 3(Long)
2018/12/29-16:27 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 0
2018/12/29-16:27 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:27 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:27 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 3(Long)
2018/12/29-16:27 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 0
2018/12/29-16:27 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:27 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:27 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:27 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:27 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:27 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:27 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 3(Long)
2018/12/29-16:27 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 0
2018/12/29-16:27 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:27 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:27 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 3(Long)
2018/12/29-16:27 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 0
2018/12/29-16:27 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:27 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:27 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:27 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:27 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:27 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:27 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:27 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:27 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:27 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:27 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 3(Long)
2018/12/29-16:27 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 0
2018/12/29-16:27 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:28 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:28 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:28 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:28 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:28 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:28 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:28 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:28 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:28 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:28 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:28 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:28 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:28 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:28 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 3(Long)
2018/12/29-16:28 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 0
2018/12/29-16:28 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:28 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:28 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:28 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:28 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:28 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:28 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:28 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:28 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:28 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:28 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 3(Long)
2018/12/29-16:28 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 0
2018/12/29-16:28 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:29 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:29 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:29 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:29 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:29 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-16:29 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-16:29 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-16:29 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-16:29 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-16:29 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-16:29 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-16:29 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-16:29 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-16:29 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-16:29 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-16:29 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-16:29 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-16:29 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-16:29 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-16:29 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 3(Integer), 3(Integer)
2018/12/29-16:29 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-16:29 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-16:29 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-16:29 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 8(Long)
2018/12/29-16:29 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-16:29 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 通过文章id查找文章------------------------------------
2018/12/29-16:29 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-16:29 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 8(Long)
2018/12/29-16:29 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 2
2018/12/29-16:29 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-16:29 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-16:29 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-16:29 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-16:29 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-16:29 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-16:29 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 通过articleId查找相应的标签------------------------------------
2018/12/29-16:29 [http-nio-12080-exec-3] DEBUG org.lis_dao.CommentDao.countByExample- ==>  Preparing: select count(*) from comment WHERE ( article_id = ? ) 
2018/12/29-16:29 [http-nio-12080-exec-3] DEBUG org.lis_dao.CommentDao.countByExample- ==> Parameters: 8(Long)
2018/12/29-16:29 [http-nio-12080-exec-3] DEBUG org.lis_dao.CommentDao.countByExample- <==      Total: 1
2018/12/29-16:29 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 通过文章的id统计其评论数------------------------------------
2018/12/29-16:29 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==>  Preparing: select comment_id as commentId,comment_content as commentContent,title,comment.create_time as createTime,username from comment inner join user on comment.user_id = user.user_id inner join article on comment.article_id = article.article_id where comment.article_id = ? order by comment.create_time 
2018/12/29-16:29 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==> Parameters: 8(Long)
2018/12/29-16:29 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- <==      Total: 2
2018/12/29-16:29 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 通过文章id获取评论列表------------------------------------
2018/12/29-16:29 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:29 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:29 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:29 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:29 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:29 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:29 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:29 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:29 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:29 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 3(Long)
2018/12/29-16:29 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 0
2018/12/29-16:29 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:29 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:29 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 3(Long)
2018/12/29-16:29 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 0
2018/12/29-16:29 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:29 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:29 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 3(Long)
2018/12/29-16:29 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 0
2018/12/29-16:29 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:29 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:29 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 3(Long)
2018/12/29-16:29 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 0
2018/12/29-16:29 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:29 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:29 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 3(Long)
2018/12/29-16:29 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 0
2018/12/29-16:29 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:29 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:29 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 3(Long)
2018/12/29-16:29 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 0
2018/12/29-16:29 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:29 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:29 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 3(Long)
2018/12/29-16:29 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 0
2018/12/29-16:29 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:29 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:29 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 3(Long)
2018/12/29-16:29 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 0
2018/12/29-16:29 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:29 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:29 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 3(Long)
2018/12/29-16:29 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 0
2018/12/29-16:29 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:29 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:29 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 3(Long)
2018/12/29-16:29 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 0
2018/12/29-16:29 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:29 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:29 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 3(Long)
2018/12/29-16:29 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 0
2018/12/29-16:29 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:29 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:29 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 3(Long)
2018/12/29-16:29 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 0
2018/12/29-16:29 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:29 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:29 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 3(Long)
2018/12/29-16:29 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 0
2018/12/29-16:29 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:29 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:29 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 3(Long)
2018/12/29-16:29 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 0
2018/12/29-16:29 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:29 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:29 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:29 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:29 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:29 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:29 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 3(Long)
2018/12/29-16:29 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 0
2018/12/29-16:29 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:29 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:29 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:29 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:29 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:29 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:29 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:29 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:29 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:29 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:29 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 3(Long)
2018/12/29-16:29 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 0
2018/12/29-16:29 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:33 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-16:33 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-16:33 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-16:33 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-16:33 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-16:33 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-16:33 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-16:33 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-16:33 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-16:33 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-16:33 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-16:33 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-16:33 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 8(Long)
2018/12/29-16:33 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-16:33 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 通过文章id查找文章------------------------------------
2018/12/29-16:33 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-16:33 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 8(Long)
2018/12/29-16:33 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 2
2018/12/29-16:33 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-16:33 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-16:33 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-16:33 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-16:33 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-16:33 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-16:33 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 通过articleId查找相应的标签------------------------------------
2018/12/29-16:33 [http-nio-12080-exec-6] DEBUG org.lis_dao.CommentDao.countByExample- ==>  Preparing: select count(*) from comment WHERE ( article_id = ? ) 
2018/12/29-16:33 [http-nio-12080-exec-6] DEBUG org.lis_dao.CommentDao.countByExample- ==> Parameters: 8(Long)
2018/12/29-16:33 [http-nio-12080-exec-6] DEBUG org.lis_dao.CommentDao.countByExample- <==      Total: 1
2018/12/29-16:33 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 通过文章的id统计其评论数------------------------------------
2018/12/29-16:33 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==>  Preparing: select comment_id as commentId,comment_content as commentContent,title,comment.create_time as createTime,username from comment inner join user on comment.user_id = user.user_id inner join article on comment.article_id = article.article_id where comment.article_id = ? order by comment.create_time 
2018/12/29-16:33 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==> Parameters: 8(Long)
2018/12/29-16:33 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- <==      Total: 2
2018/12/29-16:33 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 通过文章id获取评论列表------------------------------------
2018/12/29-16:33 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:33 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 3(Long)
2018/12/29-16:33 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 0
2018/12/29-16:33 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:33 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:33 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:33 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:33 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:33 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:33 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:33 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:33 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:33 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:33 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:33 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:33 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:33 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:33 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:33 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:33 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:33 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:33 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 3(Long)
2018/12/29-16:33 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 0
2018/12/29-16:33 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:33 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:33 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 3(Long)
2018/12/29-16:33 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 0
2018/12/29-16:33 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:33 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:33 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 3(Long)
2018/12/29-16:33 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 0
2018/12/29-16:33 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:33 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:33 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 3(Long)
2018/12/29-16:33 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 0
2018/12/29-16:33 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:34 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:34 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:34 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:34 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:34 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:34 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:34 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:34 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:34 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:34 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 3(Long)
2018/12/29-16:34 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 0
2018/12/29-16:34 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:34 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:34 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 3(Long)
2018/12/29-16:34 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 0
2018/12/29-16:34 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:34 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:34 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:34 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:34 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:34 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:34 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:34 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:34 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:37 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:37 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 3(Long)
2018/12/29-16:37 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 0
2018/12/29-16:37 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:38 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-16:38 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-16:38 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-16:38 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-16:38 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-16:38 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-16:38 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-16:38 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-16:38 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-16:38 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-16:38 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-16:38 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-16:38 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 8(Long)
2018/12/29-16:38 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-16:38 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 通过文章id查找文章------------------------------------
2018/12/29-16:38 [http-nio-12080-exec-2] DEBUG org.lis_dao.CommentDao.countByExample- ==>  Preparing: select count(*) from comment WHERE ( article_id = ? ) 
2018/12/29-16:38 [http-nio-12080-exec-2] DEBUG org.lis_dao.CommentDao.countByExample- ==> Parameters: 8(Long)
2018/12/29-16:38 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-16:38 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 8(Long)
2018/12/29-16:38 [http-nio-12080-exec-2] DEBUG org.lis_dao.CommentDao.countByExample- <==      Total: 1
2018/12/29-16:38 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 2
2018/12/29-16:38 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 通过文章的id统计其评论数------------------------------------
2018/12/29-16:38 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-16:38 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-16:38 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-16:38 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-16:38 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-16:38 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==>  Preparing: select comment_id as commentId,comment_content as commentContent,title,comment.create_time as createTime,username from comment inner join user on comment.user_id = user.user_id inner join article on comment.article_id = article.article_id where comment.article_id = ? order by comment.create_time 
2018/12/29-16:38 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==> Parameters: 8(Long)
2018/12/29-16:38 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-16:38 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 通过articleId查找相应的标签------------------------------------
2018/12/29-16:38 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- <==      Total: 2
2018/12/29-16:38 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 通过文章id获取评论列表------------------------------------
2018/12/29-16:38 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:38 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:38 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:38 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:38 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:38 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:38 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:38 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:38 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-16:38 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-16:38 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-16:38 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-16:38 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-16:38 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-16:38 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-16:38 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-16:38 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-16:38 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-16:38 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-16:38 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-16:38 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 8(Long)
2018/12/29-16:38 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-16:38 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 通过文章id查找文章------------------------------------
2018/12/29-16:38 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-16:38 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 8(Long)
2018/12/29-16:38 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 2
2018/12/29-16:38 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-16:38 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-16:38 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-16:38 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-16:38 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-16:38 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-16:38 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 通过articleId查找相应的标签------------------------------------
2018/12/29-16:38 [http-nio-12080-exec-9] DEBUG org.lis_dao.CommentDao.countByExample- ==>  Preparing: select count(*) from comment WHERE ( article_id = ? ) 
2018/12/29-16:38 [http-nio-12080-exec-9] DEBUG org.lis_dao.CommentDao.countByExample- ==> Parameters: 8(Long)
2018/12/29-16:38 [http-nio-12080-exec-9] DEBUG org.lis_dao.CommentDao.countByExample- <==      Total: 1
2018/12/29-16:38 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 通过文章的id统计其评论数------------------------------------
2018/12/29-16:38 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==>  Preparing: select comment_id as commentId,comment_content as commentContent,title,comment.create_time as createTime,username from comment inner join user on comment.user_id = user.user_id inner join article on comment.article_id = article.article_id where comment.article_id = ? order by comment.create_time 
2018/12/29-16:38 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==> Parameters: 8(Long)
2018/12/29-16:38 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- <==      Total: 2
2018/12/29-16:38 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 通过文章id获取评论列表------------------------------------
2018/12/29-16:39 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:39 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:39 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:39 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:39 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-16:39 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-16:39 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-16:39 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-16:39 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-16:39 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-16:39 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-16:39 [http-nio-12080-exec-7] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-16:39 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-16:39 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-16:39 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-16:39 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-16:39 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 8(Long)
2018/12/29-16:39 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-16:39 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 通过文章id查找文章------------------------------------
2018/12/29-16:39 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-16:39 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 8(Long)
2018/12/29-16:39 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 2
2018/12/29-16:39 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-16:39 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-16:39 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-16:39 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-16:39 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-16:39 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-16:39 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 通过articleId查找相应的标签------------------------------------
2018/12/29-16:39 [http-nio-12080-exec-3] DEBUG org.lis_dao.CommentDao.countByExample- ==>  Preparing: select count(*) from comment WHERE ( article_id = ? ) 
2018/12/29-16:39 [http-nio-12080-exec-3] DEBUG org.lis_dao.CommentDao.countByExample- ==> Parameters: 8(Long)
2018/12/29-16:39 [http-nio-12080-exec-3] DEBUG org.lis_dao.CommentDao.countByExample- <==      Total: 1
2018/12/29-16:39 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 通过文章的id统计其评论数------------------------------------
2018/12/29-16:39 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==>  Preparing: select comment_id as commentId,comment_content as commentContent,title,comment.create_time as createTime,username from comment inner join user on comment.user_id = user.user_id inner join article on comment.article_id = article.article_id where comment.article_id = ? order by comment.create_time 
2018/12/29-16:39 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==> Parameters: 8(Long)
2018/12/29-16:39 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- <==      Total: 2
2018/12/29-16:39 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 通过文章id获取评论列表------------------------------------
2018/12/29-16:55 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-16:55 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-16:55 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-16:55 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-16:55 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-16:55 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-16:55 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-16:55 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-16:55 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-16:55 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-16:55 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-16:55 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-16:55 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 8(Long)
2018/12/29-16:55 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-16:55 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 通过文章id查找文章------------------------------------
2018/12/29-16:55 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-16:55 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 8(Long)
2018/12/29-16:55 [http-nio-12080-exec-3] DEBUG org.lis_dao.CommentDao.countByExample- ==>  Preparing: select count(*) from comment WHERE ( article_id = ? ) 
2018/12/29-16:55 [http-nio-12080-exec-3] DEBUG org.lis_dao.CommentDao.countByExample- ==> Parameters: 8(Long)
2018/12/29-16:55 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 2
2018/12/29-16:55 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-16:55 [http-nio-12080-exec-3] DEBUG org.lis_dao.CommentDao.countByExample- <==      Total: 1
2018/12/29-16:55 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-16:55 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 通过文章的id统计其评论数------------------------------------
2018/12/29-16:55 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-16:55 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-16:55 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-16:55 [http-nio-12080-exec-6] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-16:55 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 通过articleId查找相应的标签------------------------------------
2018/12/29-16:55 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==>  Preparing: select comment_id as commentId,comment_content as commentContent,title,comment.create_time as createTime,username from comment inner join user on comment.user_id = user.user_id inner join article on comment.article_id = article.article_id where comment.article_id = ? order by comment.create_time 
2018/12/29-16:55 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==> Parameters: 8(Long)
2018/12/29-16:55 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- <==      Total: 2
2018/12/29-16:55 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 通过文章id获取评论列表------------------------------------
2018/12/29-16:55 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:55 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:55 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:55 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:55 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:55 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:55 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:55 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:55 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:55 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 3(Long)
2018/12/29-16:55 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 0
2018/12/29-16:55 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:55 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:55 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:55 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:55 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:55 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:55 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:55 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:55 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:55 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:55 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:55 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:55 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:55 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:55 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:55 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:55 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:55 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:55 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:55 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:55 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:55 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:55 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:55 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:55 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:55 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:55 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:55 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:55 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:55 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:55 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:55 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:55 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:55 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:55 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 3(Long)
2018/12/29-16:55 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 0
2018/12/29-16:55 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:56 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-16:56 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-16:56 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-16:56 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-16:56 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-16:56 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-16:56 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 0(Integer), 3(Integer)
2018/12/29-16:56 [http-nio-12080-exec-4] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-16:56 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-16:56 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-16:56 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-16:56 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-16:56 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-16:56 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-16:56 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-16:56 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 3(Integer), 3(Integer)
2018/12/29-16:56 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 3
2018/12/29-16:56 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-16:56 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-16:56 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 8(Long)
2018/12/29-16:56 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-16:56 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 通过文章id查找文章------------------------------------
2018/12/29-16:56 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-16:56 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 8(Long)
2018/12/29-16:56 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 2
2018/12/29-16:56 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-16:56 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-16:56 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-16:56 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-16:56 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-16:56 [http-nio-12080-exec-3] DEBUG org.lis_dao.CommentDao.countByExample- ==>  Preparing: select count(*) from comment WHERE ( article_id = ? ) 
2018/12/29-16:56 [http-nio-12080-exec-3] DEBUG org.lis_dao.CommentDao.countByExample- ==> Parameters: 8(Long)
2018/12/29-16:56 [http-nio-12080-exec-5] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-16:56 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 通过articleId查找相应的标签------------------------------------
2018/12/29-16:56 [http-nio-12080-exec-3] DEBUG org.lis_dao.CommentDao.countByExample- <==      Total: 1
2018/12/29-16:56 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 通过文章的id统计其评论数------------------------------------
2018/12/29-16:56 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==>  Preparing: select comment_id as commentId,comment_content as commentContent,title,comment.create_time as createTime,username from comment inner join user on comment.user_id = user.user_id inner join article on comment.article_id = article.article_id where comment.article_id = ? order by comment.create_time 
2018/12/29-16:56 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==> Parameters: 8(Long)
2018/12/29-16:56 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- <==      Total: 2
2018/12/29-16:56 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 通过文章id获取评论列表------------------------------------
2018/12/29-16:56 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:56 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 3(Long)
2018/12/29-16:56 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 0
2018/12/29-16:56 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:56 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:56 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 3(Long)
2018/12/29-16:56 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 0
2018/12/29-16:56 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:56 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:56 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 3(Long)
2018/12/29-16:56 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 0
2018/12/29-16:56 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:56 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:56 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:56 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 1
2018/12/29-16:56 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:57 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:57 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:57 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 2
2018/12/29-16:57 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:57 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:57 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:57 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 2
2018/12/29-16:57 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:58 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:58 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:58 [http-nio-12080-exec-3] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 2
2018/12/29-16:58 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:58 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:58 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:58 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 2
2018/12/29-16:58 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-16:58 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-16:58 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-16:58 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 2
2018/12/29-16:58 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-17:21 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-17:21 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 3(Long)
2018/12/29-17:21 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 0
2018/12/29-17:21 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-17:21 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-17:21 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 3(Long)
2018/12/29-17:21 [http-nio-12080-exec-1] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 0
2018/12/29-17:21 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-17:21 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-17:21 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-17:21 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 2
2018/12/29-17:21 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-17:21 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-17:21 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-17:21 [http-nio-12080-exec-10] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 2
2018/12/29-17:21 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-17:21 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-17:21 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-17:21 [http-nio-12080-exec-7] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 2
2018/12/29-17:21 [http-nio-12080-exec-7] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-17:21 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==>  Preparing: select reply_id as replyId,reply_content as replyContent,username,replay.create_time as createTime from replay inner join user on replay.user_id = user.user_id inner join comment on replay.comment_id = comment.comment_id where replay.comment_id = ? order by replay.create_time 
2018/12/29-17:21 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- ==> Parameters: 2(Long)
2018/12/29-17:21 [http-nio-12080-exec-5] DEBUG org.lis_dao.ArticleDao.selectReplayListByCommentId- <==      Total: 2
2018/12/29-17:21 [http-nio-12080-exec-5] INFO  org.hzqisheng.controller.ArticleController- 通过评论id查找回复------------------------------------
2018/12/29-17:21 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-17:21 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-17:21 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-17:21 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-17:23 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==>  Preparing: SELECT count(*) FROM article 
2018/12/29-17:23 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- ==> Parameters: 
2018/12/29-17:23 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample_COUNT- <==      Total: 1
2018/12/29-17:23 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article limit ?,? 
2018/12/29-17:23 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- ==> Parameters: 6(Integer), 3(Integer)
2018/12/29-17:23 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleDao.selectByExample- <==      Total: 1
2018/12/29-17:23 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 获取文章列表------------------------------------
2018/12/29-17:23 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-17:23 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-17:23 [http-nio-12080-exec-2] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-17:23 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 通过文章id查找文章------------------------------------
2018/12/29-17:23 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-17:23 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-17:23 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-17:23 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-17:23 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-17:23 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-17:23 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-17:23 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-17:23 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-17:23 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-17:23 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-17:23 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-17:23 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-17:23 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-17:23 [http-nio-12080-exec-9] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-17:23 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 通过articleId查找相应的标签------------------------------------
2018/12/29-17:23 [http-nio-12080-exec-1] DEBUG org.lis_dao.CommentDao.countByExample- ==>  Preparing: select count(*) from comment WHERE ( article_id = ? ) 
2018/12/29-17:23 [http-nio-12080-exec-1] DEBUG org.lis_dao.CommentDao.countByExample- ==> Parameters: 7(Long)
2018/12/29-17:23 [http-nio-12080-exec-1] DEBUG org.lis_dao.CommentDao.countByExample- <==      Total: 1
2018/12/29-17:23 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 通过文章的id统计其评论数------------------------------------
2018/12/29-17:23 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==>  Preparing: select comment_id as commentId,comment_content as commentContent,title,comment.create_time as createTime,username from comment inner join user on comment.user_id = user.user_id inner join article on comment.article_id = article.article_id where comment.article_id = ? order by comment.create_time 
2018/12/29-17:23 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==> Parameters: 7(Long)
2018/12/29-17:23 [http-nio-12080-exec-4] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- <==      Total: 0
2018/12/29-17:23 [http-nio-12080-exec-4] INFO  org.hzqisheng.controller.ArticleController- 通过文章id获取评论列表------------------------------------
2018/12/29-17:23 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-17:23 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-17:23 [http-nio-12080-exec-10] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-17:23 [http-nio-12080-exec-10] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-17:24 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-17:24 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-17:24 [http-nio-12080-exec-3] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-17:24 [http-nio-12080-exec-3] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
2018/12/29-17:24 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==>  Preparing: select article_id, title, expect, author, read_count, create_time, update_time, content from article where article_id = ? 
2018/12/29-17:24 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- ==> Parameters: 7(Long)
2018/12/29-17:24 [http-nio-12080-exec-6] DEBUG org.lis_dao.ArticleDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-17:24 [http-nio-12080-exec-6] INFO  org.hzqisheng.controller.ArticleController- 通过文章id查找文章------------------------------------
2018/12/29-17:24 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==>  Preparing: select article_category_id, article__id, category_id from article_category WHERE ( article__id = ? ) 
2018/12/29-17:24 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- ==> Parameters: 7(Long)
2018/12/29-17:24 [http-nio-12080-exec-8] DEBUG org.lis_dao.ArticleCategoryDao.selectByExample- <==      Total: 4
2018/12/29-17:24 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-17:24 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 3(Long)
2018/12/29-17:24 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-17:24 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-17:24 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 1(Long)
2018/12/29-17:24 [http-nio-12080-exec-2] DEBUG org.lis_dao.CommentDao.countByExample- ==>  Preparing: select count(*) from comment WHERE ( article_id = ? ) 
2018/12/29-17:24 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-17:24 [http-nio-12080-exec-2] DEBUG org.lis_dao.CommentDao.countByExample- ==> Parameters: 7(Long)
2018/12/29-17:24 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-17:24 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 2(Long)
2018/12/29-17:24 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-17:24 [http-nio-12080-exec-2] DEBUG org.lis_dao.CommentDao.countByExample- <==      Total: 1
2018/12/29-17:24 [http-nio-12080-exec-2] INFO  org.hzqisheng.controller.ArticleController- 通过文章的id统计其评论数------------------------------------
2018/12/29-17:24 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==>  Preparing: select category_id, category_name from category where category_id = ? 
2018/12/29-17:24 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- ==> Parameters: 4(Long)
2018/12/29-17:24 [http-nio-12080-exec-8] DEBUG org.lis_dao.CategoryDao.selectByPrimaryKey- <==      Total: 1
2018/12/29-17:24 [http-nio-12080-exec-8] INFO  org.hzqisheng.controller.ArticleController- 通过articleId查找相应的标签------------------------------------
2018/12/29-17:24 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==>  Preparing: select comment_id as commentId,comment_content as commentContent,title,comment.create_time as createTime,username from comment inner join user on comment.user_id = user.user_id inner join article on comment.article_id = article.article_id where comment.article_id = ? order by comment.create_time 
2018/12/29-17:24 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- ==> Parameters: 7(Long)
2018/12/29-17:24 [http-nio-12080-exec-9] DEBUG org.lis_dao.ArticleDao.selectCommentListByArticleId- <==      Total: 0
2018/12/29-17:24 [http-nio-12080-exec-9] INFO  org.hzqisheng.controller.ArticleController- 通过文章id获取评论列表------------------------------------
2018/12/29-17:24 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- ==>  Preparing: select category_id, category_name from category 
2018/12/29-17:24 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- ==> Parameters: 
2018/12/29-17:24 [http-nio-12080-exec-1] DEBUG org.lis_dao.CategoryDao.selectByExample- <==      Total: 4
2018/12/29-17:24 [http-nio-12080-exec-1] INFO  org.hzqisheng.controller.ArticleController- 用户注册------------------------------------
